Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[824,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[385,0,0,"-"],creation_functions:[386,0,0,"-"],data_type_functions:[389,0,0,"-"],data_types:[393,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[387,2,1,""],zeros:[388,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[389,1,1,""],finfo:[391,2,1,""],iinfo:[392,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[389,3,1,""],bits:[389,3,1,""],eps:[389,3,1,""],max:[389,3,1,""],min:[389,3,1,""],smallest_normal:[389,3,1,""]},"ivy.functional.backends.numpy.core":{device:[429,0,0,"-"],general:[431,0,0,"-"],gradients:[465,0,0,"-"],image:[470,0,0,"-"],linear_algebra:[474,0,0,"-"],logic:[478,0,0,"-"],math:[479,0,0,"-"],random:[481,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[430,1,1,""],clear_mem_on_dev:[429,2,1,""],dev:[429,2,1,""],dev_from_str:[429,2,1,""],dev_to_str:[429,2,1,""],gpu_is_available:[429,2,1,""],num_gpus:[429,2,1,""],to_dev:[429,2,1,""],tpu_is_available:[429,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[430,3,1,""],start:[430,3,1,""],stop:[430,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[431,2,1,""],arange:[432,2,1,""],argmax:[433,2,1,""],argmin:[434,2,1,""],array:[435,2,1,""],asarray:[431,2,1,""],astype:[431,2,1,""],cast:[436,2,1,""],ceil:[431,2,1,""],clip:[431,2,1,""],compile:[437,2,1,""],concatenate:[438,2,1,""],constant_pad:[431,2,1,""],container_types:[431,2,1,""],copy_array:[431,2,1,""],cumprod:[439,2,1,""],current_framework_str:[431,2,1,""],dtype:[440,2,1,""],dtype_bits:[441,2,1,""],dtype_from_str:[442,2,1,""],dtype_to_str:[443,2,1,""],equal:[431,2,1,""],floor:[431,2,1,""],floormod:[431,2,1,""],full:[444,2,1,""],gather:[445,2,1,""],gather_nd:[446,2,1,""],get_num_dims:[431,2,1,""],identity:[447,2,1,""],indices_where:[448,2,1,""],inplace_arrays_supported:[431,2,1,""],inplace_decrement:[449,2,1,""],inplace_increment:[450,2,1,""],inplace_update:[451,2,1,""],inplace_variables_supported:[431,2,1,""],is_array:[452,2,1,""],linear_resample:[453,2,1,""],linspace:[454,2,1,""],logspace:[455,2,1,""],matmul:[431,2,1,""],meshgrid:[431,2,1,""],multiprocessing:[431,2,1,""],one_hot:[456,2,1,""],ones_like:[457,2,1,""],round:[431,2,1,""],scatter_flat:[458,2,1,""],scatter_nd:[459,2,1,""],shape:[431,2,1,""],split:[460,2,1,""],squeeze:[461,2,1,""],to_list:[431,2,1,""],to_numpy:[431,2,1,""],to_scalar:[431,2,1,""],transpose:[462,2,1,""],unstack:[463,2,1,""],where:[431,2,1,""],zero_pad:[431,2,1,""],zeros_like:[464,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[466,2,1,""],is_variable:[467,2,1,""],stop_gradient:[468,2,1,""],variable:[469,2,1,""],variable_data:[465,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[471,2,1,""],gradient_image:[472,2,1,""],stack_images:[473,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[475,2,1,""],qr:[476,2,1,""],vector_to_skew_symmetric_matrix:[477,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[480,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[482,2,1,""],randint:[481,2,1,""],random_normal:[481,2,1,""],random_uniform:[481,2,1,""],seed:[481,2,1,""],shuffle:[481,2,1,""]},"ivy.functional.ivy":{array_api:[825,0,0,"-"],core:[859,0,0,"-"],nn:[1199,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[826,0,0,"-"],creation_functions:[827,0,0,"-"],data_type_functions:[830,0,0,"-"],data_types:[833,0,0,"-"],elementwise_functions:[834,0,0,"-"],function_and_method_signatures:[845,0,0,"-"],linear_algebra:[846,0,0,"-"],manipulation_functions:[849,0,0,"-"],searching_functions:[851,0,0,"-"],set_functions:[852,0,0,"-"],sorting_functions:[853,0,0,"-"],statistical_functions:[855,0,0,"-"],utility_functions:[856,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[826,4,1,""],nan:[826,4,1,""],pi:[826,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[828,2,1,""],zeros:[829,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[831,2,1,""],iinfo:[832,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[835,2,1,""],bitwise_and:[836,2,1,""],cos:[837,2,1,""],cosh:[838,2,1,""],isfinite:[839,2,1,""],isnan:[840,2,1,""],less:[841,2,1,""],log2:[842,2,1,""],logical_not:[843,2,1,""],sqrt:[844,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[847,2,1,""],vector_norm:[848,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[850,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[854,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[857,2,1,""],any:[858,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[860,0,0,"-"],compilation:[899,0,0,"-"],device:[901,0,0,"-"],dtype:[951,0,0,"-"],general:[975,0,0,"-"],gradients:[1073,0,0,"-"],image:[1089,0,0,"-"],linalg:[1096,0,0,"-"],logic:[1104,0,0,"-"],math:[1107,0,0,"-"],meta:[1123,0,0,"-"],multi_node:[1127,0,0,"-"],nest:[1171,0,0,"-"],random:[1183,0,0,"-"],reductions:[1190,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[861,2,1,""],builtin_add:[862,2,1,""],builtin_and:[863,2,1,""],builtin_bool:[864,2,1,""],builtin_contains:[865,2,1,""],builtin_deepcopy:[866,2,1,""],builtin_dir:[867,2,1,""],builtin_eq:[868,2,1,""],builtin_float:[869,2,1,""],builtin_floordiv:[870,2,1,""],builtin_ge:[871,2,1,""],builtin_getattr:[872,2,1,""],builtin_getattribute:[873,2,1,""],builtin_getitem:[874,2,1,""],builtin_gt:[875,2,1,""],builtin_int:[876,2,1,""],builtin_invert:[877,2,1,""],builtin_le:[878,2,1,""],builtin_lt:[879,2,1,""],builtin_mul:[880,2,1,""],builtin_ne:[881,2,1,""],builtin_neg:[882,2,1,""],builtin_or:[883,2,1,""],builtin_pos:[884,2,1,""],builtin_pow:[885,2,1,""],builtin_radd:[886,2,1,""],builtin_rand:[887,2,1,""],builtin_rfloordiv:[888,2,1,""],builtin_rmul:[889,2,1,""],builtin_ror:[890,2,1,""],builtin_rpow:[891,2,1,""],builtin_rsub:[892,2,1,""],builtin_rtruediv:[893,2,1,""],builtin_rxor:[894,2,1,""],builtin_setitem:[895,2,1,""],builtin_sub:[896,2,1,""],builtin_truediv:[897,2,1,""],builtin_xor:[898,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[900,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[901,1,1,""],DevClonedItem:[903,1,1,""],DevClonedIter:[904,1,1,""],DevClonedNest:[905,1,1,""],DevDistItem:[906,1,1,""],DevDistIter:[907,1,1,""],DevDistNest:[908,1,1,""],DevManager:[901,1,1,""],DevMapper:[910,1,1,""],DevMapperMultiProc:[911,1,1,""],MultiDev:[901,1,1,""],MultiDevItem:[913,1,1,""],MultiDevIter:[914,1,1,""],MultiDevNest:[915,1,1,""],Profiler:[916,1,1,""],clear_mem_on_dev:[917,2,1,""],default_device:[918,2,1,""],dev:[919,2,1,""],dev_clone:[920,2,1,""],dev_clone_array:[921,2,1,""],dev_clone_iter:[922,2,1,""],dev_clone_nest:[923,2,1,""],dev_dist:[924,2,1,""],dev_dist_array:[925,2,1,""],dev_dist_iter:[926,2,1,""],dev_dist_nest:[927,2,1,""],dev_from_str:[928,2,1,""],dev_to_str:[929,2,1,""],dev_unify:[930,2,1,""],dev_unify_array:[931,2,1,""],dev_unify_iter:[932,2,1,""],dev_unify_nest:[933,2,1,""],dev_util:[934,2,1,""],get_all_arrays_on_dev:[935,2,1,""],gpu_is_available:[936,2,1,""],num_arrays_on_dev:[937,2,1,""],num_cpu_cores:[938,2,1,""],num_gpus:[939,2,1,""],percent_used_mem_on_dev:[940,2,1,""],print_all_arrays_on_dev:[941,2,1,""],set_default_device:[942,2,1,""],set_split_factor:[943,2,1,""],split_factor:[944,2,1,""],split_func_call:[945,2,1,""],to_dev:[946,2,1,""],total_mem_on_dev:[947,2,1,""],tpu_is_available:[948,2,1,""],unset_default_device:[949,2,1,""],used_mem_on_dev:[950,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[901,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[901,3,1,""],da_tune_step:[901,3,1,""],dim_size:[901,3,1,""],ds_tune_step:[901,3,1,""],map:[901,3,1,""],repeated_config_check:[901,3,1,""],tune_step:[901,3,1,""],tuned:[901,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[910,3,1,""],map:[910,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[911,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[901,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[913,3,1,""],items:[913,3,1,""],keys:[913,3,1,""],shape:[913,3,1,""],values:[913,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[914,3,1,""],at_dev:[914,3,1,""],at_devs:[914,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[915,3,1,""],at_dev:[915,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[916,3,1,""],start:[916,3,1,""],stop:[916,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[951,1,1,""],DefaultFloatDtype:[951,1,1,""],DefaultIntDtype:[951,1,1,""],astype:[951,2,1,""],cast:[955,2,1,""],closest_valid_dtype:[956,2,1,""],convert_dtype:[957,2,1,""],default_dtype:[958,2,1,""],default_float_dtype:[959,2,1,""],default_int_dtype:[960,2,1,""],dtype:[961,2,1,""],dtype_bits:[962,2,1,""],dtype_from_str:[963,2,1,""],dtype_to_str:[964,2,1,""],invalid_dtype:[965,2,1,""],is_float_dtype:[966,2,1,""],is_int_dtype:[967,2,1,""],set_default_dtype:[968,2,1,""],set_default_float_dtype:[969,2,1,""],set_default_int_dtype:[970,2,1,""],unset_default_dtype:[971,2,1,""],unset_default_float_dtype:[972,2,1,""],unset_default_int_dtype:[973,2,1,""],valid_dtype:[974,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[951,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[951,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[951,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1000,2,1,""],abs:[976,2,1,""],all_equal:[977,2,1,""],arange:[978,2,1,""],arg_names:[979,2,1,""],argmax:[980,2,1,""],argmin:[981,2,1,""],array:[982,2,1,""],array_equal:[983,2,1,""],arrays_equal:[984,2,1,""],asarray:[975,2,1,""],assert_supports_inplace:[985,2,1,""],broadcast_to:[986,2,1,""],cache_fn:[987,2,1,""],ceil:[988,2,1,""],clip:[989,2,1,""],clip_matrix_norm:[990,2,1,""],clip_vector_norm:[991,2,1,""],concatenate:[992,2,1,""],constant_pad:[993,2,1,""],container_types:[994,2,1,""],copy_array:[995,2,1,""],cross:[996,2,1,""],cumprod:[997,2,1,""],cumsum:[998,2,1,""],current_framework_str:[999,2,1,""],einops_rearrange:[1001,2,1,""],einops_reduce:[1002,2,1,""],einops_repeat:[1003,2,1,""],equal:[1004,2,1,""],exists:[1005,2,1,""],expand_dims:[1006,2,1,""],floor:[1007,2,1,""],floormod:[1008,2,1,""],fourier_encode:[1009,2,1,""],full:[1010,2,1,""],gather:[1011,2,1,""],gather_nd:[1012,2,1,""],get_all_arrays_in_memory:[1013,2,1,""],get_min_base:[1014,2,1,""],get_min_denominator:[1015,2,1,""],get_num_dims:[1016,2,1,""],get_referrers_recursive:[1017,2,1,""],has_nans:[1018,2,1,""],identity:[1019,2,1,""],indices_where:[1020,2,1,""],inplace_arrays_supported:[1021,2,1,""],inplace_decrement:[1022,2,1,""],inplace_increment:[1023,2,1,""],inplace_update:[1024,2,1,""],inplace_variables_supported:[1025,2,1,""],is_array:[1026,2,1,""],isinf:[1027,2,1,""],linear_resample:[1028,2,1,""],linspace:[1029,2,1,""],logspace:[1030,2,1,""],match_kwargs:[1031,2,1,""],matmul:[1032,2,1,""],maximum:[1033,2,1,""],meshgrid:[1034,2,1,""],minimum:[1035,2,1,""],multiprocessing:[1036,2,1,""],num_arrays_in_memory:[1037,2,1,""],one_hot:[1038,2,1,""],ones:[1039,2,1,""],ones_like:[1040,2,1,""],print_all_arrays_in_memory:[1041,2,1,""],queue_timeout:[1042,2,1,""],repeat:[1043,2,1,""],reshape:[1044,2,1,""],round:[1045,2,1,""],scatter_flat:[1046,2,1,""],scatter_nd:[1047,2,1,""],set_min_base:[1048,2,1,""],set_min_denominator:[1049,2,1,""],set_queue_timeout:[1050,2,1,""],set_tmp_dir:[1051,2,1,""],shape:[1052,2,1,""],shape_to_tuple:[1053,2,1,""],split:[1054,2,1,""],squeeze:[1055,2,1,""],stable_divide:[1056,2,1,""],stable_pow:[1057,2,1,""],stack:[1058,2,1,""],supports_inplace:[1059,2,1,""],swapaxes:[1060,2,1,""],tile:[1061,2,1,""],tmp_dir:[1062,2,1,""],to_list:[1063,2,1,""],to_numpy:[1064,2,1,""],to_scalar:[1065,2,1,""],transpose:[1066,2,1,""],try_else_none:[1067,2,1,""],unstack:[1068,2,1,""],value_is_nan:[1069,2,1,""],where:[1070,2,1,""],zero_pad:[1071,2,1,""],zeros_like:[1072,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1073,1,1,""],adam_step:[1075,2,1,""],adam_update:[1076,2,1,""],execute_with_gradients:[1077,2,1,""],gradient_descent_update:[1078,2,1,""],is_variable:[1079,2,1,""],lamb_update:[1080,2,1,""],lars_update:[1081,2,1,""],optimizer_update:[1082,2,1,""],set_with_grads:[1083,2,1,""],stop_gradient:[1084,2,1,""],unset_with_grads:[1085,2,1,""],variable:[1086,2,1,""],variable_data:[1087,2,1,""],with_grads:[1088,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1073,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1090,2,1,""],float_img_to_uint8_img:[1091,2,1,""],gradient_image:[1092,2,1,""],random_crop:[1093,2,1,""],stack_images:[1094,2,1,""],uint8_img_to_float_img:[1095,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1097,2,1,""],inv:[1098,2,1,""],matrix_norm:[1099,2,1,""],pinv:[1100,2,1,""],qr:[1101,2,1,""],svd:[1102,2,1,""],vector_to_skew_symmetric_matrix:[1103,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1105,2,1,""],logical_or:[1106,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1108,2,1,""],acosh:[1109,2,1,""],asin:[1110,2,1,""],atan2:[1112,2,1,""],atan:[1111,2,1,""],atanh:[1113,2,1,""],cosh:[1114,2,1,""],divide:[1115,2,1,""],erf:[1116,2,1,""],exp:[1117,2,1,""],log:[1118,2,1,""],sin:[1119,2,1,""],sinh:[1120,2,1,""],tan:[1121,2,1,""],tanh:[1122,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1124,2,1,""],maml_step:[1125,2,1,""],reptile_step:[1126,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1127,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1172,2,1,""],copy_nest:[1173,2,1,""],index_nest:[1174,2,1,""],map:[1175,2,1,""],map_nest_at_index:[1176,2,1,""],map_nest_at_indices:[1177,2,1,""],multi_index_nest:[1178,2,1,""],nested_indices_where:[1179,2,1,""],nested_map:[1180,2,1,""],set_nest_at_index:[1181,2,1,""],set_nest_at_indices:[1182,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1184,2,1,""],randint:[1185,2,1,""],random_normal:[1186,2,1,""],random_uniform:[1187,2,1,""],seed:[1188,2,1,""],shuffle:[1189,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1191,2,1,""],reduce_max:[1192,2,1,""],reduce_mean:[1193,2,1,""],reduce_min:[1194,2,1,""],reduce_prod:[1195,2,1,""],reduce_std:[1196,2,1,""],reduce_sum:[1197,2,1,""],reduce_var:[1198,2,1,""]},"ivy.functional.ivy.nn":{activations:[1200,0,0,"-"],layers:[1208,0,0,"-"],losses:[1221,0,0,"-"],norms:[1225,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1201,2,1,""],leaky_relu:[1202,2,1,""],relu:[1203,2,1,""],sigmoid:[1204,2,1,""],softmax:[1205,2,1,""],softplus:[1206,2,1,""],tanh:[1207,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1209,2,1,""],conv1d_transpose:[1210,2,1,""],conv2d:[1211,2,1,""],conv2d_transpose:[1212,2,1,""],conv3d:[1213,2,1,""],conv3d_transpose:[1214,2,1,""],depthwise_conv2d:[1215,2,1,""],dropout:[1216,2,1,""],linear:[1217,2,1,""],lstm_update:[1218,2,1,""],multi_head_attention:[1219,2,1,""],scaled_dot_product_attention:[1220,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1222,2,1,""],cross_entropy:[1223,2,1,""],sparse_cross_entropy:[1224,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1226,2,1,""]},"ivy.graph_compiler":{compiler:[1227,0,0,"-"],globals:[1230,0,0,"-"],graph:[1233,0,0,"-"],helpers:[1235,0,0,"-"],op_logging:[1236,0,0,"-"],param:[1237,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1228,2,1,""],show_graph:[1229,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1231,2,1,""],log_global_inference_rel_times:[1232,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1233,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1233,3,1,""],add_fn_to_dict:[1233,3,1,""],add_param:[1233,3,1,""],compiled:[1233,3,1,""],connect:[1233,3,1,""],debug_info:[1233,3,1,""],get_param:[1233,3,1,""],get_param_recursive:[1233,3,1,""],include_generators:[1233,3,1,""],increment_param_count:[1233,3,1,""],log_all_ops:[1233,3,1,""],params_all_empty:[1233,3,1,""],save_debug_info:[1233,3,1,""],set_param:[1233,3,1,""],show:[1233,3,1,""],show_debug_info:[1233,3,1,""],update_inference_times:[1233,3,1,""],with_array_caching:[1233,3,1,""]},"ivy.graph_compiler.param":{Param:[1237,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1237,3,1,""],count:[1237,3,1,""],depth:[1237,3,1,""],get:[1237,3,1,""],is_var:[1237,3,1,""],ptype:[1237,3,1,""],set:[1237,3,1,""],set_count:[1237,3,1,""],shape:[1237,3,1,""]},"ivy.stateful":{activations:[1242,0,0,"-"],converters:[1245,0,0,"-"],initializers:[1247,0,0,"-"],layers:[1256,0,0,"-"],module:[1268,0,0,"-"],norms:[1270,0,0,"-"],optimizers:[1272,0,0,"-"],sequential:[1278,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1243,1,1,""],GELU:[1244,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1243,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1244,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1246,2,1,""]},"ivy.stateful.initializers":{Constant:[1247,1,1,""],FirstLayerSiren:[1249,1,1,""],GlorotUniform:[1250,1,1,""],KaimingNormal:[1247,1,1,""],Ones:[1252,1,1,""],Siren:[1253,1,1,""],Uniform:[1247,1,1,""],Zeros:[1255,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1247,3,1,""],create_variables:[1247,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1249,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1250,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1247,3,1,""],create_variables:[1247,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1252,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1253,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1247,3,1,""],create_variables:[1247,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1255,3,1,""]},"ivy.stateful.layers":{Conv1D:[1257,1,1,""],Conv1DTranspose:[1258,1,1,""],Conv2D:[1259,1,1,""],Conv2DTranspose:[1260,1,1,""],Conv3D:[1261,1,1,""],Conv3DTranspose:[1262,1,1,""],DepthwiseConv2D:[1263,1,1,""],Dropout:[1264,1,1,""],LSTM:[1265,1,1,""],Linear:[1266,1,1,""],MultiHeadAttention:[1267,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1257,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1258,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1259,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1260,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1261,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1262,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1263,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1264,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1265,3,1,""],get_initial_state:[1265,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1266,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1267,3,1,""]},"ivy.stateful.module":{Module:[1269,1,1,""]},"ivy.stateful.module.Module":{__init__:[1269,3,1,""],build:[1269,3,1,""],build_mode:[1269,3,1,""],built:[1269,3,1,""],check_submod_rets:[1269,3,1,""],compile_graph:[1269,3,1,""],compile_on_next_step:[1269,3,1,""],get_mod_key:[1269,3,1,""],mod_depth:[1269,3,1,""],mod_height:[1269,3,1,""],mod_with_top_mod_key_chain:[1269,3,1,""],save_weights:[1269,3,1,""],show_graph:[1269,3,1,""],show_mod_in_top_mod:[1269,3,1,""],show_structure:[1269,3,1,""],show_v_in_top_v:[1269,3,1,""],sub_mods:[1269,3,1,""],track_submod_call_order:[1269,3,1,""],track_submod_rets:[1269,3,1,""],v_with_top_v_key_chains:[1269,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1271,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1271,3,1,""]},"ivy.stateful.optimizers":{Adam:[1273,1,1,""],LAMB:[1274,1,1,""],LARS:[1275,1,1,""],Optimizer:[1276,1,1,""],SGD:[1277,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1273,3,1,""],set_state:[1273,3,1,""],state:[1273,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1274,3,1,""],set_state:[1274,3,1,""],state:[1274,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1275,3,1,""],set_state:[1275,3,1,""],state:[1275,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1276,3,1,""],compile_graph:[1276,3,1,""],compile_on_next_step:[1276,3,1,""],set_state:[1276,3,1,""],show_graph:[1276,3,1,""],step:[1276,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1277,3,1,""],set_state:[1277,3,1,""],state:[1277,3,1,""]},"ivy.stateful.sequential":{Sequential:[1279,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1279,3,1,""]},"ivy.verbosity":{cprint:[1284,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1283,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1272,1273,1274],"02886":1239,"100":[1127,1239,1281],"141592653589793":826,"2021":1239,"2102":1239,"360":[834,837,1107,1119,1121],"718281828459045":826,"754":[826,830,831,834,844],"999":[1073,1075,1076,1080,1272,1273,1274],"abstract":[901,916,1239,1272,1276],"boolean":[40,41,834,836,840,843,901,936,948,951,965,974,975,977,983,984,1018,1020,1021,1025,1026,1027,1059,1069,1073,1079,1104,1105,1106,1123,1124,1125,1127],"break":43,"case":[15,18,19,40,41,42,43,834,835,901,940,947,950,975,978,1044,1046,1047,1096,1099,1101,1127,1171,1174,1178,1239,1256,1267,1268,1269,1272,1276,1285],"catch":[975,1000],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,389,429,430,830,832,901,903,904,905,906,907,908,910,911,913,914,915,916,928,929,951,975,979,1031,1073,1087,1127,1171,1173,1180,1221,1223,1224,1233,1237,1239,1242,1243,1244,1245,1246,1247,1249,1250,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281,1285],"default":[15,18,19,40,41,42,43,827,828,829,846,847,848,849,850,853,854,856,857,858,899,900,901,910,911,918,919,923,924,925,926,927,930,931,932,933,940,943,944,945,950,951,958,959,960,961,975,977,978,980,981,990,991,992,993,996,997,998,1009,1010,1011,1016,1018,1019,1028,1030,1031,1034,1036,1039,1042,1043,1046,1047,1050,1052,1054,1056,1057,1066,1068,1069,1073,1076,1078,1079,1080,1081,1082,1084,1088,1096,1099,1101,1123,1124,1125,1126,1127,1171,1172,1173,1175,1179,1180,1183,1184,1186,1187,1190,1192,1193,1194,1195,1196,1197,1198,1200,1201,1205,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1245,1246,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279],"final":[40,41,43,975,1009,1029,1030,1127,1256,1267,1282],"float":[40,41,42,43,826,827,828,829,830,831,834,835,844,846,848,860,879,885,901,910,911,934,940,943,947,950,951,959,966,975,978,990,991,993,1009,1010,1014,1015,1030,1048,1049,1050,1056,1057,1073,1075,1076,1078,1080,1081,1082,1089,1091,1095,1107,1115,1123,1124,1125,1126,1127,1183,1186,1187,1200,1202,1208,1216,1219,1220,1221,1222,1223,1224,1225,1226,1256,1264,1267,1270,1271,1272,1273,1274,1275,1276,1277],"function":[15,40,41,43,387,388,391,392,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,826,828,829,831,832,835,836,837,838,839,840,841,842,843,844,846,847,848,850,854,857,858,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,903,904,905,906,907,908,910,911,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1239,1242,1243,1244,1272,1275,1276,1277,1281,1282,1285],"import":[43,1239,1282,1285],"int":[40,41,42,43,386,387,388,481,827,828,829,830,831,832,846,847,848,849,850,853,854,856,857,858,860,879,885,899,900,901,923,924,925,926,927,930,931,932,933,938,939,945,951,960,962,967,975,980,981,986,992,993,997,998,1001,1002,1003,1006,1009,1010,1011,1016,1019,1028,1029,1030,1038,1039,1043,1044,1046,1047,1052,1053,1054,1055,1058,1060,1061,1066,1068,1071,1073,1075,1076,1080,1089,1093,1094,1096,1099,1123,1124,1125,1126,1127,1171,1180,1183,1184,1185,1187,1188,1190,1192,1193,1194,1195,1196,1197,1198,1200,1205,1208,1209,1210,1211,1212,1213,1214,1215,1219,1221,1223,1224,1225,1226,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1270,1271],"long":[1208,1218],"new":[40,41,43,481,827,828,829,834,838,842,951,955,975,976,986,1001,1002,1003,1006,1009,1010,1011,1012,1039,1044,1046,1047,1048,1049,1056,1057,1058,1073,1076,1078,1080,1081,1082,1089,1091,1093,1095,1107,1109,1113,1114,1120,1122,1127,1171,1181,1182,1183,1184,1225,1226,1239,1245,1246,1256,1266,1270,1271,1272,1273,1274,1275,1276,1277,1282,1285],"public":[975,994],"return":[15,16,17,18,19,40,41,42,43,481,827,828,829,830,831,832,834,835,836,837,838,839,840,841,842,843,844,846,847,848,849,850,853,854,856,857,858,860,879,885,899,900,901,910,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,936,937,939,940,944,945,946,947,948,950,951,955,956,957,958,959,960,961,962,963,964,965,966,967,974,975,976,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1016,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1043,1044,1045,1046,1047,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1075,1076,1077,1078,1079,1080,1081,1082,1084,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1171,1172,1173,1175,1179,1180,1183,1184,1185,1186,1187,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1239,1245,1246,1256,1265,1266,1272,1276,1281,1282,1285],"short":[1208,1218,1239,1285],"static":[40,41,899,900],"super":1127,"true":[40,41,42,431,437,465,468,481,482,834,839,846,848,853,854,856,857,858,899,900,901,975,977,985,987,1005,1009,1018,1020,1069,1070,1073,1076,1078,1079,1080,1081,1082,1084,1096,1099,1123,1124,1125,1126,1127,1171,1172,1179,1183,1184,1190,1192,1193,1194,1195,1196,1197,1198,1200,1201,1208,1216,1221,1222,1223,1224,1227,1228,1229,1233,1256,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277],"try":[40,41,975,1067,1127],"var":[40,41,1123,1124,1125,1285],"while":[40,41,42,1127],AND:[834,836,856,857,1104,1105],But:1285,For:[43,834,835,975,978,989,1058,1073,1079,1087,1096,1101,1107,1108,1239,1245,1246,1282,1285],Its:[1107,1111],NOT:[834,843],Not:826,One:[40,41,43,975,1002,1044,1183,1185,1285],Ones:[1239,1247],PRs:43,Such:[975,994],That:1282,The:[15,16,17,18,19,40,41,42,43,834,835,836,837,839,841,844,846,848,849,850,853,854,856,857,858,860,879,885,899,900,901,910,911,917,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,940,943,944,945,946,947,950,951,955,956,957,962,963,964,965,974,975,978,982,983,986,987,990,991,992,993,995,996,999,1000,1004,1009,1011,1012,1019,1022,1023,1024,1026,1028,1030,1032,1034,1036,1039,1040,1043,1044,1046,1047,1048,1049,1050,1053,1054,1055,1056,1057,1058,1061,1069,1072,1073,1075,1076,1078,1080,1081,1082,1084,1087,1089,1091,1093,1095,1096,1099,1101,1102,1107,1108,1110,1111,1115,1116,1117,1118,1119,1121,1123,1124,1125,1126,1127,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1186,1187,1190,1191,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1239,1245,1246,1256,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1282,1285],There:[43,1239,1282],These:[43,1239],Used:[1171,1172,1179,1268,1269],Using:[1239,1240,1285],With:[40,41,1096,1099,1190,1192,1193,1194,1195,1196,1197,1198,1239,1281,1285],__array__:[975,982],__call__:[1256,1267,1268,1269],__del__:1127,__dict__:[1127,1282],__enter__:1127,__exit__:1127,__getitem__:1127,__getstate__:1127,__init__:[40,41,42,43,59,60,81,209,389,390,429,430,510,637,901,902,909,910,911,912,913,914,915,916,951,952,953,954,1073,1074,1127,1131,1138,1233,1234,1237,1238,1239,1242,1243,1244,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281,1285],__iter__:1127,__len__:1127,__next__:1127,__pow__:43,__repr__:1127,_assign_vari:1281,_axi:1127,_base:[1171,1172,1179],_compute_node_da_ratio:1127,_compute_node_strs_da:1127,_concat_unify_arrai:1127,_counter:1127,_cur_framework:[43,1127],_da_direct:1127,_da_directions_flip:1127,_da_step_tim:1127,_da_tim:1127,_da_tune_count:1127,_data:1127,_delta_da_dim_s:1127,_delta_sf:1127,_dict:1127,_dim_siz:1127,_first_da_tune_step:1127,_first_ns_tune_step:1127,_fn:1127,_forward:[1239,1281],_get_kalman_param:1285,_get_prior:1285,_get_some_model:1285,_handle_flat_arrays_in_out:43,_index:[1171,1172,1179],_input_queu:1127,_length:1127,_max_depth:1127,_max_node_dim_step_ratio:1127,_max_node_dim_step_s:1127,_max_split_factor_step_s:1127,_mean_unify_arrai:1127,_min_bas:[975,1057,1225,1226,1270,1271],_min_denomin:[975,1056],_min_node_dim_s:1127,_min_sf_tune_step:1127,_min_unit_node_tune_step:1127,_model:1285,_native_wrapp:43,_node_mapp:1127,_node_percent_mem:1127,_node_str:1127,_node_str_da_ratio:1127,_node_strs_da:1127,_node_strs_kei:1127,_node_strs_n:1127,_node_util:1127,_ns_step_tim:1127,_ns_time:1127,_ns_tune_count:1127,_num_nod:1127,_num_work:1127,_observed_config:1127,_output_queu:1127,_paramet:1281,_percent_mem_inc_per_sf:1127,_percent_mem_inc_per_unit_da_dim:1127,_percent_util_inc_per_unit_da_dim:1127,_ret_fn:1127,_safety_factor:1127,_save_dir:1127,_shift_da_split:1127,_shift_n:1127,_slice:1127,_step:[1272,1276],_sum_unify_arrai:1127,_timeout:1127,_tune:1127,_tune_da:1127,_tune_n:1127,_tune_step:1127,_unit_da_tune_count:1127,_unroll_step:1285,_with_node_mappig:1127,_worker:1127,_worker_class:1127,_worker_fn:1127,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,901,910,916,1127,1268,1269,1272,1276],abil:1239,abl:[40,41],about:[830,831,832],abov:[43,1183,1185],above_height:[40,41],abs:[289,431,557,685,846,848,975,1127],absolut:[40,41,975,976],abstractmethod:1127,accept:[15,43,1239],access:[40,41,43,1282],accord:[40,41,830,831,975,993,1011,1046,1047,1066,1071],accordingli:[846,848,856,857,858],accur:[59,389,429,430,901,913,914,915,916,951,1073,1233,1237,1247,1249,1250,1252,1253,1255],aco:[774,1107],acosh:[774,1107],across:[40,41,901,910,911,920,921,923,924,925,926,927,933,943,944,975,980,981,983,984,1127,1171,1175],activ:[1201,1202,1203,1204,1205,1206,1207,1239,1243,1244],actual:1282,adam:[1073,1075,1076,1080,1239,1272,1274,1281],adam_step:1073,adam_upd:1073,adapt:[1073,1081,1272,1275],add:[40,41,43,1127,1221,1222,1223,1224,1225,1226,1239,1270,1271,1282],add_fn_to_dict:1233,add_param:1233,added:[43,975,1056,1057,1278,1279],adding:[975,986],addit:[40,41,43,975,1001,1002,1003,1225,1226,1256,1266],address:43,adher:43,adjac:[975,978],adopt:[975,994],affect:[975,978],affin:[1270,1271],after:[834,844,975,1028,1073,1076,1077,1078,1080,1081,1082,1089,1090,1225,1226,1272,1273,1274,1275,1276,1277,1285],after_1:[975,993,1071],after_n:[975,993,1071],again:43,against:[40,41,1096,1099,1190,1192,1193,1194,1195,1196,1197,1198],agnost:[43,1239,1281,1282],aim:1285,algebra:1096,algorithm:[1208,1209,1210,1211,1212,1213,1214,1215,1256,1257,1258,1259,1260,1261,1262,1263,1285],align:[40,41,43,975,986],aliv:[901,935,937,941,975,1013,1037,1041],all:[15,16,17,18,19,40,41,43,107,231,416,536,663,846,848,849,850,856,899,900,901,910,935,941,975,976,977,983,984,994,1013,1019,1041,1055,1096,1101,1123,1124,1125,1126,1127,1171,1172,1173,1179,1180,1183,1184,1187,1190,1192,1193,1194,1195,1196,1197,1198,1208,1218,1239,1282,1285],all_depth:[40,41],all_equ:975,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1171,all_tru:[40,41],alloc:[901,1127],allow:[975,1029,1030,1031,1268,1269],allow_dupl:[975,1031],alon:[901,940,950,1127,1239],along:[40,41,43,481,846,847,848,849,850,853,854,856,857,858,901,924,925,926,927,930,931,932,933,945,975,992,997,998,1011,1028,1029,1030,1043,1054,1058,1061,1068,1096,1099,1123,1124,1125,1126,1127,1183,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198],alongsid:[1281,1282],alpha:[1200,1202],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,901,1127],also:[40,41,43,975,978,1073,1076,1123,1124,1125,1126,1171,1172,1173,1179,1180,1208,1217,1239,1256,1266,1281],altern:1281,alwai:[40,41,43,1073,1079,1084],among:[40,41],amount:[901,947,1127,1239],angl:[1107,1108,1112],ani:[15,16,17,18,19,40,41,43,107,231,416,536,663,856,899,900,901,903,906,910,911,913,922,923,926,927,932,975,977,978,982,1000,1001,1002,1003,1004,1005,1018,1026,1031,1056,1057,1073,1077,1127,1171,1172,1175,1179,1180,1181,1182,1183,1187,1239,1245,1246,1268,1269,1281,1282,1285],anoth:[40,41,43,951,957,1239],another_backend:43,anyth:[43,1285],anywai:43,apart:43,api:[1239,1240],appear:[975,1006],append:[40,41,1127],appli:[15,18,19,40,41,834,843,975,1001,1002,1003,1073,1080,1081,1096,1102,1104,1105,1106,1123,1124,1125,1171,1175,1178,1180,1200,1201,1202,1203,1204,1205,1206,1207,1208,1217,1219,1220,1225,1226,1239,1242,1243,1244,1270,1271],applic:[1171,1175,1180,1208,1219,1220,1239,1285],approxim:[43,834,835,842,860,885,1200,1201],arang:[127,289,431,481,557,685,975,1029,1030],arbitrari:[40,41,901,930,931,933,1127],arc:[1107,1112],arcco:[1107,1108],arctan:[1107,1111],area:[834,835,1239],arg:[15,16,17,40,41,43,59,63,901,910,923,927,933,945,975,1001,1002,1003,1047,1127,1227,1228,1229,1233,1245,1246,1268,1269],arg_nam:975,arg_stateful_idx:[1227,1228,1229,1233,1268,1269],argmax:[127,431,557,685,975],argmin:[127,431,557,685,975],args_clon:1127,args_dist:1127,args_to_ivi:[15,1239],args_to_n:[15,1239],args_uni:1127,argsort:[104,228,413,533,660,853],argument:[15,16,17,18,19,40,41,42,43,59,63,899,900,901,910,911,923,927,933,975,978,979,987,1000,1031,1047,1107,1108,1127,1171,1175,1245,1246,1268,1269],aris:[1239,1285],arithmet:[43,1190,1193,1196,1198],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:481,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,127,289,431,481,557,685,827,828,829,830,831,832,834,835,836,837,838,839,840,841,842,843,844,846,847,848,849,850,853,854,856,857,858,879,885,901,919,920,921,924,925,926,927,930,931,932,933,935,937,941,945,946,951,955,961,966,967,975,976,977,978,980,981,983,984,985,986,988,989,990,991,992,993,995,996,997,998,1001,1002,1003,1004,1006,1007,1008,1009,1010,1011,1012,1013,1016,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1032,1033,1034,1035,1037,1038,1039,1040,1041,1043,1044,1045,1046,1047,1052,1054,1055,1058,1059,1060,1061,1063,1064,1065,1066,1068,1069,1070,1071,1072,1073,1075,1076,1079,1080,1084,1086,1087,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1127,1171,1173,1180,1183,1184,1185,1186,1187,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1239,1240,1256,1264,1265,1267,1272,1276,1281,1282],arrang:[975,1001],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,386,387,388,389,391,392,826,827,828,829,830,831,832,834,835,836,837,838,839,840,841,842,843,844,846,847,848,849,850,853,854,856,857,858],array_api_methods_to_test:43,array_builtin:[43,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898],array_equ:[289,685,975],array_lik:[481,975,982],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,975],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1239],arraywithgener:[22,1239],arraywithgradi:[24,1239],arraywithimag:[26,1239],arraywithlinalg:[28,1239],arraywithlog:[30,1239],arraywithmath:[32,1239],arraywithmeta:[34,1239],arraywithrandom:[36,1239],arraywithreduct:[38,1239],arriv:[40,41,42],articl:1239,arxiv:1239,as_arrai:[40,41,975,1016,1052],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[429,431,440,901,919,951,958,959,960,961],as_tensor:431,as_vari:[40,41],as_zero:[40,41],asarrai:[431,975],asin:[774,1107],asinh:[85,394,514,641,834],aspect:[1089,1094],assert:[40,41,975,985,1127],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:975,associ:[43,1096,1103],assum:[1282,1285],astyp:[431,951],asynchron:[40,41,42],at_dev:[40,42,901,914,915],at_kei:[40,41],at_key_chain:[40,41],at_nod:1127,atan2:[774,1107],atan:[774,1107],atanh:[774,1107],attent:[43,1208,1219,1220,1256,1267],attribut:[0,6,40,41,830,831,832,975,1040,1072],audienc:[1239,1282],author:1239,avail:[40,41,43,901,936,938,939,948,975,1002,1127],averag:[1073,1075,1076,1080,1123,1124,1125,1190,1193],average_across_step:[1123,1124,1125],avoid:[901,1127,1282],axes:[40,41,43,431,462,474,475,846,848,849,850,856,857,858,901,945,975,980,981,993,1006,1060,1066,1071,1096,1099,1127,1190,1192,1193,1194,1195,1196,1197,1198],axes_length:[40,41,975,1001,1002,1003],axi:[40,41,431,433,434,438,439,445,453,454,455,460,461,463,846,847,848,849,850,853,854,856,857,858,901,903,906,913,924,925,926,927,930,931,932,933,945,975,980,981,992,993,996,997,998,1006,1011,1028,1029,1030,1043,1054,1055,1058,1060,1061,1068,1071,1127,1183,1189,1190,1192,1193,1194,1195,1196,1197,1198,1200,1205,1221,1223,1224],axis0:[40,41,975,1060],axis1:[40,41,846,847,975,1060],axis2:[846,847],back:[43,1268,1269,1272,1276],backend:[15,17,19,40,41,386,387,388,389,391,392,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,479,480,481,482,901,936,939,948,951,957,965,974,975,1021,1025,1073,1076,1078,1080,1081,1082,1087,1127,1239,1240,1245,1246,1272,1273,1274,1275,1276,1277,1281,1282,1285],backend_nam:43,background:[1239,1282],backprop:1285,backward:[856,857,858,1281],band:[975,1009],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,389,429,430,431,455,834,842,860,885,901,903,904,905,906,907,908,910,911,913,914,915,916,951,975,1014,1030,1048,1057,1073,1127,1190,1191,1233,1237,1239,1242,1243,1244,1247,1249,1250,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1285],batch:[40,41,846,848,901,943,944,975,1009,1019,1089,1093,1096,1102,1123,1124,1125,1126,1127,1208,1217,1225,1226,1270,1271],batch_shap:[431,447,975,1019,1038,1089,1090,1091,1092,1093,1094,1095,1096,1103,1183,1184,1208,1218,1219,1220,1256,1265],batch_siz:[481,482,1127,1183,1184,1208,1209,1210,1211,1212,1213,1214,1215],bayesian:1285,becaus:[43,975,978],becom:[975,989,1107,1112,1285],been:[975,1001,1002,1003,1183,1184],befor:[40,41,43,901,945,1123,1124,1125,1127,1171,1180,1190,1192,1193,1194,1195,1196,1197,1198,1208,1219,1220,1285],before_1:[975,993,1071],before_n:[975,993,1071],begin:[1171,1172,1179,1282],behaviour:[43,1285],behind:[1073,1076,1078,1080,1081,1082,1239],being:[40,41,43,975,978,1042,1050,1127],belong:[40,41],below:[43,1239,1282,1285],below_depth:[40,41],benefit:1239,bernoul:[1208,1216,1256,1264],best:[43,975,1031,1239],beta1:[1073,1075,1076,1080,1272,1273,1274],beta2:[1073,1075,1076,1080,1272,1273,1274],beta:[1225,1226],between:[40,41,42,830,831,975,978,1096,1101,1171,1175,1183,1185,1221,1223,1224,1272,1274],bia:[1208,1217,1218,1256,1257,1258,1259,1260,1261,1262,1263,1266],bias_initi:[1256,1257,1258,1259,1260,1261,1262,1263,1266],bilinear:[1089,1090],bilinear_resampl:[163,344,470,600,759,1089],bilinearli:[1089,1090],binari:[834,836,1221,1222],binary_cross_entropi:1221,bit:[389,830,831,832,951,962,1089,1091,1095,1239],bitwis:[834,836],bitwise_and:[85,213,394,514,641,834],bitwise_oper:[0,7,8],block:[1239,1282],bool:[15,18,19,40,41,42,43,834,839,841,846,848,853,854,856,857,858,860,879,899,900,901,919,932,936,940,945,948,950,951,961,975,977,983,984,997,1000,1004,1005,1009,1016,1018,1026,1031,1052,1054,1068,1069,1070,1073,1076,1077,1078,1079,1080,1081,1082,1084,1096,1099,1123,1124,1125,1126,1127,1171,1172,1173,1175,1179,1180,1183,1184,1190,1192,1193,1194,1195,1196,1197,1198,1200,1201,1208,1216,1245,1246,1256,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277],both:[43,975,996],bottom:1239,boundari:[40,41,1183,1187],branch:[43,899,900],brittl:43,broadcast:[40,41,43,834,836,846,848,856,857,858,860,879,885,975,986,1004,1033,1034,1035,1043,1096,1099,1107,1112,1115,1190,1192,1193,1194,1195,1196,1197,1198],broadcast_to:[289,685,975],build:[1127,1239,1256,1267,1268,1269],build_mod:[1256,1267,1268,1269],builder:1239,built:[901,975,978,1127,1256,1267,1268,1269],builtin:43,builtin_ab:[244,860],builtin_add:[244,860],builtin_and:[244,860],builtin_bool:[244,860],builtin_contain:[244,860],builtin_deepcopi:[244,860],builtin_dir:[244,860],builtin_eq:[244,860],builtin_float:[244,860],builtin_floordiv:[244,860],builtin_g:[244,860],builtin_getattr:[244,860],builtin_getattribut:[244,860],builtin_getitem:[244,860],builtin_gt:[244,860],builtin_int:[244,860],builtin_invert:[244,860],builtin_l:[244,860],builtin_lt:[244,545,672,860],builtin_mul:[244,860],builtin_n:[244,860],builtin_neg:[244,860],builtin_or:[244,860],builtin_po:[244,860],builtin_pow:[43,244,860],builtin_radd:[244,860],builtin_rand:[244,860],builtin_rfloordiv:[244,860],builtin_rmul:[244,860],builtin_ror:[244,860],builtin_rpow:[244,860],builtin_rsub:[244,860],builtin_rtruediv:[244,860],builtin_rxor:[244,860],builtin_setitem:[244,860],builtin_some_op:43,builtin_sub:[244,860],builtin_truediv:[244,860],builtin_xor:[244,860],bypass:1282,cach:[901,917,975,987],cache_fn:975,calcul:[40,41,42,43,834,835,842,844,860,885,1107,1115],call:[43,901,945,975,1042,1050,1067,1073,1077,1127,1171,1172,1175,1179,1256,1267,1268,1269,1272,1276,1282,1285],callabl:[40,41,899,900,901,910,911,945,975,987,1000,1002,1031,1067,1123,1124,1125,1126,1127,1171,1175,1176,1177,1179,1180,1208,1219],can:[43,901,943,944,945,975,1044,1089,1091,1127,1239,1281,1282,1285],cancel_join_thread:1127,cannot:43,captur:1239,cast:[40,41,127,289,431,557,685,951,975,992,1089,1091,1095],catch_except:[975,1000],categori:43,caus:43,ceil:[289,431,685,975,978],cell:[1208,1218,1256,1265],certain:[40,41,975,978,1029,1030],chain:[40,41,1123,1124,1125,1278,1279],chang:[43,901,975,1044,1127,1171,1173,1180,1239,1281],channel:[975,1009,1089,1091,1092,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266],check:[15,16,17,18,19,40,41,43,901,940,950,951,956,965,974,975,985,1005,1018,1026,1059,1069,1073,1079,1127,1171,1172,1179,1239,1282],check_nest:[1171,1179],check_shap:[40,41],check_submod_ret:[1268,1269],check_typ:[40,41],choic:[1239,1282],choleski:[763,1096],choos:[975,1070,1096,1101,1107,1112,1239],choose_random_framework:59,chosen:[40,41,975,978,1070],chunk:[901,943,944,945,1127],chunk_siz:[901,945,1127],circl:[1107,1108,1110],clark:1239,clear:[901,917,1127],clear_framework_stack:59,clear_mem_on_dev:[429,677,901],click:1239,clip:[40,41,289,431,685,975,990,991,1033,1035,1239],clip_matrix_norm:975,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,975],clipped_delta:1127,clone:[40,41,901,920,921,922,923,1127],clone_arrai:1127,clone_it:1127,clone_nest:1127,clonedit:1127,cloneditem:1127,clonednest:1127,close:[43,1089,1094,1107,1110,1127,1285],closest:[951,956],closest_valid_dtyp:951,code:[40,41,42,43,481,1239,1240,1281,1282],codebas:[901,943,944,1127,1239,1282,1285],codomain:[834,835,844],colab:1239,collect:[15,40,41,429,431,465,470,474,478,479,481,860,899,901,951,975,1073,1089,1096,1104,1107,1127,1171,1183,1190,1200,1208,1221,1225,1242,1256,1270,1272],color:[40,41,42,1283,1284],column:[975,1019],combin:[40,41,42,1089,1094,1239,1285],combined_batch_s:1127,come:1282,command:1239,comment:43,commit:1285,common:[40,41,43,1107,1112],common_key_chain:[40,41],commun:[43,1239,1282],compar:[40,41,975,977,983,984],comparison_oper:[0,9,10],compat:[43,834,836,846,848,856,857,858,860,879,885,975,1004,1044,1107,1115,1239,1285],compil:[289,431,685,1228,1229,1233,1239,1268,1269,1272,1273,1274,1275,1276,1277],compile_graph:[1227,1239,1268,1269,1272,1276],compile_on_next_step:[1268,1269,1272,1273,1274,1275,1276,1277],complet:[40,41,1096,1101,1127],complex:[1282,1285],compon:[975,996],composit:43,comput:[40,41,834,836,837,841,843,846,848,860,879,901,945,975,990,991,997,998,1004,1032,1073,1075,1076,1077,1078,1080,1081,1082,1084,1086,1089,1092,1096,1097,1098,1099,1100,1101,1104,1105,1106,1107,1108,1110,1111,1112,1116,1117,1118,1119,1121,1171,1175,1190,1191,1192,1193,1194,1195,1196,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215,1217,1219,1221,1222,1223,1224],concat:[40,41,901,930,931,932,933,945,975,1009,1127],concaten:[40,41,127,289,431,557,685,975,1009,1127,1239],concatten:[40,41,901,930,931,932,933,945,1127],condit:[431,899,900,975,1070,1171,1179],conditon:[1171,1179],config:[40,41,1127],config_list:1127,configur:[40,41],conflict:43,conform:43,conjunct:1282,connect:[1233,1256,1266,1267],consid:[40,41,1096,1101,1281,1285],consist:[40,41,901,933,1127,1190,1191,1268,1269,1282],constant:[901,910,911,975,993,1127,1171,1175,1221,1222,1223,1224,1225,1226,1247,1248,1252,1255,1268,1269,1270,1271,1282],constant_kwarg:1127,constant_pad:[289,431,557,685,975],constitu:[40,41],construct:[975,1061,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281],constructor:[40,41,42,975,979,1278,1279],consum:[901,1127],cont_feat_dim:[1208,1219],contaienr:[40,41],contain:[15,18,19,42,43,827,828,829,834,835,836,839,841,842,844,846,848,853,854,856,857,858,860,879,885,901,920,924,945,951,955,975,976,980,981,989,990,991,994,1004,1018,1033,1035,1045,1056,1057,1073,1075,1076,1078,1080,1081,1082,1107,1115,1123,1124,1125,1126,1127,1183,1184,1190,1192,1193,1194,1196,1198,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[431,685,975],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[431,975,1036,1208,1219,1256,1267],context_dim:[1256,1267],contextmanag:[59,60],continu:[43,1127,1282],contract:[40,41,1190,1191],contribut:[1239,1240],contributor:[43,1239],control:1239,conv1d:[194,375,495,816,1208,1239,1256],conv1d_transpos:[194,375,495,816,1208],conv1dtranspos:[1239,1256],conv2d:[194,375,495,626,816,1208,1239,1256],conv2d_transpos:[194,375,495,816,1208],conv2dtranspos:[1239,1256],conv3d:[194,375,495,626,816,1208,1239,1256],conv3d_transpos:[194,375,495,816,1208],conv3dtranspos:[1239,1256],convent:[40,41,1190,1191],conver:[901,917,928,940,947,950,1127],convers:[16,17,18,19,40,41,1127,1239],convert:[15,16,17,18,19,40,41,43,901,928,929,951,957,963,964,975,1053,1064,1065,1089,1091,1095,1096,1103,1127,1171,1173,1180,1239,1246],convert_dtyp:951,convolut:[1208,1209,1210,1211,1212,1213,1214,1215,1256,1257,1258,1259,1260,1261,1262,1263],cool:43,cooler:43,coordin:[975,1034,1107,1108,1110,1112],copi:[40,41,481,975,995,1127,1171,1173],copy_arrai:[431,685,975],copy_nest:1171,core:[429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,479,480,481,482,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,903,904,905,906,907,908,910,911,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1239],corner:43,correct:[43,1239,1282],correctli:[40,41,1096,1099,1107,1112,1190,1192,1193,1194,1195,1196,1197,1198],correspond:[40,41,43,860,885,975,992,1183,1184],cos:[85,394,514,641,834,975,1009,1107,1108,1121,1282],cosh:[85,394,514,641,774,834,1107],cosin:[834,837,838,1107,1108,1109,1114],cost:[1073,1075,1076,1078,1080,1081,1082,1123,1124,1125,1126],cost_fn:[1123,1126],could:1285,count:[40,41,849,850,856,857,858,1127,1190,1195,1197,1237],cprint:1283,cpu:[40,41,43,901,938,940,946,947,950,975,978,982,1011,1012,1019,1029,1030,1038,1039,1040,1046,1047,1072,1127,1183,1184,1185,1186,1187,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276,1278,1279,1281,1282],creat:[40,41,827,828,829,901,910,911,975,978,982,1010,1011,1012,1019,1029,1030,1038,1039,1040,1046,1047,1063,1072,1073,1086,1127,1183,1184,1185,1186,1187,1239,1240,1245,1246,1247,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281,1285],create_if_abs:[40,41],create_vari:1247,creation:[40,41,42,43],creation_funct:[386,387,388,827,828,829],crop:[1089,1093],crop_siz:[1089,1093],cross:[289,685,975,1221,1222,1223,1224],cross_entropi:1221,cuda:[40,41,901,910,929,946,975,978,982,1011,1012,1019,1029,1030,1038,1039,1040,1046,1047,1072,1127,1183,1184,1185,1186,1187,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276,1278,1279],cumprod:[127,289,431,685,975],cumsum:[685,975],cumul:[975,997,998],current:[40,41,42,43,901,910,934,935,937,941,951,957,965,974,975,999,1013,1021,1025,1037,1041,1127,1171,1172,1179,1239,1285],current_framework:59,current_framework_str:[431,685,975,1127],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1233,d_in:[1208,1209,1210,1211,1212,1213,1214],d_out:[1208,1209,1210,1211,1212,1213,1214],da_can_termin:1127,da_dim_s:[901,1127],da_direct:1127,da_tune_step:[901,1127],dai:1285,daniel:1239,data:[40,41,42,43,827,828,829,831,832,834,835,836,839,841,844,846,848,849,850,856,857,858,860,879,885,901,903,904,905,906,907,908,913,914,915,929,951,955,956,957,961,962,963,964,965,966,967,974,975,978,982,1004,1010,1019,1026,1039,1040,1044,1055,1059,1072,1073,1079,1087,1107,1115,1127,1208,1217,1239],data_format:[1208,1209,1210,1211,1212,1213,1214,1215,1256,1257,1258,1259,1260,1261,1262,1263],data_type_funct:[389,391,392,830,831,832],dataset:[40,41],datatyp:[40,41,951,956,966,967],dcdw:[1073,1075,1076,1078,1080,1081],debug_info:1233,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1073,1080,1081,1272,1274,1275],decay_lambda:[1073,1080,1081,1272,1274,1275],decid:[40,41,1285],decompos:[1096,1097,1101],decomposit:[1096,1097,1101,1102],decor:43,decrement:[975,1022],dedic:[1073,1087,1245,1246],deep:[40,41,1239],deep_copi:[40,41],deeper:[901,923,927,933,1127,1171,1180,1239],deepli:[1171,1173],def:[43,60,81,209,390,510,637,902,909,912,952,953,954,1074,1127,1131,1138,1234,1238,1239,1248,1251,1254,1281,1282,1285],default_dev:43,default_devic:901,default_dtyp:[43,951],default_float_dtyp:951,default_int_dtyp:951,default_key_color:[40,41,42],default_nod:1127,default_rng:481,default_v:[975,1000],defaultdevic:[901,902],defaultdtyp:[951,952],defaultfloatdtyp:[951,953],defaultintdtyp:[951,954],defer:43,defin:[43,975,996,1038,1040,1072,1183,1185],degre:[834,837,1107,1119,1121],del:1127,delta:[1073,1075,1127,1233],delta_dim_s:1127,delta_percent_mem:1127,delta_sf:1127,delta_util:1127,demo:1239,denomin:[975,1008,1015,1049,1056,1057,1225,1226,1270,1271],dens:[1256,1266],depend:[43,834,835,842,860,885,975,1070,1096,1102,1239],depth:[40,41,431,456,901,923,927,933,975,1017,1038,1127,1171,1180,1233,1237,1268,1269],depth_cutoff:[40,41],depthwis:[1208,1215,1256,1263],depthwise_conv2d:[194,375,495,626,816,1208],depthwiseconv2d:[1239,1256],deriv:[1073,1075,1076,1078,1080,1081,1082,1171,1173,1180,1239,1268,1272,1276,1278],descend:[853,854,1096,1102],descent:[1073,1078,1272,1277],describ:[40,41,1190,1191],descript:[846,848],design:[1239,1240],desir:[40,41,901,946,951,955,975,978,982,1019,1020,1039,1040,1072,1089,1094,1127,1190,1192,1193,1194,1196,1198],desired_aspect_ratio:[470,473,1089,1094],desired_percent_increas:1127,detail:1285,detect:[40,41,1171,1172,1179],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,834,835,836,839,844,846,848,856,857,858,860,885,901,936,938,939,948,951,955,956,962,965,966,967,974,975,977,978,982,983,984,1018,1021,1025,1026,1059,1069,1073,1079,1107,1115,1123,1124,1125,1126,1127,1208,1219],dev:[40,41,42,43,120,283,429,431,432,435,445,446,447,454,455,456,457,458,459,464,481,482,550,677,901,904,905,907,908,910,911,914,915,917,918,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,937,940,941,942,943,944,945,946,947,950,975,978,982,1011,1012,1019,1029,1030,1038,1039,1040,1046,1047,1072,1073,1088,1183,1184,1185,1186,1187,1245,1246,1247,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276,1278,1279],dev_clon:[40,41,901],dev_clone_arrai:901,dev_clone_it:901,dev_clone_nest:901,dev_dist:[40,41,901],dev_dist_arrai:901,dev_dist_it:901,dev_dist_nest:901,dev_from_str:[43,120,283,429,550,677,901],dev_mapp:901,dev_str:[40,41],dev_to_str:[120,283,429,550,677,901],dev_unifi:901,dev_unify_arrai:901,dev_unify_it:901,dev_unify_nest:901,dev_util:901,devclonedit:901,devcloneditem:901,devclonednest:901,devdistit:901,devdistitem:901,devdistnest:901,develop:[43,1239,1282,1285],deviat:[40,41,1183,1186,1190,1196,1225,1226,1270,1271],devic:[21,40,41,43,386,387,388,430,431,444,827,828,829,903,904,905,906,907,908,910,911,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,975,978,982,1010,1011,1012,1019,1029,1030,1038,1039,1040,1046,1047,1072,1073,1088,1183,1184,1185,1186,1187,1239,1245,1246,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276,1278,1279],devmanag:[901,909],devmapp:[901,911],devmappermultiproc:901,diag:[1096,1102],diagon:[97,221,406,526,653,846,975,1019],dict:[15,16,17,18,19,40,41,42,901,903,906,910,911,913,923,924,925,926,927,975,1001,1002,1003,1031,1123,1124,1125,1127,1171,1173,1174,1175,1178,1180,1245,1246],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,830,831,901,920,921,924,925,1096,1101,1127,1208,1217,1239,1282,1285],differenti:[1239,1282],dilat:[1208,1209,1210,1211,1212,1213,1214,1215,1256,1257,1258,1259,1260,1261,1262,1263],dim:[40,41,43,975,1038,1089,1090,1094,1096,1102,1127,1256,1267],dim_siz:[40,41,901,1127],dimens:[40,41,42,846,847,848,849,850,856,857,858,901,932,975,986,992,996,1001,1002,1003,1006,1009,1016,1028,1038,1043,1044,1054,1055,1058,1066,1068,1089,1093,1096,1099,1102,1123,1124,1125,1126,1127,1183,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1200,1205,1208,1209,1210,1211,1212,1213,1214,1215,1218,1221,1223,1224,1256,1257,1258,1259,1260,1261,1262,1263,1266,1267],dimension:[40,41,481,846,848,856,857,858,975,1054,1055,1096,1102],direct:1127,directli:[43,1171,1180,1282,1285],directori:[975,1051,1062],discret:[1221,1223],disk:[40,41,1089,1091],distanc:[975,978],distribut:[40,41,901,920,924,925,926,927,1127,1183,1184,1185,1186,1187,1208,1216,1256,1264,1268,1269],distribute_nest:1127,distributedarrai:[40,41],distrubt:[1221,1223],dive:[1239,1282],divid:[40,41,975,1054,1056,1107],dividend:[1107,1115],divis:[975,1008,1015,1049,1056,1057,1073,1075,1076,1080,1107,1115,1272,1273,1274],divisor:[1073,1075,1076,1080,1107,1115,1272,1273,1274],doc:1239,docstr:43,doe:[40,41,43,975,978,1054,1281],doesn:[1096,1101,1239],doing:43,domain:[834,835,844,1107,1108],don:1239,done:43,door:1285,dot:[1096,1098,1208,1219,1220,1256,1267],down:1281,downscal:[975,990,991],drag:[1239,1285],draw:[1183,1184,1186,1187],drawn:[1183,1184,1185,1186,1187],drop:[1239,1285],dropout:[1208,1239,1256,1267],dropout_r:[1256,1267],ds_tune_step:901,dtype:[40,41,43,127,289,386,387,388,389,391,392,431,432,435,436,444,447,457,464,557,685,827,828,829,830,831,832,955,956,957,958,959,960,962,963,964,965,966,967,968,969,970,971,972,973,974,975,978,982,1010,1019,1038,1039,1040,1072],dtype_bit:[127,289,431,557,685,951],dtype_from_str:[43,127,289,431,557,685,951],dtype_in:[431,441,442,443,951,957,962,963,964,965,966,967,974],dtype_to_str:[127,289,431,557,685,951],duplic:[40,41],dure:[40,41,43,899,900,975,1067,1073,1075,1076,1080,1123,1124,1125,1126,1268,1269,1272,1273,1274,1276],dynam:[431,437,899,900],each:[40,41,42,43,834,835,836,839,841,842,844,853,854,860,879,885,901,910,911,920,921,922,923,924,925,926,932,944,945,975,976,977,993,1004,1043,1054,1058,1061,1071,1073,1076,1078,1080,1081,1082,1089,1092,1096,1102,1107,1110,1115,1117,1118,1127,1171,1175,1183,1184,1190,1191,1208,1209,1210,1211,1212,1213,1214,1215,1216,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1267,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1282],eager:1282,easi:1285,easili:1239,econom:1285,ecosystem:1239,edg:[975,989,993,1071],effect:[1073,1082],effective_grad:[1073,1082],effici:1285,einop:[40,41,975,1001,1002,1003],einops_rearrang:[40,41,975],einops_reduc:[40,41,975],einops_repeat:[40,41,975],einstein:[40,41,1190,1191],einsum:[40,41,180,363,483,616,796,1190],either:[40,41,43,975,1000,1031,1034,1036,1123,1124,1125,1126,1127,1256,1267,1268,1269,1282],eleg:1127,element:[40,41,43,481,834,835,836,837,838,839,841,842,843,844,849,850,853,854,856,857,858,860,879,885,901,922,926,932,951,955,975,976,978,980,981,983,984,988,989,990,991,997,998,1004,1007,1008,1019,1020,1033,1035,1043,1045,1054,1065,1070,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1127,1190,1191,1193,1195,1197,1200,1201,1202,1203,1204,1205,1206,1207,1208,1216,1256,1264],elementwis:[40,41],elementwise_affin:[1270,1271],elementwise_funct:[834,835,836,837,838,839,840,841,842,843,844],elemtn:[1183,1184],elif:1127,els:[975,985,1000,1005,1127],elsewher:[975,1070],emphas:1239,empti:[40,41,1096,1101,1127],enabl:[40,41,42,43,1239],encapsul:[830,832],encod:[975,1009,1089,1091],end:[975,978,1239,1282],ensur:43,entir:[40,41,856,857,858,901,945,1127,1239,1256,1265],entri:[40,41,975,1029,1030,1054,1055],entropi:[1221,1222,1223,1224],enumer:1127,environ:1239,eps:[389,830,831],epsilon:[1073,1075,1076,1080,1221,1222,1223,1224,1225,1226,1270,1271,1272,1273,1274],equal:[40,41,431,557,685,834,837,839,975,977,983,984,993,1054,1071,1107,1119,1121,1183,1187],equality_matrix:[975,977],equat:[40,41,1190,1191],equival:[846,848,975,978,1107,1121],erf:[479,774,1107],error:[40,41,43,901,975,1055,1107,1116,1127,1200,1201,1268,1269,1272,1276],essenti:43,etc:[40,41,43,901,946,975,978,982,1011,1012,1019,1029,1030,1038,1039,1040,1046,1047,1072,1127,1183,1184,1185,1186,1187,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276,1278,1279,1285],euclidean:[846,848],euler:826,evalu:[40,41,834,842,856,857,858,975,1034,1171,1172,1179],even:[43,1285],evenli:[40,41,975,978,1029,1030,1054],everi:[975,977,1285],exact:[40,41],exampl:[43,899,900,975,989,1058,1096,1101,1239,1281,1282,1285],example_input:[431,437,899,900],exc_tb:1127,exc_typ:1127,exc_val:1127,exce:[975,1035],except:[40,41,44,47,856,857,858,975,978,985,992,1000,1067,1127],excess_s:1127,excit:[1239,1282],exclud:[59,61,975,978,1183,1187],exclus:[40,41,431,439,452,465,467,975,997,1026,1073,1079,1183,1185],execut:[43,975,1067,1282],execute_with_gradi:[160,339,465,595,753,1073,1239,1281],exist:[40,41,975,1000,1127,1239,1272,1276,1285],exp:[774,1107],expand:[40,41,975,1006,1009],expand_dim:[40,41,289,685,975,1127],expect:[975,979],explain:[43,1282],explicitli:[43,1256,1265,1267,1268,1269,1282],expon:[43,860,885,975,1057],exponenti:[43,860,885,1107,1116,1117],expos:[975,982,994],express:[975,1034],exsit:[40,41],extend:43,extra:[40,41,42,1073,1077],extract:[846,847],eye:[1096,1098],fabian:1239,fabio:1239,factor:[901,910,943,944,945,1073,1075,1076,1080,1081,1096,1102,1127,1208,1209,1210,1211,1212,1213,1214,1215,1256,1257,1258,1259,1260,1261,1262,1263,1272,1273,1274,1275],fail:43,falck:1239,fall:[1268,1269,1272,1276],fallback_to_non_compil:[1268,1269,1272,1276],fals:[15,18,19,40,41,42,59,66,67,68,69,70,429,431,439,440,452,460,463,465,466,467,474,475,834,839,846,848,853,854,856,857,858,901,919,932,940,945,950,951,958,959,960,961,975,977,997,1000,1005,1009,1016,1026,1031,1052,1054,1068,1070,1073,1076,1077,1078,1079,1080,1081,1082,1096,1099,1123,1124,1125,1126,1127,1171,1172,1173,1175,1179,1180,1190,1192,1193,1194,1195,1196,1197,1198,1227,1228,1229,1233,1237,1245,1246,1268,1269,1272,1273,1274,1275,1276,1277],fan_in:1247,fan_mod:1247,fan_out:1247,far:[1171,1172,1179,1281],faster:[899,900],favourit:[1239,1281],feasibl:1285,feat_dim:[1208,1219,1220],fed:[901,945,1127],feed:[901,945,1127],few:43,field:1285,file:[40,41,43,975,1051,1062,1268,1269],filepath:[40,41],fill:[40,41,827,828,829,975,1010,1039,1183,1185],fill_valu:[431,444,975,1010],filter:[1208,1209,1210,1211,1212,1213,1214,1215,1256,1257,1258,1259,1260,1261,1262,1263,1285],filter_s:[1256,1257,1258],filter_shap:[1256,1259,1260,1261,1262,1263],find:[40,41,1285],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[80,81,208,209,389,390,509,510,636,637,830],finish:[1239,1285],finit:[834,839],first:[40,41,43,481,834,836,899,900,901,932,975,983,992,996,1004,1029,1030,1058,1060,1073,1077,1096,1102,1123,1124,1125,1126,1127,1171,1172,1179,1183,1189,1190,1195,1197,1256,1267,1268,1269,1272,1276,1282,1285],firstlayersiren:[1239,1247],firstli:[1282,1285],fist:[901,945,1127],fit:[40,41,429,431,465,470,474,478,479,481,975,1043,1089,1094],fix:43,fkt:1285,flag:[40,41,43,1073,1079],flat:[40,41,43,975,1043,1046],flat_list:[40,41],flatten:[40,41,846,848,975,1009,1043,1190,1192,1193,1194,1196,1198],flatten_key_chain:[40,41,1268,1269],flexibl:[1239,1282],flip:[40,41,100,224,409,529,656,849],float32:[43,431,447,951,955,963,964,975,978,982,1019,1039,1040,1072],float_dtyp:[951,959,969],float_img_to_uint8_img:1089,floor:[289,431,685,975,1008,1127],floormod:[289,431,685,975],fluid:1285,fname:[1227,1229,1233,1268,1269],folder:[43,1239],follow:[40,41,43,830,832,846,848,901,945,975,1022,1023,1024,1056,1057,1073,1076,1078,1080,1081,1082,1127,1171,1175,1180,1208,1219,1220,1239,1256,1266,1272,1276],followng:[830,831],fomaml_step:1123,forget:[1073,1075,1076,1080,1272,1273,1274],fork:[975,1036,1239,1240],forkserv:[975,1036,1127],form:[15,16,17,18,19,40,41,975,982,1073,1076,1078,1080,1081,1082,1171,1173,1180,1208],format:[40,41,43,901,919,951,955,957,961,975,978,982,1019,1039,1040,1072,1127,1190,1191,1239,1281,1282],format_fn:[40,41],format_key_chain:[40,41],forward:[1268,1269,1272,1276,1281],found:[40,41,42],fourier:[975,1009],fourier_encod:975,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,95,98,99,101,105,108,109,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,164,165,166,168,169,170,174,175,176,177,178,179,181,182,183,184,185,186,187,190,192,193,195,196,197,198,199,200,201,206,207,209,210,211,214,215,216,217,218,219,222,223,225,229,232,233,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,345,346,347,349,350,351,352,353,355,356,359,360,361,362,364,365,366,367,368,369,370,371,374,376,377,378,379,380,381,382,387,388,390,391,392,395,396,397,398,399,400,401,402,403,404,407,408,410,414,417,418,430,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,466,467,468,469,471,472,473,475,476,477,480,482,484,485,486,487,488,489,490,493,494,496,497,498,499,500,501,502,507,508,510,511,512,515,516,517,518,519,520,521,522,523,524,527,528,530,534,537,538,546,551,552,553,554,555,556,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,596,597,598,599,601,602,603,605,606,607,608,612,613,614,615,617,618,619,620,621,622,623,627,628,629,634,635,637,638,639,642,643,644,645,646,647,648,649,650,651,654,655,657,661,664,665,673,678,679,680,681,682,683,684,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,754,755,756,757,758,760,761,762,764,765,766,767,768,769,770,772,773,775,776,777,778,779,780,781,782,783,784,785,786,787,788,790,791,792,793,794,795,797,798,799,800,801,802,803,806,807,808,809,810,811,812,814,815,817,818,819,820,821,822,823,828,829,831,832,834,835,836,837,838,839,840,841,842,843,844,846,847,848,850,854,857,858,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1105,1106,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1222,1223,1224,1226,1228,1229,1231,1232,1234,1238,1239,1243,1244,1245,1246,1248,1249,1250,1251,1252,1253,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1282,1284,1285],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1127,framewrk:[975,1036],freeli:43,frequenc:[975,1009],from:[40,41,42,43,834,841,844,846,847,849,850,856,857,858,901,910,911,945,951,957,975,1000,1011,1012,1019,1044,1055,1063,1070,1073,1076,1080,1089,1093,1096,1101,1123,1124,1125,1126,1127,1171,1173,1180,1183,1184,1185,1186,1187,1190,1195,1197,1208,1216,1219,1239,1245,1246,1256,1264,1267,1272,1276,1281,1282],from_cal:[1268,1269],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[127,289,431,557,685,830,831,975,1096,1101,1239],full_matric:[1096,1102],fulli:[43,1239,1256,1266,1267,1281],func:[40,41,431,437,465,466,899,900,901,945,975,987,1073,1077,1127],further:[43,1285],furthermor:1285,futur:1285,gain:1247,gamma:[1225,1226],gather:[40,41,127,289,431,557,685,975,1012],gather_nd:[40,41,127,289,431,557,685,975],gauss:[1107,1116],gaussian:[1200,1201],geglu:[1239,1242],gelu:[373,492,805,1200,1239,1242],gener:[23,40,41,43,429,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,481,899,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1079,1183,1185,1187,1188,1239,1272,1276],geometr:[975,1009],get:[40,41,43,830,831,832,901,910,911,919,934,935,940,944,947,950,951,961,962,975,979,1013,1014,1015,1042,1127,1237,1239,1256,1265,1285],get_all_arrays_in_memori:975,get_all_arrays_on_dev:901,get_framework:59,get_initial_st:[1256,1265],get_min_bas:975,get_min_denomin:975,get_mod_kei:[1268,1269],get_num_dim:[431,685,975],get_param:1233,get_param_recurs:1233,get_referrers_recurs:975,getfullargspec:1127,gist:1239,give:[43,853,854,975,1044,1282],given:[40,41,43,827,828,829,849,850,853,854,901,934,940,943,944,945,947,950,951,955,975,978,982,989,997,998,1012,1029,1030,1039,1040,1043,1046,1047,1054,1061,1066,1068,1072,1073,1075,1076,1078,1080,1081,1082,1096,1098,1103,1107,1108,1127,1171,1176,1177,1183,1186,1187,1189,1190,1193,1195,1196,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215,1245,1246,1285],global:[40,41,42,901,910,911,918,943,944,945,951,958,959,960,975,999,1014,1015,1042,1048,1049,1050,1056,1057,1073,1088,1127,1225,1226,1231,1232,1239,1270,1271],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1239,1247,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266],googl:1239,got:[43,1239],gpu0:43,gpu2:43,gpu:[901,936,939,1127],gpu_is_avail:[429,901,1127],grad:[1239,1272,1276,1281],gradient:[25,40,41,466,467,468,469,901,945,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1092,1123,1124,1125,1126,1239,1272,1273,1274,1275,1276,1277,1281,1285],gradient_descent_upd:[1073,1123,1124,1125,1126],gradient_imag:[163,344,470,600,759,1089],gradienttrack:[1073,1074],graph:[1073,1076,1078,1080,1081,1082,1227,1228,1229,1234,1239,1268,1269],graph_compil:[1227,1228,1229,1230,1231,1232,1233,1237],greater:[40,41,975,978,1007,1055,1183,1187],green:[40,41,42,1283,1284],grid:[975,1034],group:[1089,1094],guid:[1239,1240,1285],gym:1239,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1285,half:[975,978,1127,1183,1187],hand:1239,handl:[40,41,42,43,899,900,901,917,919,928,929,940,947,950,1073,1076,1078,1080,1081,1082,1127,1272,1273,1274,1275,1276,1277],has:[40,41,43,975,1058,1096,1101,1107,1111],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,975],hasattr:1127,have:[40,41,43,830,831,834,835,836,839,841,844,846,848,849,850,856,857,858,860,879,885,975,992,996,1001,1002,1003,1004,1010,1058,1073,1079,1087,1096,1102,1107,1115,1127,1239,1281,1282],haven:43,hdf5:[40,41,1268,1269],head:[1208,1219,1256,1267],head_dim:[1256,1267],height:[1089,1094],height_cutoff:[40,41],help:[59,389,429,430,901,913,914,915,916,951,1073,1233,1237,1239,1247,1249,1250,1252,1253,1255],helper:1239,here:[43,1239],hidden:[1208,1218,1256,1265],hierarch:[975,994],hierarchi:[40,41],high:[40,41,481,1183,1185,1187],higher:[1073,1076,1078,1080,1081,1082,1096,1102],highest:[1183,1185],highest_util:1127,highest_util_nod:1127,highli:1239,highlight:1285,highlight_subgraph:[1227,1229,1233],hint:43,hkt:1285,hold:[951,955,975,978,982,1046,1047],host:1239,hot:[975,1038],how:[1239,1256,1267,1268,1269,1282,1285],howev:[43,1282],http:1285,hyperbol:[834,835,838,1107,1109,1113,1114,1120,1122,1200,1207],hypothet:1285,icon:1239,idea:1239,ident:[40,41,43,127,289,431,557,685,975],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[826,830,831,834,844],if_exist:[40,41],ignor:[40,41,1272,1276],ignore_key_error:[40,41],ignore_miss:[1272,1276],ignore_non:[40,41],iinfo:[80,208,389,509,636,830],imag:[27,471,472,473,975,1028,1090,1091,1092,1093,1094,1095,1208,1209,1210,1211,1212,1214,1215,1239,1285],image_dim:[1089,1093],imkkhk:1285,immedi:[1239,1282,1285],implement:[43,834,835,842,860,885,1239,1282,1285],in_featur:[1208,1217],inadvert:43,includ:[40,41,43,846,848,856,857,858,975,978,1018,1056,1057,1069,1171,1172,1183,1187,1256,1266,1267,1270,1271,1281],include_deriv:[1171,1173,1180],include_empti:[40,41],include_gener:[1227,1228,1229,1233,1268,1269],include_inf:[40,41,975,1018,1069],include_nest:[1171,1172],include_self:[40,41],inclus:[1183,1185],incom:[1208,1217],increas:[901,923,927,933,975,993,1006,1071,1127,1171,1180],increasingli:1285,increment:[975,1023,1127],increment_param_count:1233,inde:1239,indent:[40,41,42],independ:[1183,1184],index:[40,41,431,481,975,980,981,1011,1012,1034,1055,1058,1171,1174,1176,1177,1178,1181],index_nest:1171,indic:[40,41,431,445,446,456,458,459,846,848,853,854,975,980,981,1011,1012,1020,1038,1046,1047,1171,1172,1174,1176,1177,1178,1179,1181,1182,1183,1184,1200,1205,1208,1209,1210,1211,1212,1213,1214,1215,1225,1226,1256,1257,1258,1259,1260,1261,1262,1263,1268,1269],indices_wher:[127,289,431,685,975],indistinguish:[834,844],inevit:1285,inf:[40,41,846,848,975,1018,1027,1069,1107,1111],infer:[834,841,846,847,899,900,975,1016,1019,1044,1052,1089,1093,1096,1101,1282,1285],infin:[834,835,839,844,846,848,975,1027],infinit:[834,844],inform:[830,831,832,1073,1084],init_c:[1208,1218],init_h:[1208,1218],init_on_first_step:[1272,1276],initi:[40,41,42,59,389,429,430,901,913,914,915,916,951,1073,1127,1208,1218,1233,1237,1239,1249,1250,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1268,1269,1272,1276],initialz:[1268,1269],inner:[1123,1124,1125,1126],inner_batch_fn:[1123,1124,1125],inner_batch_shap:[1208,1217],inner_cost_fn:[1123,1124,1125],inner_grad_step:[1123,1124,1125,1126],inner_learning_r:[1123,1124,1125,1126],inner_optimization_step:[1123,1124,1125,1126],inner_v:[1123,1124,1125],inp:1127,inplac:[40,41,975,985,1021,1025,1059,1073,1076,1078,1080,1081,1082,1245,1246,1272,1273,1274,1275,1276,1277],inplace_arrays_support:[431,975],inplace_decr:[127,289,431,557,685,975],inplace_incr:[127,289,431,557,685,975],inplace_oper:[0,11,12],inplace_upd:[40,41,127,289,431,557,685,975,1245,1246],inplace_variables_support:[431,975],input:[15,18,19,40,41,42,43,834,835,836,837,838,839,840,841,842,843,844,846,847,848,849,850,853,854,856,857,858,899,900,901,910,911,918,919,920,923,924,927,933,945,946,951,955,956,958,959,960,961,962,966,967,975,976,977,980,981,983,984,985,986,988,989,990,991,992,993,995,997,998,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1016,1018,1019,1020,1022,1023,1024,1026,1027,1028,1032,1033,1034,1035,1043,1045,1052,1053,1055,1058,1059,1060,1061,1063,1064,1065,1066,1068,1069,1071,1073,1077,1079,1084,1088,1089,1090,1091,1092,1093,1095,1096,1099,1101,1102,1104,1105,1106,1107,1109,1111,1113,1114,1115,1119,1120,1121,1122,1123,1124,1125,1126,1127,1183,1184,1190,1191,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1225,1226,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1270,1271,1282],input_ax:[901,945,1127],input_channel:[1256,1257,1258,1259,1260,1261,1262,1265,1266],input_queu:1127,inputs_split:1127,insert:[975,1006],insid:43,inspect:1127,inspir:1285,instal:1239,instanc:[15,16,17,18,19,40,41,43,481,860,879,885,901,910,1127,1245,1246,1278,1279],instead:[40,41,481,1190,1192,1193,1194,1195,1196,1197,1198,1285],int32:43,int64:[951,955,975,978,982,1019,1039,1040,1072],int_dtyp:[951,960,970],integ:[40,41,481,830,832,834,836,846,848,856,857,858,951,967,975,978,988,1007,1045,1054,1183,1185,1188],integr:1239,intend:43,inter:1239,interact:1239,interchang:[40,41,975,1060],interest:1239,interfac:[975,982,1282],intermedi:[40,41],intern:[40,41,901,1073,1087,1127,1171,1172,1179,1180,1247,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1268,1269,1270,1271,1278,1279],interpol:[975,1028],intersect:[1107,1108],interv:[40,41,856,857,858,975,978,989,1029,1030,1107,1110,1183,1187],introduc:1285,inv:[763,1096,1285],invalid:[856,857,858],invalid_dtyp:951,invers:[834,835,1096,1098,1100,1107,1108,1109,1110,1111,1113,1285],invert:[1096,1098,1100],invest:1285,invoc:[899,900],irrespect:1239,is_al:1127,is_arrai:[127,289,431,557,685,975,1127],is_float_dtyp:951,is_int_dtyp:951,is_mean:1127,is_sum:1127,is_var:[1233,1237],is_vari:[160,339,465,595,753,1073],isfinit:[85,213,394,514,641,834],isinf:[289,557,685,975],isinst:1127,isnan:[85,213,394,514,641,834],isnumer:1127,issu:43,item:[15,19,40,41,860,872,873,901,910,911,913,920,922,924,926,932,951,958,975,994,1017,1056,1057,1127,1171,1175,1176,1177,1180,1181,1182,1239,1268,1269,1281],iter:[15,16,17,18,19,40,41,42,899,900,901,904,905,907,908,910,911,914,915,922,924,925,926,927,932,945,975,977,986,992,993,1019,1034,1039,1043,1044,1047,1052,1054,1058,1061,1066,1071,1127,1171,1172,1173,1175,1179,1180],iterbal:[901,922,926,932,1127],its:[481,853,854,901,945,975,1019,1044,1060,1066,1127,1239],itself:[43,1171,1180],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,386,387,388,389,391,392,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,826,827,828,829,830,831,832,834,835,836,837,838,839,840,841,842,843,844,846,847,848,849,850,853,854,856,857,858,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,903,904,905,906,907,908,910,911,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1237,1239,1240,1242,1243,1244,1245,1246,1247,1249,1250,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1283,1284],ivy_backend:[40,41],ivy_bay:1285,ivy_test:43,ivyfcmodel:1281,ivyh:[40,41,42],ivymodul:[191,813],jame:1239,jax:[43,1073,1079,1239,1285],jax_concat:1239,jnp:1239,join:[40,41,975,992,1058,1127],journal:1239,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1239,1256,1265,1285],kaimingnorm:[1247,1251],kalman:1285,kalman_filt:1285,kalman_filter_step:1285,kalman_filter_upd:1285,keep:[40,41,901,946,975,1068,1127,1239,1240,1285],keep_inner_v:[1123,1124,1125],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1123,1124,1125],keepdim:[40,41,431,463,474,475,846,848,856,857,858,975,1068,1096,1099,1190,1192,1193,1194,1195,1196,1197,1198],kei:[15,16,17,40,41,42,43,860,865,901,913,975,994,1123,1124,1125,1127,1171,1174,1178,1208,1219,1220,1239,1245,1246,1256,1267,1272,1276],kept:[40,41,42,1123,1124,1125],kera:1285,kernel:[1208,1218],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,901,910,911,923,927,933,975,979,1001,1002,1003,1031,1127,1171,1175,1268,1269],keyword_color_dict:[40,41,42],kind:[830,831,832,1285],kwarg:[15,16,17,40,41,42,59,63,901,910,923,927,933,975,1031,1127,1227,1228,1229,1233,1245,1246,1268,1269],kwarg_stateful_idx:[1227,1228,1229,1233,1268,1269],kwargs_clon:1127,kwargs_dist:1127,kwargs_uni:1127,label:[43,1221,1222,1223,1224],lamb:[1073,1080,1239,1272],lamb_upd:1073,lambda:[1127,1272,1275,1277,1281],lar:[1073,1080,1081,1239,1272],larger:[830,831,975,989],largest:[40,41,830,831,832,975,980,1007],lars_upd:1073,last:[40,41,849,850,856,857,858,975,978,996,1028,1054,1058,1096,1099,1102,1190,1195,1197,1200,1205,1208,1218,1256,1266],later:[40,41,975,987],latest:[1256,1265],layer:[1073,1076,1078,1080,1082,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1225,1226,1239,1247,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276,1278,1279,1285],layer_norm:1225,layernorm:[1239,1270],layerwis:[1073,1081,1272,1275],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1171,1172,1179],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1200,1201,1202],leaky_relu:[805,1200],learn:[834,841,846,847,1073,1076,1078,1080,1081,1082,1096,1101,1123,1124,1125,1126,1183,1189,1239,1272,1273,1274,1275,1276,1277,1282,1285],learnabl:[1225,1226,1270,1271],least:43,leav:[15,18,19,40,41,1171,1172,1173,1179,1180],left:[40,41,43,1096,1099,1190,1192,1193,1194,1195,1196,1197,1198,1239],leftmost:[40,41],len:1127,length:[40,41,42,975,978,1044,1055,1066],lenton2021ivi:1239,lenton:1239,less:[40,41,43,85,213,394,514,641,834,846,848,975,988,1127,1183,1187],less_util_node_str:1127,let:[1282,1285],level:1239,librari:[1239,1281,1285],lightweight:1239,like:[43,1073,1079,1183,1187,1239,1281,1282,1285],limit:[40,41,42,830,831,832,975,989,990,991],linalg:[29,1097,1098,1099,1100,1101,1102,1103,1239],line:43,linear0:[1239,1281],linear1:1239,linear2:1281,linear:[975,1009,1028,1096,1200,1201,1202,1203,1208,1216,1239,1256,1257,1258,1259,1260,1261,1262,1263,1281],linear_algebra:[474,475,476,477,846,847,848],linear_resampl:[127,289,431,557,685,975],linearli:[975,1009],link:[43,1239],linspac:[127,289,431,557,685,975,978],list:[15,18,19,40,41,43,386,387,388,827,828,829,849,850,856,857,858,901,910,911,920,921,923,924,925,927,930,931,945,975,978,982,984,1034,1053,1054,1063,1068,1123,1124,1125,1127,1171,1172,1173,1175,1179,1180,1208,1209,1210,1211,1212,1213,1214,1215,1239,1245,1246,1256,1257,1258,1259,1260,1261,1262,1263],list_join:[40,41,42],list_stack:[40,41],liter:[846,848],littl:1282,load:[40,41],loaded_kwarg:1127,loader:1239,local:43,local_set:[975,1017],locat:[43,834,840,975,1027,1183,1184],log2:[85,394,514,641,834],log:[774,975,1030,1107,1127,1221,1222,1223,1224,1239],log_all_op:1233,log_global_inference_abs_tim:[1230,1239],log_global_inference_rel_tim:[1230,1239],logarithm:[834,842,1107,1118],logic:[31,834,843,856,857,858,1105,1106,1239],logical_and:[354,771,1104],logical_not:[85,213,394,514,641,834],logical_or:[354,771,1104],logit:[1221,1224],logspac:[127,289,431,557,685,975],look:[43,1282,1285],loop:[1123,1124,1125,1126],loss:[1222,1223,1224,1239,1281],loss_fn:[1239,1281],lot:1282,low:[40,41,481,1183,1185,1187],lower:[40,41,43,975,1033,1183,1187],lower_depth:[1268,1269],lowest:[15,18,19,40,41,1171,1180,1183,1185],lstm:[1208,1218,1239,1256],lstm_updat:[43,1208],machin:[830,831,832,834,841,846,847,1096,1101,1183,1189,1239,1282,1285],made:43,mai:[975,978,1000,1004,1239,1282,1285],main:[975,1019,1239],mainli:1239,maintain:43,make:[43,481,901,1127,1239,1282],maml:[1123,1124,1125],maml_step:1123,manag:[901,1127],manhattan:[846,848],mani:[40,41,43,975,1054,1239],manipulation_funct:[849,850],manner:[15,18,19,40,41,43,1171,1180],manual:[1171,1172,1179,1285],map:[40,41,42,834,840,901,910,975,1027,1127,1171,1176,1177,1180,1256,1267,1281],map_cont:[40,41],map_nest_at_index:1171,map_nest_at_indic:1171,map_sequ:[40,41],mapper:[901,910,911,1127],mask:[1208,1219,1220],master:43,match:[40,41,975,1031],match_kwarg:975,math:[33,480,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1127,1239],mathbb:[1096,1103],mathbf:[1096,1103],mathemat:[826,846,848],matmul:[43,289,431,557,685,975,1285],matplotlib:1282,matric:[1208,1217],matrix:[40,41,846,847,975,977,990,1032,1096,1097,1098,1099,1100,1101,1103,1208,1217,1256,1266],matrix_norm:[40,41,167,348,474,604,763,1096],matter:1239,max:[40,41,389,830,831,832,975,990,991,1002,1033,1046,1047,1127,1190,1192,1272,1274],max_batch_s:[40,41],max_chunk_s:[901,945,1127],max_depth:[40,41,901,905,908,915,923,927,933,975,1017,1127,1171,1180],max_dev_dim_step_ratio:901,max_freq:[975,1009],max_length:[40,41],max_node_dim_step_ratio:1127,max_norm:[40,41,975,990,991],max_split_factor_step_s:[901,1127],max_trust_ratio:[1073,1080,1272,1274],maxim:[1239,1282,1285],maximis:1239,maximum:[40,41,42,685,901,923,927,933,945,975,980,989,990,991,1009,1073,1080,1127,1171,1180,1190,1192],mayb:[15,18,19],mdi:1127,mean:[40,41,481,901,930,931,932,933,945,975,1002,1123,1124,1125,1126,1127,1171,1175,1183,1186,1190,1193,1196,1198,1247,1281,1285],measur:[1208,1219,1256,1267],mech:1239,mechan:[1239,1285],medic:1285,member:43,memori:[901,917,940,945,947,950,1127,1208,1218,1239],merg:43,merge_with_upstream:43,meshgrid:[289,431,685,975],messag:[1283,1284],meta:[35,1124,1125,1126,1239],method:[40,41,42,43,481,975,982,994,1034,1046,1047,1073,1080,1081,1127,1171,1172,1179,1180,1239,1256,1267,1268,1269,1282],might:[975,1000,1285],min:[40,41,389,830,831,832,846,848,975,1002,1035,1046,1047,1056,1096,1101,1127,1190,1194],min_bas:[975,1057],min_denomin:[975,1056],min_dev_dim_s:901,min_node_dim_s:1127,min_sf_tune_step:[901,1127],min_unit_dev_tune_step:901,min_unit_node_tune_step:1127,mind:1239,mini:[1225,1226,1270,1271],minimum:[40,41,685,901,951,955,975,978,981,982,989,1014,1015,1048,1049,1056,1057,1127,1190,1194],miss:[1272,1276],ml_framework:[834,841,846,847,975,978,1096,1101],mod:[975,1008],mod_depth:[1268,1269],mod_height:[1268,1269],mod_with_top_mod_key_chain:[1268,1269],mode:[40,41,474,476,899,900,901,930,931,932,933,945,1096,1101,1102,1127,1282],model:[1239,1281],modul:[40,41,42,59,975,1036,1127,1239,1240,1242,1243,1244,1245,1246,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1270,1271,1278,1279,1285],moment:[1073,1075,1076,1080,1272,1273,1274],more:[43,849,850,975,1058,1127,1239,1282,1285],more_util_node_str:1127,most:[40,41,43,1096,1101,1239,1285],move:[40,41,43,901,946,1127],much:[43,1239,1285],multi:[481,975,1036,1208,1219,1256,1267],multi_head_attent:1208,multi_index_nest:1171,multi_map:[40,41],multi_nod:1127,multidev:[901,912,913,914,933],multidevcontain:[40,41],multidevic:[901,910],multidevit:[901,904,907,910,911,915],multidevitem:[901,903,906],multidevnest:[901,905,908],multiheadattent:[1239,1256],multinod:[1127,1131],multinodecontain:1127,multinodeit:1127,multinodeitem:1127,multinodenest:1127,multinomi:[173,358,481,611,789,1183],multipl:[40,41,856,857,858,975,1031,1054,1096,1098,1190,1192,1193,1194,1195,1196,1198,1225,1226,1256,1266,1282],multipli:[40,41,975,997,1190,1195],multiprocess:[40,41,42,431,685,901,910,975,1127],must:[40,41,42,43,827,828,829,834,835,836,839,841,844,846,848,849,850,856,857,858,860,879,885,901,930,931,932,933,945,975,978,992,994,996,1004,1033,1035,1047,1058,1107,1112,1115,1127,1183,1188,1272,1276],mutabl:[1171,1173,1180],mutlidevic:[901,910],mutlinod:1127,mw_tm1:[1073,1076,1080],mx_concat:1239,mxnet:[43,1239,1285],my_func:43,mymodel:1239,name:[899,900,1227,1228,1229,1233,1281],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1282],nan:[40,41,826,834,835,839,840,975,1018,1069],nativ:[15,17,18,19,40,41,43,901,917,919,928,929,940,947,950,951,956,963,964,1127,1239,1240,1245,1246],native_modul:[1245,1246],native_module_class:[1245,1246],nativearrai:[15,18,19,43,830,831,832,834,835,836,837,838,839,840,841,842,843,844,846,848,849,850,853,854,856,857,858,860,879,885,901,919,945,946,951,955,961,966,967,975,976,977,978,980,981,982,983,984,986,988,989,990,991,992,993,995,996,997,998,1001,1002,1003,1004,1006,1007,1008,1009,1011,1012,1016,1018,1019,1020,1027,1028,1029,1030,1032,1033,1034,1035,1038,1039,1040,1043,1044,1045,1046,1047,1052,1054,1055,1058,1060,1061,1063,1064,1065,1066,1068,1069,1070,1071,1072,1127,1171,1173,1180],natur:[1107,1118,1285],ncdhw:[1208,1213,1214,1256,1261,1262],nchw:[1208,1211,1212,1215,1256,1259,1260,1263],ncw:[1208,1209,1210,1256,1257,1258],ndarrai:[43,386,387,388,389,391,392,481,975,1064],ndhwc:[1208,1213,1214,1256,1261,1262],nearest:[975,1045],need:[43,975,990,991,1208,1210,1212,1214,1239,1256,1258,1260,1262,1285],neg:[40,41,834,839,846,848,849,850,856,857,858,1190,1195,1197,1200,1202],negative_slop:1247,neither:1127,nest:[15,16,17,18,19,40,41,42,901,923,927,933,975,982,1063,1123,1124,1125,1127,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1268,1269,1272,1273,1274,1275,1276,1277],nested_indices_wher:1171,nested_map:[1127,1171],network:[1208,1217,1239,1240,1242,1256,1268,1269,1285],neural:[1208,1239,1242,1256,1281],new_node_percent_mem:1127,new_node_util:1127,new_node_utils_kei:1127,new_std:[1225,1226,1270,1271],newli:[43,899,900,975,986,987],newlin:[40,41,42],newshap:[975,986,1044],next:[830,831,1127,1268,1269,1272,1273,1274,1275,1276,1277],nhwc:[1208,1211,1212,1215,1256,1259,1260,1263],node:[40,41,1171,1172,1179],node_clon:1127,node_dist:1127,node_dist_arrai:1127,node_dist_it:1127,node_in:1127,node_mapp:1127,node_str:1127,node_to_str:1127,node_util:1127,nodedistit:1127,nodedistitem:1127,nodedistnest:1127,nodemanag:[1127,1138],nodemapp:1127,nodemappermultiproc:1127,noinspect:[43,902,952,953,954,1074,1127,1234],non:[40,41,846,848,856,857,858,899,900,951,965,1268,1269,1272,1276,1282],none:[40,41,42,43,59,61,64,386,387,388,429,431,432,435,437,444,445,446,447,454,455,456,457,458,459,460,461,462,464,474,475,481,482,827,828,829,830,831,832,834,841,846,847,848,849,850,856,857,858,899,900,901,910,911,917,918,943,944,945,946,951,958,959,960,975,978,982,999,1000,1005,1010,1011,1012,1017,1019,1021,1022,1023,1024,1025,1029,1030,1036,1038,1039,1040,1043,1046,1047,1048,1049,1054,1055,1056,1057,1066,1067,1072,1073,1076,1078,1080,1081,1082,1088,1089,1093,1096,1099,1101,1123,1124,1125,1126,1127,1171,1172,1175,1179,1180,1183,1184,1185,1186,1187,1190,1192,1193,1194,1195,1196,1197,1198,1208,1210,1212,1214,1217,1218,1219,1220,1225,1226,1227,1228,1229,1233,1237,1245,1246,1247,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279],norm:[40,41,846,848,975,990,991,1096,1099,1226,1239,1271,1272,1274],normal:[1183,1186,1225,1226,1270,1271],normalized_idx:[1225,1226],normalized_shap:[1270,1271],notat:[40,41,1190,1191],note:[43,1096,1101],noth:[40,41,1282],notimplementederror:1127,now:[40,41,901,946,975,976,1127,1239,1256,1267,1268,1269,1281,1282,1285],np_concat:1239,np_finfo:389,ns_tune_step:1127,num:[431,454,455,975,1029,1030],num_arrai:[40,41],num_arrays_in_memori:975,num_arrays_on_dev:901,num_band:[975,1009],num_channel:[1256,1263],num_chunk:1127,num_chunks_floor:1127,num_class:[1183,1184],num_cpu_cor:901,num_gpu:[120,429,901,1127],num_head:[1208,1219,1256,1267],num_kei:[1208,1219,1220],num_lay:[1256,1265],num_or_size_split:[40,41,431,460,975,1054],num_output:1127,num_queri:[1208,1219,1220],num_sampl:[431,453,481,482,975,1028,1089,1090,1183,1184],num_task:[1123,1124,1125,1126],number:[40,41,42,826,830,831,832,834,840,856,857,858,899,900,901,937,938,939,951,962,966,967,975,978,989,993,1006,1009,1016,1019,1028,1029,1030,1033,1037,1043,1054,1061,1065,1069,1071,1096,1102,1123,1124,1125,1126,1127,1183,1184,1188,1190,1192,1193,1194,1196,1198,1208,1219,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1282,1285],numer:[43,834,839,860,879,885,975,1014,1015,1048,1049,1056,1057,1107,1115,1247],numhead:[1208,1219],numpi:[40,41,43,386,387,388,389,391,392,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,975,1064,1096,1101,1102,1190,1191,1239,1281,1282,1285],nwc:[1208,1209,1210,1256,1257,1258],obj:[40,41],object:[40,41,42,59,389,830,831,832,901,951,955,975,978,982,1073,1171,1174,1176,1177,1178,1181,1182,1183,1189,1233,1237,1247,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1268,1269],object_in:[431,435,975,982],observ:1127,occupi:[830,831,832,975,1046,1047],off:[975,978],offer:1239,offset:[846,847,1225,1226],often:1282,old:[40,41],on_init:[1256,1267,1268,1269],onc:[43,901,945,1127,1183,1184,1239],one:[40,41,43,846,848,849,850,901,930,931,932,933,945,951,957,975,1019,1031,1038,1046,1047,1055,1058,1096,1099,1127,1190,1191,1192,1193,1194,1195,1196,1197,1198,1239,1282,1285],one_hot:[127,431,557,685,975],onearrai:[975,1006],ones:[40,41,77,205,386,506,633,827,975,1019,1038,1040,1239],ones_lik:[127,289,431,557,685,975],ongo:43,onli:[40,41,43,481,849,850,901,1096,1101,1127,1171,1172,1173,1179,1272,1273,1274,1275,1276,1277,1281,1282],onlin:1239,onto:[901,930,931,946,1127,1171,1175,1180],oom:[901,1127],open:[975,978,1183,1187,1239,1285],opencv:1282,oper:[40,41,834,843,975,985,1001,1002,1003,1029,1030,1059,1073,1076,1078,1080,1081,1082,1104,1105,1106,1208,1209,1210,1211,1212,1213,1214,1215,1217,1239,1240],operand:[40,41,834,835,1190,1191],oppos:[975,1009],optim:[901,1073,1076,1078,1080,1081,1082,1123,1124,1125,1126,1127,1239,1273,1274,1275,1277,1281,1285],optimizer_upd:1073,option:[15,18,19,40,41,42,43,386,387,388,827,828,829,834,841,846,847,848,849,850,856,857,858,899,900,901,910,911,919,923,924,925,926,927,930,931,932,933,940,943,944,945,946,950,951,956,961,965,974,975,977,978,980,981,982,990,991,992,997,999,1000,1009,1010,1011,1012,1016,1018,1019,1026,1028,1029,1030,1031,1034,1036,1038,1039,1040,1043,1046,1047,1050,1052,1054,1055,1056,1057,1058,1066,1068,1069,1072,1073,1076,1078,1079,1080,1081,1082,1084,1089,1093,1096,1099,1101,1123,1124,1125,1126,1127,1171,1172,1173,1175,1179,1180,1183,1184,1190,1192,1193,1194,1195,1196,1197,1198,1200,1201,1205,1208,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1245,1246,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1282],ord:[846,848,1096,1102],order:[40,41,42,43,846,848,849,850,853,854,1073,1076,1078,1080,1081,1082,1096,1099,1123,1124,1125,1278,1279],ordered_node_util_kei:1127,org:1285,organ:43,origin:[40,41,42,975,1040,1044,1072,1096,1099],other:[40,41,43,860,862,863,868,870,871,875,877,878,879,880,881,883,885,886,887,888,889,890,892,893,894,896,897,898,899,900,975,977,978,1019,1073,1077,1183,1187,1239,1281,1282,1285],other_i:[43,860,879,885],otherwis:[15,16,17,18,19,40,41,834,839,846,848,856,857,858,901,918,951,958,959,960,975,985,1066,1067,1070,1073,1079,1084,1088,1123,1124,1125,1127,1190,1192,1193,1194,1196,1198],our:[43,1239,1285],out:[43,481,860,879,975,978,1107,1111,1208,1216,1218,1239,1256,1264],out_feat_dim:[1208,1219],out_featur:[1208,1216,1217],out_i:[834,839],outdat:1285,outer:[1123,1124,1125,1126],outer_batch_fn:[1123,1124,1125],outer_batch_shap:[1208,1217],outer_cost_fn:[1123,1124,1125],outer_v:[1123,1124,1125],outlin:1282,output:[40,41,43,827,828,829,849,850,901,910,911,945,975,978,987,1010,1019,1043,1061,1073,1077,1107,1112,1127,1183,1185,1186,1187,1208,1210,1212,1214,1216,1218,1219,1220,1239,1256,1257,1258,1259,1260,1261,1262,1264,1265,1266,1267],output_ax:[901,945,1127],output_axi:1127,output_channel:[1256,1257,1258,1259,1260,1261,1262,1265,1266],output_connected_onli:[1227,1229,1233,1268,1269],output_queu:1127,output_shap:[1208,1210,1212,1214,1256,1258,1260,1262],outsid:[975,989],over:[40,41,846,848,856,857,858,1096,1099,1183,1187,1190,1192,1193,1194,1196,1198,1225,1226,1270,1271],overal:1282,overflow:[975,978],overhead:1282,overrid:[975,1038,1040,1072],overriden:[1272,1276],overwrit:[40,41,901,945,1127],overwrite_at_key_chain:[40,41],own:[1239,1282,1285],packag:[43,1282],pad:[975,993,1009,1071,1208,1209,1210,1211,1212,1213,1214,1215,1256,1257,1258,1259,1260,1261,1262,1263],pad_width:[431,975,993,1071],page:1239,pair:[1208,1220],parallel:[901,910,911,1127],parallelis:[901,910,911,1127],param:[40,41,42,43,431,445,446,834,844,901,945,975,976,1011,1012,1038,1039,1127,1238,1239,1268,1269,1281],paramet:[15,16,17,18,19,40,41,42,827,828,829,830,831,832,834,835,836,837,838,839,840,841,842,843,846,847,848,849,850,853,854,856,857,858,860,879,885,899,900,901,910,911,917,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,940,943,944,945,946,947,950,951,955,956,957,961,962,963,964,965,966,967,974,975,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,995,996,997,998,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1016,1018,1019,1020,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1039,1040,1043,1044,1045,1046,1047,1048,1049,1050,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1075,1076,1077,1078,1079,1080,1081,1082,1084,1086,1087,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1245,1246,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281],parameter:[1183,1186,1187],params_all_empti:1233,pardo:1239,pars:[975,994],part:[1073,1076,1078,1080,1081,1082,1107,1111,1239,1268,1269,1282],partial:[40,41,1268,1269],particl:1285,particular:[43,1285],pass:[40,41,42,43,901,910,945,951,956,975,987,1073,1087,1123,1124,1125,1127,1245,1246,1268,1269,1272,1276,1278,1279],pattern:[40,41,975,1001,1002,1003],per:[901,1127,1208,1209,1210,1211,1212,1213,1214,1215,1256,1257,1258,1259,1260,1261,1262,1263],percent_used_mem_on_dev:901,percent_used_mem_on_nod:1127,percentag:[901,940,1127],perf_count:1127,perform:[40,41,43,853,854,856,857,858,901,975,980,981,997,1001,1002,1003,1022,1023,1024,1028,1029,1030,1073,1076,1078,1080,1081,1082,1089,1090,1123,1124,1125,1126,1127,1171,1176,1177,1190,1192,1193,1194,1195,1196,1197,1198,1200,1205,1208,1216,1218],permissable_step:1127,permit:43,permut:[481,975,1060,1066],perpendicular:[975,996],person:1239,physci:1285,pickl:[40,41,1127],pickle_filepath:[40,41],pid:1233,pinv:[348,763,1096],pip:1239,pipelin:1281,pkk:1285,pkkm1:1285,pkm1km1:1285,place:[40,41,43,827,828,829,901,946,975,1006,1010,1022,1023,1024,1127,1272,1273,1274,1275,1276,1277],placehold:[1171,1180],pleas:[481,1096,1101],point:[43,826,827,828,829,830,831,834,835,844,846,848,951,966,975,978,1107,1115],popul:[40,41,1183,1184],popular:1285,population_s:[481,482,1183,1184],portabl:[1239,1240],posit:[15,16,17,830,831,834,839,901,923,927,933,975,976,978,1006,1009,1127,1183,1188,1245,1246],possibi:[40,41],possibl:[43,975,1031,1063,1089,1094,1285],post:[1225,1226],post_shap:[40,41],power:[43,860,885,891,975,1014,1048,1057,1247],practic:1239,pre:[901,1127,1239],pre_shap:[40,41],precis:[830,831,834,844],pred:[1221,1222,1223,1224],predict:[1221,1222,1223,1224,1285],preprint:1239,present:[40,41],preserv:[40,41,42,849,850,1073,1084],preserve_typ:[40,41,465,468,1073,1084],press:1239,prevent:[43,1073,1075,1076,1080,1127,1272,1273,1274],previou:[1073,1076,1080],previous:[975,987],prime:1239,print:[40,41,42,901,941,975,1041,1239,1281],print_all_arrays_in_memori:975,print_all_arrays_on_dev:901,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1272,1276],prob:[481,482,1183,1184,1208,1216,1256,1264],probabl:[1183,1184,1208,1216,1256,1264],problem:[43,1285],process:[43,901,910,911,940,950,975,1036,1127],process_specif:[901,940,950,1127],prod:[40,41,975,1002],produc:[901,910,911,1127],product:[40,41,975,996,997,1032,1190,1191,1208,1219,1220,1256,1267],profil:[120,283,429,550,677,901,1127],project:[1239,1281,1282,1285],promot:[43,834,835,836,844,846,848,860,885,1107,1115],prompt:1239,properli:43,properti:[40,41,389,901,913,1127,1233,1237,1268,1269,1272,1273,1274,1275,1277],provid:[40,41,43,849,850,856,857,858,899,900,901,918,951,958,959,960,965,974,975,1000,1038,1040,1047,1072,1073,1076,1078,1080,1081,1082,1088,1127,1239,1256,1265,1272,1273,1274,1275,1276,1277,1282],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1096,1100],ptype:[1233,1237],pull:[1239,1240],pure:[40,41,1239,1285],purpos:1285,put:1127,pybroadexcept:1127,pyprotectedmemb:[1127,1234],pyshadowingbuiltin:43,pyshadowingnam:[902,952,953,954,1074,1127],python:[40,41,901,940,950,975,978,1127,1239],pytorch:[1073,1076,1078,1080,1081,1082,1096,1101,1239,1272,1273,1274,1275,1276,1277,1281,1282,1285],pyunresolvedrefer:1127,quadrant:[1107,1112],queri:[40,41,860,874,895,901,934,944,1127,1208,1219,1220,1256,1267],query_dim:[1256,1267],query_kei:[40,41],queue:[40,41,42,901,910,911,975,1042,1050,1127],queue_class:[901,910,911,1127],queue_load_s:[40,41,42],queue_timeout:[40,41,42,975,1127],quick:[481,1239],quickli:[43,1281],radian:[834,837,1107,1108,1110,1112,1119,1121],rai:[1107,1108],rais:[40,41,43,856,857,858,860,885,975,985,1014,1048,1055,1057,1067,1127,1268,1269,1272,1276],ram:[901,940,947,950,1127],randint:[173,358,481,611,789,1183],random:[37,40,41,482,1184,1185,1186,1187,1188,1189,1239],random_crop:1089,random_norm:[173,358,481,611,789,1183],random_uniform:[173,358,481,611,789,1183],randomli:[481,1089,1093,1208,1216,1256,1264],randomness_factor:[1227,1229,1233,1268,1269],rang:[481,975,978,1029,1030,1107,1112,1127,1239,1281,1285],rank:[846,848,856,857,858,975,993,1068,1071],rate:[1073,1076,1078,1080,1081,1082,1123,1124,1125,1126,1256,1267,1272,1273,1274,1275,1276,1277],rather:[40,41,901,945,975,978,1026,1073,1079,1127],ratio:[901,1073,1080,1089,1094,1127,1272,1274],raw:[40,41,1096,1101],raw_delta:1127,reach:[901,923,927,933,1127,1171,1180],read:[40,41],readi:[1127,1281],real:[1107,1108,1111],realiti:1282,rearrang:[40,41,975,1001,1003],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1123,1125],receiv:[43,901,910,911,975,979,1031,1127,1256,1266],receivess:[901,1127],receiving_fn:1233,receivng:[1123,1126],recev:[1123,1124,1125],recognit:1285,recommend:1239,rectifi:[1200,1202,1203],recurr:[1208,1218],recurrent_bia:[1208,1218],recurrent_kernel:[1208,1218],recurs:[40,41,1171,1172,1173,1179,1180],redefin:43,reduc:[40,41,856,857,858,901,945,975,1002,1096,1101,1127,1190,1192,1193,1194,1195,1196,1197,1198],reduce_max:[40,41,180,363,483,616,796,1190],reduce_mean:[40,41,180,363,483,616,796,1190,1239,1281],reduce_min:[40,41,180,363,483,616,796,1190],reduce_prod:[40,41,180,363,483,616,796,1190],reduce_std:[40,41,363,1190],reduce_sum:[40,41,180,363,483,616,796,1127,1190],reduce_var:[40,41,180,363,483,616,796,1190],reduct:[39,40,41,431,458,459,856,857,858,975,1002,1046,1047,1191,1192,1193,1194,1195,1196,1197,1198,1239],refactor:43,refer:[43,856,857,858,1073,1075,1076,1096,1103,1256,1266,1285],reflected_oper:[0,13,14],regard:[901,1127],regardless:[40,41,899,900],register_paramet:1281,reimplement:1285,rel:[849,850,1073,1076,1078,1080,1081,1082],rel_slice_obj:1127,relev:[1272,1273,1274,1275,1276,1277],relu:[805,1200,1201,1202,1239,1281],remain:[43,975,1044,1171,1175],remaind:[40,41,975,1008,1054],remov:[40,41,975,1055,1123,1124,1125],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,849,850],rep:[975,1061],repeat:[40,41,43,289,685,975,1003,1061,1127,1282],repeated_config_check:[901,1127],repeatedli:[1171,1178],repetit:[40,41,975,1043,1061],replac:[40,41,43,481,482,975,989,1046,1047,1183,1184],repo:[43,1239],repres:[43,834,835,951,957,962,1208,1217],represent:[40,41,42,43,826,830,831,832,834,836,901,928,929,951,957,963,964,975,1053,1063,1127],reptil:[1123,1126],reptile_step:1123,request:[1239,1240],requir:[43,834,844,899,900,951,955,975,978,982,1245,1246],resampl:[975,1028],reserv:43,reshap:[40,41,43,481,685,975],reshape_lik:[40,41],respect:[834,836,841,860,879,975,1004,1073,1075,1076,1077,1078,1080,1081,1082,1096,1101,1107,1115,1123,1124,1125,1126],respond:43,respons:1127,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,834,835,836,839,841,843,844,846,848,856,857,858,860,879,885,901,910,975,978,1004,1046,1047,1058,1096,1099,1104,1105,1106,1107,1115,1127,1190,1192,1193,1194,1195,1196,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1239],ret:1127,ret_dict:1127,ret_fn:[901,910,911,1127],retain:[1073,1077],retain_grad:[465,466,1073,1077],retreiv:1127,retrn:[975,1053],return_cont:[40,41],return_dict:[40,41],return_graph:[1227,1228,1229],return_inner_v:[1123,1124,1125,1126],return_sequ:[1256,1265],return_st:[1256,1265],rev:[975,1000],revers:[40,41,849,850,975,1000,1066],review:43,right:[40,41,43],rk_e:1285,robot:1239,ronald:1239,root:[43,834,844],round:[289,431,685,834,844,975,978,1127],row:[975,1019,1183,1184],rule:[43,834,836,844,860,885,975,978,1107,1115],run:[43,901,910,1073,1075,1076,1080,1123,1124,1125,1126,1127,1239,1240,1256,1267,1268,1269],safe:[901,910,1127],safety_factor:[901,1127],same:[15,16,17,40,41,43,849,850,901,910,911,945,946,951,955,975,976,988,992,1007,1008,1011,1012,1038,1040,1045,1046,1047,1058,1072,1073,1079,1084,1096,1102,1107,1111,1123,1124,1125,1127,1190,1191,1208,1209,1210,1211,1212,1213,1214,1215,1239,1256,1257,1258,1259,1260,1261,1262,1263,1281,1285],same_arrai:[40,41],sampl:[975,1028,1089,1090,1183,1184,1186,1187,1208,1216,1239,1256,1264],satisfi:[975,982,1096,1098,1103],save:[40,41,975,1051,1062,1089,1091,1268,1269],save_debug_info:1233,save_dir:[429,430,901,916,1127],save_to_disk:[1227,1229,1233,1268,1269],save_weight:[1268,1269],scalar:[846,848,975,989,1038,1065,1069],scale:[901,943,944,1073,1081,1127,1208,1216,1219,1220,1225,1226,1256,1264,1267,1272,1275],scaled_dot_product_attent:1208,scatter:[975,1038,1046,1047],scatter_flat:[127,289,431,557,685,975],scatter_nd:[127,289,431,557,685,975],scene:[1073,1076,1078,1080,1081,1082],schemat:1239,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,834,836,901,932,975,983,996,1004,1042,1050,1060,1073,1075,1076,1080,1123,1125,1127,1272,1273,1274],secondli:1285,sector:[834,835],see:[43,59,389,429,430,481,834,836,846,848,856,857,858,860,879,885,901,913,914,915,916,951,975,978,1029,1030,1073,1107,1115,1233,1237,1239,1247,1249,1250,1252,1253,1255],seed:[40,41,173,481,789,1183],seed_valu:[40,41,481,1183,1188],seem:1239,seen_set:[975,1017],select:[975,982,1055,1282,1285],self:[40,41,43,59,389,429,430,860,879,885,901,913,914,915,916,951,1073,1127,1233,1237,1239,1247,1249,1250,1252,1253,1255,1272,1276,1281,1285],self_i:[860,879],sent:1127,seper:[43,975,1009],seq:[40,41,42,1190,1191,1268,1269],sequenc:[15,16,17,40,41,42,43,481,899,900,901,910,911,920,921,922,923,924,925,926,927,930,931,945,951,955,975,978,982,984,986,992,993,1019,1031,1034,1039,1043,1044,1047,1054,1058,1061,1066,1071,1073,1077,1089,1093,1094,1096,1099,1127,1171,1182,1183,1185,1187,1190,1192,1193,1194,1195,1196,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215,1225,1226,1245,1246,1256,1257,1258,1259,1260,1261,1262,1263,1265,1268,1269,1270,1271,1272,1276,1278,1279],sequenti:1239,seri:43,set:[15,18,19,40,41,901,930,931,943,944,945,975,977,999,1019,1048,1049,1050,1051,1073,1076,1078,1079,1080,1081,1082,1096,1099,1127,1171,1172,1179,1181,1182,1183,1184,1188,1190,1192,1193,1194,1195,1196,1197,1198,1237,1239,1256,1265,1272,1273,1274,1275,1276,1277,1282,1285],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1237,set_debug_mod:44,set_default_devic:901,set_default_dtyp:951,set_default_float_dtyp:951,set_default_int_dtyp:951,set_default_nod:1127,set_exception_debug_mod:44,set_framework:[40,41,43,59,1127,1239,1281,1282,1285],set_ivy_backend:[40,41],set_min_bas:975,set_min_denomin:975,set_nest_at_index:1171,set_nest_at_indic:1171,set_param:1233,set_queue_timeout:975,set_split_factor:[901,1127],set_stat:[1272,1273,1274,1275,1276,1277],set_tmp_dir:975,set_with_grad:1073,setter:1127,sever:1285,sgd:[1239,1272],shape0:1127,shape:[40,41,43,386,387,388,431,444,459,481,685,827,828,829,849,850,901,913,951,955,975,976,986,988,992,993,1006,1007,1008,1010,1012,1016,1019,1038,1039,1040,1043,1044,1045,1046,1047,1053,1055,1058,1071,1072,1089,1093,1096,1098,1101,1107,1111,1112,1127,1183,1185,1186,1187,1190,1191,1208,1210,1212,1214,1233,1237,1256,1258,1259,1260,1261,1262,1263,1270,1271],shape_slic:[40,41],shape_to_tupl:975,share:[40,41,1239,1282],shift:1127,should:[40,41,42,43,481,834,835,836,839,844,846,848,860,879,885,899,900,901,975,986,987,994,1038,1044,1073,1076,1078,1080,1081,1082,1107,1115,1127,1190,1191,1239],show:[40,41,1233,1239,1285],show_debug_info:1233,show_graph:[1227,1239,1268,1269,1272,1276],show_mod_in_top_mod:[1268,1269],show_structur:[1268,1269],show_sub_contain:[40,41],show_v:[1268,1269],show_v_in_top_v:[1268,1269],shown:[40,41],shp:1127,shuffl:[40,41,173,481,789,1183],shuffle_h5_fil:[40,41],sigmoid:[805,1200,1239,1281],signatur:[43,59,389,429,430,431,465,470,474,478,479,481,901,913,914,915,916,951,1073,1233,1237,1247,1249,1250,1252,1253,1255],signific:1285,similar:[43,1208,1219,1256,1267],similarli:[1096,1101],simpl:[43,975,1005,1239,1282,1285],simpler:43,simplest:1282,simpli:[40,41,43,1239,1282,1285],simultan:1239,sin:[774,975,1009,1107,1121,1282],sinco:1282,sine:[834,835,1107,1110,1119,1120],singl:[40,41,899,900,901,910,911,930,931,932,933,975,1055,1065,1069,1089,1094,1127,1183,1186,1187,1190,1192,1193,1194,1195,1196,1197,1198,1239,1282,1285],singleton:[846,848,856,857,858],singular:[1096,1102],sinh:[774,1107],siren:[1239,1247],size:[40,41,42,431,458,901,924,925,926,927,943,944,945,975,978,986,1029,1030,1046,1054,1089,1093,1096,1099,1102,1127,1183,1184,1186,1187,1190,1192,1193,1194,1195,1196,1197,1198,1256,1257,1258],size_ordered_arrai:[40,41],skew:[1096,1103],skinv:1285,skip:[40,41],slice:[40,41,853,854,975,1011,1012,1127,1171,1178],slice_kei:[40,41],slice_obj:[40,41,1127],slice_via_kei:[40,41],slide:[1208,1209,1210,1211,1212,1213,1214,1215,1256,1257,1258,1259,1260,1261,1262,1263],slope:[1200,1202],small:[1221,1222,1223,1224,1225,1226,1239,1270,1271,1282],smaller:[975,989],smallest:[40,41,830,831,832,975,981,988],smallest_norm:[389,830,831],softmax:[189,492,805,1200,1208,1219,1220],softplu:[805,1200],solv:1285,some:[40,41,43,975,978,1073,1075,1076,1078,1080,1081,1082,1087,1208,1216,1239,1256,1264,1282,1285],some_backend:43,some_namespac:43,someth:[43,1285],something_cool:43,somewher:[40,41],soon:43,sort:[40,41,42,854,1096,1102,1127],sort_by_kei:[40,41],sorting_funct:[853,854],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,386,387,388,389,391,392,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,479,480,481,482,827,828,829,830,831,832,834,835,836,837,838,839,840,841,842,843,844,846,847,848,849,850,853,854,856,857,858,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,903,904,905,906,907,908,910,911,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1237,1242,1243,1244,1245,1246,1247,1249,1250,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1283,1284,1285],space:[975,978,1009,1029,1030],spars:[1221,1224],sparse_cross_entropi:1221,spawn:[975,1036],special:[834,835],specif:[40,41,43,901,943,975,994,1001,1002,1003,1036,1123,1124,1125,1126,1127,1183,1189,1239,1268,1269,1281,1282],specifc:[1183,1184],specifi:[40,41,43,846,847,848,849,850,856,857,858,901,920,921,922,923,924,925,926,927,930,931,935,937,941,944,945,946,951,955,957,975,978,980,981,982,989,992,993,1010,1011,1012,1018,1029,1030,1058,1068,1071,1096,1099,1127,1171,1176,1177,1181,1182,1190,1191,1192,1193,1194,1195,1196,1197,1198],split:[40,41,127,289,431,557,685,901,910,924,925,926,927,943,944,945,975,1031,1127],split_arg:1127,split_factor:[901,910,1127],split_func_cal:[901,1127],split_siz:1127,spread:[901,933,1127],sqrt:[85,213,394,514,641,834,846,848],squar:[834,844,975,1019,1096,1098],squeez:[127,289,431,557,685,975],stabil:[853,854,975,1056,1057],stabl:[853,854,975,1014,1015,1048,1049,1056,1057],stable_divid:975,stable_pow:975,stack:[40,41,289,685,975,1089,1094,1171,1172,1179,1256,1265],stack_imag:[163,344,470,600,759,1089],stacked_dim_s:1127,stage:43,standard:[40,41,830,831,1183,1186,1190,1196,1225,1226,1239,1240,1270,1271],start:[40,41,43,429,430,431,432,454,455,481,901,916,975,978,1029,1030,1127,1239,1282],starting_index:[40,41],starting_split_factor:[901,1127],state:[1127,1208,1218,1227,1228,1229,1233,1239,1242,1243,1244,1245,1246,1247,1249,1250,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281],statement:1282,static_argnam:[431,437,899,900],static_argnum:[431,437,899,900],std:[481,1183,1186],step:[40,41,431,432,901,975,978,1029,1030,1073,1075,1076,1078,1080,1081,1082,1123,1124,1125,1126,1127,1239,1272,1273,1274,1275,1276,1277,1281,1285],stephen:1239,stick:1239,still:[40,41,43],stochast:[1272,1277],stop:[40,41,429,430,431,432,454,455,901,916,945,975,978,1029,1030,1073,1076,1078,1080,1081,1082,1084,1123,1124,1125,1126,1127,1272,1273,1274,1275,1276,1277],stop_gradi:[40,41,339,465,595,753,901,945,1073,1076,1078,1080,1081,1082,1123,1124,1125,1126,1127,1272,1273,1274,1275,1276,1277],stopiter:1127,store:[40,41,975,1009,1054,1073,1087,1268,1269],store_var:[1268,1269],str:[15,16,17,40,41,42,43,386,387,388,389,391,392,830,831,832,899,900,901,910,911,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,945,951,956,957,962,963,964,965,966,967,974,975,982,999,1001,1002,1003,1034,1036,1039,1046,1047,1096,1099,1101,1123,1124,1125,1126,1127,1171,1175,1190,1191,1245,1246,1256,1267,1268,1269],str_to_nod:1127,straight:1282,strength:[1239,1285],stride:[1208,1209,1210,1211,1212,1213,1214,1215,1256,1257,1258,1259,1260,1261,1262,1263],string:[40,41,43,901,917,919,928,929,934,940,946,947,950,951,955,961,963,964,965,974,975,978,982,999,1019,1039,1040,1072,1127,1208,1209,1210,1211,1212,1213,1214,1215,1256,1257,1258,1259,1260,1261,1262,1263,1268,1269],structur:[40,41,42,43,975,994],structural_diff:[40,41],sub:[40,41,901,924,925,930,931,932,933,975,1054,1123,1124,1125,1126,1127],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1127,sub_mod:[1268,1269],sub_modul:[1278,1279],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1239,1240,1270,1271,1278,1279],subsequ:43,subset:43,substr:[40,41],suffici:[1096,1101],suggest:1239,suitabl:[1089,1094],sum:[40,41,431,458,459,846,848,901,930,931,932,933,945,975,998,1002,1046,1047,1127,1190,1191,1197],summat:[40,41,1190,1191],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,95,98,99,101,105,108,109,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,164,165,166,168,169,170,174,175,176,177,178,179,181,182,183,184,185,186,187,190,192,193,195,196,197,198,199,200,201,206,207,209,210,211,214,215,216,217,218,219,222,223,225,229,232,233,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,345,346,347,349,350,351,352,353,355,356,359,360,361,362,364,365,366,367,368,369,370,371,374,376,377,378,379,380,381,382,387,388,390,391,392,395,396,397,398,399,400,401,402,403,404,407,408,410,414,417,418,430,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,466,467,468,469,471,472,473,475,476,477,480,482,484,485,486,487,488,489,490,493,494,496,497,498,499,500,501,502,507,508,510,511,512,515,516,517,518,519,520,521,522,523,524,527,528,530,534,537,538,546,551,552,553,554,555,556,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,596,597,598,599,601,602,603,605,606,607,608,612,613,614,615,617,618,619,620,621,622,623,627,628,629,634,635,637,638,639,642,643,644,645,646,647,648,649,650,651,654,655,657,661,664,665,673,678,679,680,681,682,683,684,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,754,755,756,757,758,760,761,762,764,765,766,767,768,769,770,772,773,775,776,777,778,779,780,781,782,783,784,785,786,787,788,790,791,792,793,794,795,797,798,799,800,801,802,803,806,807,808,809,810,811,812,814,815,817,818,819,820,821,822,823,828,829,831,832,835,836,837,838,839,840,841,842,843,844,846,847,848,850,854,857,858,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,900,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1105,1106,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1184,1185,1186,1187,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1222,1223,1224,1226,1228,1229,1231,1232,1234,1238,1239,1243,1244,1246,1248,1249,1250,1251,1252,1253,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1282,1284,1285],supports_inplac:975,suppos:1285,sure:43,svd:[348,604,763,1096],swap:[40,41,975,1060],swapax:[40,41,557,685,975,1285],symmetr:[1096,1103],syntax:[429,431,465,470,474,478,479,481],tab:1239,take:[43,975,1028],taken:[1190,1192,1193,1194,1196,1198],tan:[774,1107,1111],tangent:[1107,1111,1112,1113,1121,1122,1200,1207],tanh:[774,805,1107,1200],target:[40,41,901,917,920,921,922,923,924,925,926,927,930,931,932,933,946,1127,1239],target_dict:[40,41],task:[43,1123,1124,1125,1126],team:[43,1285],templat:1239,temporari:[975,1051,1062],tensor:[40,41,43,431,458,459,853,854,901,919,951,961,975,978,980,981,986,1029,1030,1033,1035,1038,1039,1040,1044,1046,1047,1054,1072,1127,1183,1184,1185,1208,1216,1218,1239,1256,1264,1266,1272,1273,1274,1275,1276,1277,1281,1282],tensorflow:[43,1096,1101,1208,1210,1212,1214,1239,1256,1258,1260,1262,1282,1285],term:[40,41,1208,1218,1239,1256,1266],termcolor:[40,41,42],termin:[40,41,42,1127],test:[43,834,839,856,857,858,951,966,967],test_array_api:43,tf_concat:1239,than:[40,41,830,831,846,848,849,850,901,945,975,978,988,989,1007,1026,1033,1055,1058,1073,1079,1127,1183,1187,1239,1282],thei:[40,41,43,1107,1112,1123,1124,1125,1183,1184,1239,1278,1279,1282],them:[1239,1285],themselv:[1171,1172],therefor:43,thi:[40,41,42,43,901,923,927,933,940,945,950,975,978,1009,1042,1044,1050,1073,1076,1078,1079,1080,1081,1082,1087,1096,1099,1127,1171,1175,1180,1190,1192,1193,1194,1195,1196,1197,1198,1208,1217,1239,1268,1269,1272,1273,1274,1275,1276,1277,1281,1282,1285],thing:[43,1239],those:[40,41,43,975,989,1073,1087,1096,1102,1127],though:43,threshold:[975,1033,1035],through:[40,41],tickbox:43,tile:[289,557,685,975],time:[975,1061,1073,1076,1080,1123,1124,1125,1126,1127,1183,1184,1208,1218,1256,1267,1268,1269,1285],time_chronolog:[1227,1228,1233],time_infer:[1227,1228],timeout:[40,41,42,901,910,911,975,1042,1050,1127],timestep:[1208,1218,1256,1265],timing_fnam:[1227,1228],titl:1239,tmp_dir:975,tmp_dr:[975,1051],to_appli:[40,41],to_clon:[901,1127],to_dev:[40,41,120,283,429,550,677,901],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[901,1127],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1239],to_ivy_modul:[191,813,1239,1245],to_json:[40,41],to_kv_fn:[1208,1219],to_kv_v:[1208,1219],to_list:[40,41,431,685,975],to_multi_dev:[40,41],to_mut:[1171,1173,1180],to_n:[15,40,41,1239],to_nod:1127,to_numpi:[40,41,431,685,975,1239,1281],to_out_fn:[1208,1219],to_out_v:[1208,1219],to_q_fn:[1208,1219],to_q_v:[1208,1219],to_raw:[40,41],to_scalar:[431,685,975],todo:[43,1127],togeth:[40,41,1278,1279],tool:[1239,1282],top_mod:[1268,1269],topic:1285,torch:[43,899,900,1239,1281,1282,1285],torch_concat:1239,torchfcmodel:1281,total:[40,41,42,901,947,1127],total_mem_on_dev:901,total_mem_on_nod:1127,tpu:[901,948,1127],tpu_is_avail:[429,550,677,901,1127],tpye:[951,962],trace:[40,41,975,1026],track:[43,901,1127,1171,1180,1268,1269],track_submod_call_ord:[1268,1269],track_submod_ret:[1268,1269],trail:[1270,1271],train:[1073,1075,1076,1080,1239,1240],trainabl:[1073,1079,1239,1240,1245,1246,1268,1269,1278],trainer:1239,tran:1285,transform:[1208,1216,1217],transpos:[40,41,127,289,431,685,901,932,975,1127,1208,1210,1212,1214,1256,1258,1260,1262],travers:[15,18,19,40,41,1171,1180],treat:[40,41,899,900],tree_depth:1237,tree_height:1233,tri:[40,41],trigonometr:[834,837,1107,1108,1111,1119],trim_kei:[40,41],trust:[1073,1080,1272,1274],truth:[834,841,843,860,879,975,1004,1104,1105,1106],try_else_non:975,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[901,1127],tune_dev_alloc:901,tune_dev_split:901,tune_node_alloc:1127,tune_node_split:1127,tune_step:[901,1127],tupl:[15,16,17,18,19,40,41,43,386,387,388,827,828,829,846,848,849,850,856,857,858,899,900,975,993,1009,1010,1053,1071,1127,1171,1172,1173,1174,1176,1177,1178,1179,1180,1181,1182,1183,1185,1190,1192,1193,1194,1195,1196,1197,1198],tutori:43,two:[40,41,975,978,983,996,1032,1060,1096,1099,1102],type:[15,18,40,41,42,43,59,391,392,429,430,827,828,829,831,832,834,835,836,839,841,844,846,848,849,850,856,857,858,860,879,885,901,913,914,915,916,928,929,933,945,951,955,956,957,961,962,963,964,965,966,967,974,975,976,978,982,988,992,994,1004,1007,1008,1010,1019,1026,1038,1039,1040,1045,1059,1069,1072,1073,1079,1084,1107,1115,1127,1233,1237,1239,1247,1249,1250,1252,1253,1255,1268,1269,1282],types_to_iteratively_nest:[40,41,42],uint8:[1089,1091,1095],uint8_img_to_float_img:1089,unchang:[15,16,17,18,19],uncom:43,underli:[834,836],underwai:43,unif:1127,unifi:[40,41,901,930,931,932,933,945,1127,1239],uniform:[40,41,1183,1184,1186,1187,1247,1249,1250,1253,1254],uniformli:[1183,1185,1187],unify_arrai:1127,unify_it:1127,unify_nest:1127,union:[15,18,19,40,41,43,386,387,388,389,391,392,827,828,829,830,831,832,834,835,836,837,838,839,840,841,842,843,844,846,848,849,850,853,854,856,857,858,860,879,885,899,900,901,919,924,925,926,927,945,946,951,955,956,957,961,962,963,964,965,966,967,974,975,976,977,978,980,981,982,983,984,986,988,989,990,991,992,993,995,996,997,998,1001,1002,1003,1004,1006,1007,1008,1009,1010,1011,1012,1016,1018,1019,1020,1027,1028,1029,1030,1032,1033,1034,1035,1038,1039,1040,1043,1044,1045,1046,1047,1052,1053,1054,1055,1058,1060,1061,1063,1064,1065,1066,1068,1069,1070,1071,1072,1127,1171,1172,1173,1179,1180],uniqu:[901,910,911,1123,1124,1125,1126,1127,1171,1175],unique_kwarg:1127,unit:[43,901,1107,1108,1110,1127,1200,1201,1202,1203],unitari:[1096,1102],unless:[975,1038,1040,1072],unlik:[901,1127],unnorm:[1183,1184],unpack:[975,1068],unrol:[1208,1218],unset:1282,unset_debug_mod:44,unset_default_devic:901,unset_default_dtyp:951,unset_default_float_dtyp:951,unset_default_int_dtyp:951,unset_framework:[59,1282],unset_with_grad:1073,unstack:[40,41,127,289,431,557,685,975],until:43,unus:[899,900],updat:[40,41,431,458,459,901,910,975,1024,1046,1047,1073,1075,1076,1078,1080,1081,1082,1123,1124,1125,1127,1171,1176,1177,1181,1182,1208,1218,1239,1240,1245,1246,1272,1273,1274,1275,1276,1277,1282,1285],update_backend:[40,41],update_config:[40,41],update_inference_tim:1233,upper:[40,41,1183,1187],upper_depth:[1268,1269],upstream:43,usabl:[1239,1285],usag:[901,945,1127],use:[40,41,42,43,481,901,910,911,936,948,975,1043,1056,1057,1096,1101,1127,1208,1219,1225,1226,1239,1270,1271,1282,1285],used:[40,41,43,481,901,910,940,943,944,950,951,962,975,1014,1015,1031,1040,1046,1047,1048,1049,1072,1073,1080,1081,1096,1099,1123,1124,1125,1126,1127,1171,1180,1256,1267,1272,1274,1275,1281,1282],used_dev:[901,910],used_mem_on_dev:901,used_mem_on_nod:1127,used_node_str:1127,used_node_strs_dict:1127,useful:[40,41,901,945,1127,1208,1217,1239,1282],user:[1239,1256,1267,1268,1269,1282,1285],uses:1239,using:[40,41,1073,1075,1076,1171,1174,1178,1190,1191,1208,1216,1220,1239,1256,1264,1281,1282,1285],util:[901,934,1127],utility_funct:[856,857,858],v_with_top_v_key_chain:[1268,1269],val:[40,41,431,449,450,451,860,895,975,1022,1023,1024,1048,1049,1237],valid:[856,857,858,951,956,975,1056,1057,1208,1209,1210,1211,1212,1213,1214,1215,1256,1257,1258,1259,1260,1261,1262,1263],valid_dtyp:951,valu:[40,41,431,834,840,841,843,846,848,853,854,860,879,901,913,944,945,975,976,978,980,981,989,990,991,993,994,1000,1004,1009,1010,1011,1012,1027,1029,1030,1033,1035,1042,1043,1044,1045,1046,1047,1048,1049,1050,1066,1069,1070,1071,1073,1077,1080,1089,1095,1096,1102,1104,1105,1106,1107,1116,1117,1118,1123,1124,1125,1127,1171,1175,1176,1177,1181,1182,1183,1186,1187,1190,1192,1194,1208,1219,1220,1225,1226,1233,1256,1267,1270,1271,1272,1274],value_is_nan:975,vanilla:[1123,1125],var_shap:1247,variabl:[15,16,17,18,19,40,41,339,465,595,753,975,985,1022,1023,1024,1025,1026,1059,1073,1076,1077,1078,1079,1080,1081,1082,1084,1087,1123,1124,1125,1126,1208,1219,1225,1226,1245,1246,1247,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279],variable_data:[465,753,1073],varianc:[40,41,1190,1198,1285],varieti:1282,variou:[43,1239],vector:[40,41,474,477,846,848,975,991,996,1096,1102,1103,1208,1217,1256,1266],vector_norm:[40,41,97,221,406,526,653,846],vector_to_skew_symmetric_matrix:[167,348,474,604,763,1096],verbos:1284,veri:[43,1239],verifi:43,version:43,via:[1171,1172,1179,1282],view:[1089,1094],vision:1239,visual:1282,volum:[1208,1213],vw_tm1:[1073,1076,1080],wai:[1282,1285],wait:[40,41,42,43],want:[1239,1282,1285],warn:[59,66,67,68,69,70],warp:[470,471,1089,1090],watch:1281,weight:[1073,1075,1076,1078,1080,1081,1082,1208,1217,1218,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1268,1269,1272,1274,1275],weight_initi:[1256,1257,1258,1259,1260,1261,1262,1263,1265,1266],weights_path:[1268,1269],well:[40,41,975,1018],were:[40,41,1127],what:[43,1239],when:[40,41,42,43,901,975,987,1057,1070,1096,1102,1127,1239,1268,1269,1282,1285],where:[40,41,43,289,431,685,834,840,856,857,858,860,885,975,978,986,989,993,1006,1020,1027,1038,1071,1096,1102,1171,1172,1179,1183,1184],wherea:43,wherebi:[1171,1180],whether:[15,18,19,40,41,42,856,857,858,899,900,901,919,932,936,940,945,948,950,951,961,965,966,967,974,975,977,983,984,997,1000,1005,1009,1016,1018,1021,1025,1026,1031,1052,1059,1068,1069,1073,1076,1077,1078,1079,1080,1081,1082,1084,1123,1124,1125,1126,1127,1171,1172,1173,1175,1179,1180,1183,1184,1200,1201,1208,1216,1239,1245,1246,1256,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277],which:[40,41,42,43,481,827,828,829,830,831,832,846,847,848,849,850,856,857,858,899,900,901,910,911,919,924,925,926,927,930,931,932,933,935,937,941,943,944,945,951,956,961,965,974,975,978,982,992,994,996,997,998,1000,1010,1011,1012,1013,1019,1020,1028,1029,1030,1037,1038,1039,1040,1041,1043,1046,1047,1054,1058,1068,1070,1072,1073,1076,1077,1078,1080,1081,1082,1084,1086,1087,1089,1091,1096,1099,1107,1112,1127,1171,1175,1176,1177,1181,1182,1183,1184,1185,1186,1187,1190,1192,1193,1194,1195,1196,1197,1198,1200,1205,1208,1219,1220,1239,1245,1246,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276,1278,1279,1281,1282],whitespac:[40,41,42],whose:[43,834,835,849,850,860,885,975,982,987,1190,1191,1192,1193,1194,1196,1198],why:[1239,1240],width:[1089,1094],wiki:1285,wikipedia:1285,window:[1089,1094,1208,1209,1210,1211,1212,1213,1214,1215,1256,1257,1258,1259,1260,1261,1262,1263],wise:[40,41,43,834,836,837,841,843,860,879,885,975,988,989,1004,1007,1008,1033,1035,1045,1073,1076,1078,1080,1082,1104,1105,1106,1107,1108,1110,1111,1112,1115,1116,1117,1118,1119,1121,1200,1201,1202,1203,1204,1205,1206,1207],wish:1282,with_arg_label:[1227,1229,1233,1268,1269],with_array_cach:[1227,1228,1229,1233],with_bia:[1256,1266],with_cal:[975,1000],with_default_key_color:[40,41],with_edge_label:[1227,1229,1233,1268,1269],with_entries_as_list:[40,41],with_grad:[1073,1083,1268,1269],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1127,with_output_label:[1227,1229,1233,1268,1269],with_partial_v:[1268,1269],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,431,460,975,1054,1127],with_to_kv_fn:[1256,1267],with_to_out_fn:[1256,1267],with_to_q_fn:[1256,1267],within:[15,18,19,975,978,1096,1102,1183,1187],without:[40,41,43,975,1042,1044,1050,1171,1173,1282],wonder:1239,word:[15,16,17,975,978,1183,1187,1245,1246],work:[43,1281],worker:[901,910,911,1127],worker_class:[901,910,911,1127],worker_kwarg:1127,would:[43,853,854,1200,1205,1239,1282,1285],wrap:[15,40,41,42,43,429,431,465,470,474,478,479,481,975,987,1073,1087,1239],wrapper:43,write:[40,41,43,1239,1240,1285],written:[43,1239,1285],ws_new:[1073,1076,1078,1080,1081,1082],x1_i:[834,836,841,975,1004,1107,1115],x2_i:[834,836,841,975,1004,1107,1115],x_feat_dim:[1208,1219],x_i:[834,835,839,844],x_in:[1239,1281],x_inv:[1096,1098],x_max:[431,975,989],x_min:[431,975,989],x_sub:1127,xkk:1285,xkkm1:1285,xkm1km1:1285,xs0:1127,xs_t:1127,year:[1239,1285],yet:[1171,1180,1285],yield:[975,1070],you:[43,1239,1281,1282,1285],your:[1239,1240,1281,1282,1285],your_awesome_project:1282,yourself:[43,1239],yourslef:43,youtub:43,zero:[40,41,77,205,386,506,633,827,846,848,856,857,858,975,993,1038,1040,1046,1047,1071,1072,1073,1075,1076,1080,1081,1208,1216,1239,1247,1256,1257,1258,1259,1260,1261,1262,1263,1264,1266,1272,1273,1274,1275],zero_pad:[289,431,557,685,975],zeros_lik:[127,289,431,557,685,975],zip:1127,zk_e:1285},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1000,"function":[77,80,85,96,100,102,103,104,106,107,205,208,213,220,224,226,227,228,230,231,386,389,394,405,409,411,412,413,415,416,506,509,514,525,529,531,532,533,535,536,633,636,641,652,656,658,659,660,662,663,827,830,834,845,849,851,852,853,855,856],Ones:1252,Using:1282,abs:[290,558,686,976],aco:[775,1108],acosh:[776,1109],activ:[189,373,492,625,805,1200,1242],adam:1273,adam_step:1075,adam_upd:1076,algebra:[97,167,221,348,406,474,526,604,653,763,846],all:[108,232,417,537,664,857],all_equ:977,all_nested_indic:1172,ani:[109,233,418,538,665,858],api:[0,43,75,111,203,235,384,420,504,540,631,667,825],arang:[128,291,432,559,687,978],arg_nam:979,argmax:[129,433,560,688,980],argmin:[130,434,561,689,981],args_to_ivi:16,args_to_n:17,argsort:[105,229,414,534,661,854],arithmet:[1,112,236,421,541,668],arrai:[0,3,43,75,110,111,113,131,203,234,235,237,244,292,384,419,420,422,435,504,539,540,542,562,631,666,667,669,690,825,860,982],array_equ:[293,691,983],arrays_equ:984,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[777,1110],asinh:[86,395,515,642,835],assert_supports_inplac:985,atan2:[779,1112],atan:[778,1111],atanh:[780,1113],attribut:[5,114,238,423,543,670],backend:[43,73],bilinear_resampl:[164,345,471,601,760,1090],binary_cross_entropi:1222,bitwis:[7,115,239,424,544,671],bitwise_and:[87,214,396,516,643,836],broadcast_to:[294,692,986],builder:51,builtin:[110,234,244,419,539,666,860],builtin_ab:[245,861],builtin_add:[246,862],builtin_and:[247,863],builtin_bool:[248,864],builtin_contain:[249,865],builtin_deepcopi:[250,866],builtin_dir:[251,867],builtin_eq:[252,868],builtin_float:[253,869],builtin_floordiv:[254,870],builtin_g:[255,871],builtin_getattr:[256,872],builtin_getattribut:[257,873],builtin_getitem:[258,874],builtin_gt:[259,875],builtin_int:[260,876],builtin_invert:[261,877],builtin_l:[262,878],builtin_lt:[263,546,673,879],builtin_mul:[264,880],builtin_n:[265,881],builtin_neg:[266,882],builtin_or:[267,883],builtin_po:[268,884],builtin_pow:[269,885],builtin_radd:[270,886],builtin_rand:[271,887],builtin_rfloordiv:[272,888],builtin_rmul:[273,889],builtin_ror:[274,890],builtin_rpow:[275,891],builtin_rsub:[276,892],builtin_rtruediv:[277,893],builtin_rxor:[278,894],builtin_setitem:[279,895],builtin_sub:[280,896],builtin_truediv:[281,897],builtin_xor:[282,898],cache_fn:987,cast:[132,295,436,563,693,955],ceil:[296,694,988],choleski:[764,1097],choose_random_framework:61,citat:1239,clear_framework_stack:62,clear_mem_on_dev:[679,917],clip:[297,695,989],clip_matrix_norm:990,clip_vector_norm:991,clone:1142,clone_arrai:1143,clone_it:1144,clone_nest:1145,clonedit:1129,cloneditem:1128,clonednest:1130,closest_valid_dtyp:956,code:1285,comparison:[9,116,240,425,545,672],compil:[298,437,696,899,900,1227],compile_graph:1228,concaten:[133,299,438,564,697,992],constant:[76,204,385,505,632,826],constant_pad:[300,565,698,993],contain:[40,41],container_typ:[699,994],content:1239,contribut:43,conv1d:[195,376,496,817,1209,1257],conv1d_transpos:[196,377,497,818,1210],conv1dtranspos:1258,conv2d:[197,378,498,627,819,1211,1259],conv2d_transpos:[198,379,499,820,1212],conv2dtranspos:1260,conv3d:[199,380,500,628,821,1213,1261],conv3d_transpos:[200,381,501,822,1214],conv3dtranspos:1262,convers:15,convert:[191,813,1245],convert_dtyp:957,copy_arrai:[700,995],copy_nest:1173,core:[119,243,428,549,676,859],cos:[88,397,517,644,837],cosh:[89,398,518,645,781,838,1114],cprint:1284,creat:43,creation:[77,205,386,506,633,827],cross:[301,701,996],cross_entropi:1223,cumprod:[134,302,439,702,997],cumsum:[703,998],current_framework:63,current_framework_str:[704,999],data:[80,84,208,212,389,393,509,513,636,640,830,833],debug_mod:45,debugg:44,default_devic:918,default_dtyp:958,default_float_dtyp:959,default_int_dtyp:960,default_nod:1146,depthwise_conv2d:[201,382,502,629,823,1215],depthwiseconv2d:1263,design:43,dev:[122,285,552,680,919],dev_clon:920,dev_clone_arrai:921,dev_clone_it:922,dev_clone_nest:923,dev_dist:924,dev_dist_arrai:925,dev_dist_it:926,dev_dist_nest:927,dev_from_str:[123,286,553,681,928],dev_to_str:[124,287,554,682,929],dev_unifi:930,dev_unify_arrai:931,dev_unify_it:932,dev_unify_nest:933,dev_util:934,devclonedit:904,devcloneditem:903,devclonednest:905,devdistit:907,devdistitem:906,devdistnest:908,devic:[20,120,283,429,550,677,901],devmapp:910,devmappermultiproc:911,diagon:[98,222,407,527,654,847],distribute_nest:1147,divid:1115,document:1239,dropout:[1216,1264],dtype:[135,303,440,566,705,951,961],dtype_bit:[136,304,441,567,706,962],dtype_from_str:[137,305,442,568,707,963],dtype_to_str:[138,306,443,569,708,964],ecosystem:52,einops_rearrang:1001,einops_reduc:1002,einops_repeat:1003,einsum:[181,364,484,617,797,1191],elementwis:[85,213,394,514,641,834],equal:[570,709,1004],erf:[480,782,1116],execute_with_gradi:[161,340,466,596,754,1077],exist:1005,exp:[783,1117],expand_dim:[307,710,1006],finfo:[82,210,391,511,638,831],firstlayersiren:1249,flip:[101,225,410,530,657,850],float_img_to_uint8_img:1091,floor:[308,711,1007],floormod:[309,712,1008],fomaml_step:1124,fork:43,fourier_encod:1009,framework:59,full:[139,310,444,571,713,1010],func:72,gather:[140,311,445,572,714,1011],gather_nd:[141,312,446,573,715,1012],geglu:1243,gelu:[374,493,806,1201,1244],gener:[22,127,289,431,557,685,975],get_all_arrays_in_memori:1013,get_all_arrays_on_dev:935,get_framework:64,get_min_bas:1014,get_min_denomin:1015,get_num_dim:[716,1016],get_referrers_recurs:1017,global:1230,glorotuniform:1250,gpu_is_avail:[936,1148],gradient:[24,160,339,465,595,753,1073],gradient_descent_upd:1078,gradient_imag:[165,346,472,602,761,1092],graph:1233,gym:53,handler:59,has_nan:1018,helper:1235,ident:[142,313,447,574,717,1019],iinfo:[83,211,392,512,639,832],imag:[26,163,344,470,600,759,1089],index_nest:1174,indices_wher:[143,314,448,718,1020],initi:1247,inplac:[11,117,241,426,547,674],inplace_arrays_support:1021,inplace_decr:[144,315,449,575,719,1022],inplace_incr:[145,316,450,576,720,1023],inplace_upd:[146,317,451,577,721,1024],inplace_variables_support:1025,inv:[765,1098],invalid_dtyp:965,is_arrai:[147,318,452,578,722,1026],is_float_dtyp:966,is_int_dtyp:967,is_vari:[162,341,467,597,755,1079],isfinit:[90,215,399,519,646,839],isinf:[319,579,723,1027],isnan:[91,216,400,520,647,840],ivi:[43,50,51,52,53,54,55,56,57,58,824,1281,1282,1285],ivymodul:[192,814],jax:74,keep:43,lamb:1274,lamb_upd:1080,lar:1275,lars_upd:1081,layer:[194,375,495,626,816,1208,1256],layer_norm:1226,layernorm:1271,leaky_relu:[807,1202],less:[92,217,401,521,648,841],linalg:[28,1096],linear:[97,167,221,348,406,474,526,604,653,763,846,1217,1266],linear_resampl:[148,320,453,580,724,1028],linspac:[149,321,454,581,725,1029],log2:[93,402,522,649,842],log:[784,1118,1236],log_global_inference_abs_tim:1231,log_global_inference_rel_tim:1232,logic:[30,171,354,478,609,771,1104],logical_and:[355,772,1105],logical_not:[94,218,403,523,650,843],logical_or:[356,773,1106],logspac:[150,322,455,582,726,1030],loss:1221,lstm:1265,lstm_updat:1218,maml_step:1125,manipul:[100,224,409,529,656,849],map:1175,map_nest_at_index:1176,map_nest_at_indic:1177,match_kwarg:1031,math:[32,172,357,479,610,774,1107],matmul:[323,583,727,1032],matrix_norm:[168,349,475,605,766,1099],maximum:[728,1033],mech:54,memori:55,meshgrid:[324,729,1034],meta:[34,1123],method:[96,220,405,525,652,845],minimum:[730,1035],model:56,modul:[1268,1269,1281],multi:1127,multi_head_attent:1219,multi_index_nest:1178,multidevcontain:42,multidevit:914,multidevitem:913,multidevnest:915,multiheadattent:1267,multinodeit:1133,multinodeitem:1132,multinodenest:1134,multinomi:[174,359,482,612,790,1184],multiprocess:[731,1036],mxnet:202,nativ:1281,nest:1171,nested_indices_wher:1179,nested_map:1180,network:1281,next:1239,node:[1127,1149],node_dist:1150,node_dist_arrai:1151,node_dist_it:1152,node_str:1153,node_to_str:1154,node_util:1155,nodedistit:1136,nodedistitem:1135,nodedistnest:1137,nodemapp:1139,nodemappermultiproc:1140,norm:[1225,1270],num_arrays_in_memori:1037,num_arrays_on_dev:937,num_cpu_cor:938,num_gpu:[125,939,1156],numpi:383,nutshel:1239,one_hot:[151,456,584,732,1038],ones:[78,206,387,507,634,828,1039],ones_lik:[152,325,457,585,733,1040],oper:[1,3,7,9,11,13,43,112,113,115,116,117,118,236,237,239,240,241,242,421,422,424,425,426,427,541,542,544,545,547,548,668,669,671,672,674,675],optim:[1272,1276],optimizer_upd:1082,overview:1239,param:1237,percent_used_mem_on_dev:940,percent_used_mem_on_nod:1157,pinv:[350,767,1100],portabl:1285,print_all_arrays_in_memori:1041,print_all_arrays_on_dev:941,profil:[121,284,430,551,678,916,1141],pull:43,queue_timeout:1042,randint:[175,360,613,791,1185],random:[36,173,358,481,611,789,1183],random_crop:1093,random_norm:[176,361,614,792,1186],random_uniform:[177,362,615,793,1187],reduce_max:[182,365,485,618,798,1192],reduce_mean:[183,366,486,619,799,1193],reduce_min:[184,367,487,620,800,1194],reduce_prod:[185,368,488,621,801,1195],reduce_std:[369,1196],reduce_sum:[186,370,489,622,802,1197],reduce_var:[187,371,490,623,803,1198],reduct:[38,180,363,483,616,796,1190],reflect:[13,118,242,427,548,675],relu:[808,1203],repeat:[326,734,1043],reptile_step:1126,request:43,reshap:[735,1044],robot:57,round:[327,736,1045],run:1282,scaled_dot_product_attent:1220,scatter_flat:[153,328,458,586,737,1046],scatter_nd:[154,329,459,587,738,1047],search:[102,226,411,531,658,851],seed:[178,794,1188],sequenti:[1278,1279],set:[103,227,412,532,659,852],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:942,set_default_dtyp:968,set_default_float_dtyp:969,set_default_int_dtyp:970,set_default_nod:1158,set_exception_debug_mod:48,set_framework:65,set_min_bas:1048,set_min_denomin:1049,set_nest_at_index:1181,set_nest_at_indic:1182,set_queue_timeout:1050,set_split_factor:[943,1159],set_tmp_dir:1051,set_with_grad:1083,sgd:1277,shape:[739,1052],shape_to_tupl:1053,show_graph:1229,shuffl:[179,795,1189],sigmoid:[809,1204],signatur:[96,220,405,525,652,845],sin:[785,1119],sinh:[786,1120],siren:1253,softmax:[190,494,810,1205],softplu:[811,1206],sort:[104,228,413,533,660,853],sparse_cross_entropi:1224,split:[155,330,460,588,740,1054],split_factor:[944,1160],split_func_cal:[945,1161],sqrt:[95,219,404,524,651,844],squeez:[156,331,461,589,741,1055],stable_divid:1056,stable_pow:1057,stack:[332,742,1058],stack_imag:[166,347,473,603,762,1094],standard:43,statist:[106,230,415,535,662,855],stop_gradi:[342,468,598,756,1084],str_to_nod:1162,submodul:43,supports_inplac:1059,svd:[352,607,769,1102],swapax:[590,743,1060],tan:[787,1121],tanh:[788,812,1122,1207],tensorflow:503,tile:[333,591,744,1061],tmp_dir:1062,to_dev:[126,288,555,683,946],to_ivi:18,to_ivy_modul:[193,815,1246],to_list:[745,1063],to_n:19,to_nod:1163,to_numpi:[746,1064],to_scalar:[747,1065],torch:630,total_mem_on_dev:947,total_mem_on_nod:1164,tpu_is_avail:[556,684,948,1165],train:1281,trainabl:1281,transpos:[157,334,462,748,1066],tree:1239,try_else_non:1067,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[80,84,208,212,389,393,509,513,636,640,830,833],uint8_img_to_float_img:1095,unifi:1166,unify_arrai:1167,unify_it:1168,unify_nest:1169,unset_debug_mod:49,unset_default_devic:949,unset_default_dtyp:971,unset_default_float_dtyp:972,unset_default_int_dtyp:973,unset_framework:71,unset_with_grad:1085,unstack:[158,335,463,592,749,1068],updat:43,used_mem_on_dev:950,used_mem_on_nod:1170,util:[107,231,416,536,663,856],valid_dtyp:974,value_is_nan:1069,variabl:[343,469,599,757,1086],variable_data:[758,1087],vector_norm:[99,223,408,528,655,848],vector_to_skew_symmetric_matrix:[170,353,477,608,770,1103],verbos:1283,vision:58,where:[336,750,1070,1239],why:1285,with_grad:1088,wrapper:72,write:1282,your:43,zero:[79,207,388,508,635,829,1255],zero_pad:[337,593,751,1071],zeros_lik:[159,338,464,594,752,1072]}})