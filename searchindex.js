Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/building_the_docs", "debugger", "debugger/debug_mode", "debugger/set_breakpoint_debug_mode", "debugger/set_debug_mode", "debugger/set_exception_debug_mode", "debugger/unset_debug_mode", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/native_array", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/tril", "functional/ivy/creation/triu", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/convert_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_arrays_on_dev", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_dev", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/add", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/round", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/square", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/image", "functional/ivy/image/bilinear_resample", "functional/ivy/image/float_img_to_uint8_img", "functional/ivy/image/gradient_image", "functional/ivy/image/linear_resample", "functional/ivy/image/random_crop", "functional/ivy/image/stack_images", "functional/ivy/image/uint8_img_to_float_img", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/slodget", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/zero_pad", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/sort", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/max", "functional/ivy/statistical/mean", "functional/ivy/statistical/min", "functional/ivy/statistical/prod", "functional/ivy/statistical/std", "functional/ivy/statistical/sum", "functional/ivy/statistical/var", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/any", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/building_the_docs.rst", "debugger.rst", "debugger/debug_mode.rst", "debugger/set_breakpoint_debug_mode.rst", "debugger/set_debug_mode.rst", "debugger/set_exception_debug_mode.rst", "debugger/unset_debug_mode.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/convert_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_arrays_on_dev.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_dev.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/image.rst", "functional/ivy/image/bilinear_resample.rst", "functional/ivy/image/float_img_to_uint8_img.rst", "functional/ivy/image/gradient_image.rst", "functional/ivy/image/linear_resample.rst", "functional/ivy/image/random_crop.rst", "functional/ivy/image/stack_images.rst", "functional/ivy/image/uint8_img_to_float_img.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/slodget.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/var.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/any.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Building the Docs", "Debugger", "debug_mode", "set_breakpoint_debug_mode", "set_debug_mode", "set_exception_debug_mode", "unset_debug_mode", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "empty", "empty_like", "eye", "from_dlpack", "full", "full_like", "linspace", "logspace", "meshgrid", "native_array", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "closest_valid_dtype", "convert_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_arrays_on_dev", "gpu_is_available", "num_arrays_on_dev", "num_cpu_cores", "num_gpus", "percent_used_mem_on_dev", "print_all_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_dev", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "ceil", "cos", "cosh", "divide", "equal", "erf", "exp", "expm1", "floor", "floor_divide", "greater", "greater_equal", "isfinite", "isinf", "isnan", "less", "less_equal", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "maximum", "minimum", "multiply", "negative", "not_equal", "positive", "pow", "remainder", "round", "sign", "sin", "sinh", "sqrt", "square", "subtract", "tan", "tanh", "trunc", "General", "all_equal", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "adam_update", "execute_with_gradients", "gradient_descent_update", "is_variable", "lamb_update", "lars_update", "optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Image", "bilinear_resample", "float_img_to_uint8_img", "gradient_image", "linear_resample", "random_crop", "stack_images", "uint8_img_to_float_img", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slodget", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "cross_entropy", "sparse_cross_entropy", "Manipulation", "clip", "concat", "constant_pad", "expand_dims", "flip", "permute_dims", "repeat", "reshape", "roll", "split", "squeeze", "stack", "swapaxes", "tile", "zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "Random", "multinomial", "randint", "random_normal", "random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "sort", "Statistical", "einsum", "max", "mean", "min", "prod", "std", "sum", "var", "Utility", "all", "any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 30, 32, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 58, 59, 60, 93, 111, 123, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 233, 235, 266, 272, 291, 296, 310, 382, 384, 394, 434, 441, 442, 443, 444, 445, 446, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 58, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 434], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 20, 32, 33, 34, 35, 40, 43, 44, 46, 48, 59, 60, 233, 273, 402, 403, 404, 405, 406, 434, 441, 442, 443, 444, 445, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 477, 478], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 36, 37, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481], "base": [0, 19, 32, 37, 43, 59, 74, 84, 93, 123, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 173, 195, 206, 207, 208, 209, 221, 233, 257, 280, 287, 296, 414, 415, 418, 422, 423, 441, 442, 443, 446, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "object": [0, 45, 48, 74, 80, 93, 110, 123, 296, 382, 385, 387, 389, 390, 391, 396, 397, 398, 399, 402, 408, 446, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 467, 468], "__init__": [0, 1, 4, 5, 28, 38, 43, 45, 46, 47, 48, 93, 94, 95, 96, 123, 124, 131, 132, 133, 134, 135, 136, 137, 138, 296, 297, 402, 403, 404, 405, 406, 434, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "choose_random_backend": 0, "exclud": [0, 2, 30, 43, 74, 75, 402, 406], "none": [0, 2, 5, 12, 28, 30, 33, 38, 39, 40, 41, 43, 45, 47, 48, 63, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 91, 92, 93, 105, 106, 107, 110, 111, 123, 132, 133, 141, 142, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 241, 244, 245, 247, 251, 252, 254, 255, 260, 263, 267, 273, 275, 278, 279, 280, 281, 286, 287, 293, 296, 299, 301, 303, 304, 305, 311, 312, 317, 320, 322, 324, 326, 329, 330, 331, 332, 333, 342, 344, 347, 356, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 388, 393, 394, 395, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 414, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 444, 445, 446, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "clear_backend_stack": 0, "current_backend": [0, 28, 33], "arg": [0, 4, 43, 45, 47, 123, 132, 147, 151, 155, 167, 233, 279, 444, 445, 467, 468], "kwarg": [0, 4, 43, 45, 47, 123, 132, 147, 151, 155, 233, 272, 444, 445, 467, 468], "return": [0, 4, 5, 12, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 122, 123, 132, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 388, 392, 393, 394, 395, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 444, 445, 455, 464, 465, 471, 475], "current": [0, 4, 5, 12, 16, 18, 20, 33, 39, 43, 48, 59, 60, 93, 104, 112, 122, 123, 132, 156, 157, 159, 163, 233, 256, 263, 267, 274, 276, 382, 383, 392, 393, 434], "prioriti": [0, 4, 19, 40], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 27, 28, 29, 30, 32, 33, 35, 36, 37, 43, 45, 46, 71, 72, 74, 75, 93, 115, 123, 132, 133, 147, 151, 155, 233, 235, 239, 247, 272, 279, 382, 388, 422, 429, 437, 439, 444, 445, 467, 468], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 20, 27, 30, 32, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 73, 74, 85, 89, 90, 173, 222, 296, 299, 301, 303, 305, 333, 351, 352, 382, 388, 394, 422, 423, 428, 430, 434, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 477, 478], "paramet": [0, 4, 5, 28, 29, 32, 45, 46, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 122, 123, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 439, 444, 445, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 32, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 74, 75, 76, 78, 80, 81, 82, 85, 86, 88, 92, 93, 102, 104, 115, 123, 132, 133, 159, 167, 173, 199, 227, 233, 247, 254, 255, 290, 296, 299, 303, 312, 317, 320, 328, 331, 333, 337, 351, 355, 362, 367, 370, 373, 378, 379, 380, 381, 382, 384, 394, 395, 402, 403, 404, 405, 406, 409, 413, 414, 415, 417, 422, 427, 428, 429, 430, 431, 432, 433, 434, 440, 444, 445, 455, 463, 466, 471, 475], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 63, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 102, 103, 108, 110, 111, 112, 122, 123, 132, 133, 143, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 163, 165, 166, 167, 173, 222, 233, 244, 245, 247, 254, 255, 256, 262, 274, 275, 276, 278, 279, 294, 296, 299, 300, 301, 303, 304, 305, 307, 309, 310, 312, 314, 316, 320, 331, 332, 333, 335, 337, 342, 350, 351, 355, 356, 358, 360, 361, 362, 364, 367, 369, 371, 372, 374, 382, 387, 388, 389, 390, 395, 396, 397, 398, 399, 402, 403, 404, 406, 409, 410, 411, 412, 413, 414, 415, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 444, 445, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 477, 478], "try": [0, 4, 13, 15, 16, 18, 19, 36, 45, 60, 233, 293, 434], "infer": [0, 4, 27, 38, 39, 43, 48, 71, 72, 74, 75, 76, 78, 81, 82, 86, 88, 92, 173, 199, 233, 259, 284, 312, 317, 362, 370], "when": [0, 4, 14, 15, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 48, 60, 93, 99, 123, 173, 177, 196, 221, 233, 239, 266, 287, 358, 360, 361, 382, 393, 409, 410, 411, 413, 422, 424, 426, 428, 430, 467, 468], "global": [0, 4, 5, 6, 12, 33, 34, 38, 39, 43, 93, 105, 106, 107, 123, 132, 133, 165, 166, 167, 233, 257, 258, 277, 280, 281, 282, 286, 287, 400, 401, 469, 470], "set": [0, 4, 5, 6, 12, 14, 17, 27, 28, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 123, 152, 153, 164, 165, 166, 167, 173, 181, 233, 234, 280, 281, 282, 283, 296, 299, 301, 302, 303, 304, 305, 333, 335, 342, 344, 347, 350, 382, 383, 392, 393, 394, 398, 399, 402, 407, 409, 410, 415, 416, 417, 418, 419, 420, 421, 422, 428, 430, 455, 464, 471, 472, 473, 474, 475, 476], "ret": [0, 4, 5, 12, 28, 29, 43, 48, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 122, 123, 132, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 278, 279, 284, 286, 287, 288, 290, 291, 292, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 388, 392, 393, 394, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 439, 444, 445, 471, 475], "exampl": [0, 4, 5, 6, 12, 16, 18, 27, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 81, 82, 85, 87, 88, 91, 92, 93, 99, 123, 143, 158, 159, 160, 161, 168, 170, 173, 177, 182, 184, 187, 189, 190, 195, 199, 204, 230, 233, 236, 243, 258, 284, 290, 291, 292, 312, 315, 318, 319, 320, 321, 325, 327, 333, 334, 335, 336, 337, 340, 344, 351, 353, 354, 358, 360, 361, 362, 363, 364, 366, 367, 369, 370, 371, 372, 373, 374, 402, 403, 404, 405, 406, 407, 408, 409, 411, 419, 420, 422, 423, 428, 429, 431, 432, 434], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 28, 29, 30, 32, 33, 36, 40, 42, 45, 46, 48, 60, 74, 75, 77, 78, 79, 81, 82, 85, 87, 88, 89, 90, 91, 92, 93, 99, 101, 115, 173, 174, 175, 176, 177, 178, 179, 180, 181, 189, 190, 191, 195, 196, 197, 206, 207, 209, 210, 212, 213, 217, 221, 222, 224, 225, 226, 227, 230, 232, 296, 299, 301, 303, 304, 305, 333, 334, 335, 342, 344, 347, 348, 350, 351, 355, 356, 358, 360, 361, 362, 366, 367, 371, 372, 373, 374, 378, 379, 380, 382, 394, 395, 402, 405, 406, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "import": [0, 4, 15, 28, 30, 34, 36, 37, 38, 39, 40, 43, 45, 46, 48, 60, 312, 318, 434, 440], "numpi": [0, 4, 5, 6, 14, 15, 32, 38, 39, 40, 41, 43, 45, 48, 233, 291, 422, 423, 434], "np": [0, 4, 36, 38, 39, 40, 41, 45, 46, 48, 434], "x": [0, 4, 12, 20, 28, 29, 30, 33, 38, 40, 41, 43, 45, 46, 47, 48, 63, 64, 65, 66, 67, 68, 69, 70, 74, 76, 78, 80, 82, 85, 86, 88, 89, 90, 91, 92, 93, 99, 101, 108, 123, 143, 144, 145, 148, 149, 159, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 189, 190, 191, 194, 195, 196, 197, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 215, 216, 218, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 238, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 261, 262, 264, 265, 266, 268, 269, 270, 271, 275, 284, 288, 290, 291, 292, 294, 295, 296, 300, 302, 307, 309, 310, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 383, 388, 392, 393, 394, 400, 401, 402, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 455, 466], "arrai": [0, 4, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 60, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 99, 100, 101, 102, 108, 110, 111, 113, 114, 115, 123, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 163, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 243, 244, 245, 248, 249, 250, 252, 253, 254, 255, 256, 259, 261, 262, 263, 264, 265, 266, 268, 269, 271, 274, 275, 276, 278, 279, 284, 288, 290, 291, 292, 294, 295, 296, 302, 307, 309, 310, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 384, 394, 395, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 455, 463, 466], "2": [0, 4, 18, 20, 30, 42, 43, 45, 46, 47, 48, 63, 65, 67, 73, 74, 81, 82, 85, 87, 88, 92, 93, 99, 123, 143, 159, 160, 168, 173, 177, 178, 180, 181, 184, 187, 190, 195, 199, 204, 209, 230, 233, 236, 240, 241, 284, 312, 313, 315, 318, 319, 320, 323, 324, 325, 327, 333, 334, 335, 336, 337, 340, 341, 342, 344, 347, 348, 351, 353, 354, 356, 358, 361, 362, 363, 364, 366, 367, 369, 370, 371, 372, 373, 402, 403, 404, 405, 406, 408, 409, 411, 419, 420, 422, 423, 431, 432, 434], "0": [0, 4, 28, 29, 30, 43, 45, 46, 47, 48, 63, 65, 66, 67, 68, 69, 70, 74, 75, 79, 83, 84, 88, 89, 90, 91, 92, 93, 99, 110, 123, 125, 128, 132, 135, 139, 143, 148, 149, 150, 151, 152, 153, 154, 155, 159, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 187, 189, 190, 191, 195, 196, 197, 206, 207, 209, 217, 221, 222, 224, 225, 226, 227, 230, 232, 233, 236, 240, 241, 243, 244, 245, 254, 255, 260, 275, 278, 279, 284, 290, 291, 296, 298, 299, 303, 304, 312, 315, 318, 320, 321, 325, 327, 333, 334, 335, 336, 337, 340, 351, 353, 354, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 382, 394, 402, 403, 404, 405, 406, 407, 408, 409, 411, 414, 415, 418, 419, 420, 422, 423, 425, 428, 429, 430, 431, 432, 434, 446, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478], "print": [0, 4, 5, 6, 12, 18, 30, 37, 43, 45, 46, 47, 63, 65, 66, 67, 68, 69, 70, 74, 81, 82, 85, 87, 88, 91, 92, 93, 99, 123, 143, 158, 159, 160, 161, 163, 170, 173, 177, 182, 184, 187, 189, 190, 195, 199, 204, 230, 233, 236, 243, 258, 276, 284, 290, 291, 292, 312, 315, 318, 319, 320, 321, 325, 327, 333, 334, 335, 336, 337, 340, 351, 353, 354, 358, 360, 361, 362, 363, 366, 367, 369, 370, 371, 372, 373, 402, 403, 404, 405, 406, 408, 409, 411, 419, 420, 422, 423, 428, 429, 431, 432, 434], "function": [0, 4, 5, 6, 14, 20, 27, 28, 29, 30, 31, 32, 34, 36, 37, 40, 42, 44, 45, 46, 47, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 441, 442, 443, 471, 474, 476], "py": [0, 4, 5, 28, 29, 33, 38, 39, 41, 43, 45, 47, 48, 402, 403, 404, 405, 406], "noqa": [0, 4, 5, 74, 85, 173, 177, 230, 333, 336, 362, 367, 371], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 59, 63, 64, 65, 68, 70, 71, 72, 74, 75, 80, 84, 85, 89, 90, 93, 97, 98, 99, 103, 104, 109, 112, 122, 123, 132, 133, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 162, 164, 165, 166, 167, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 217, 219, 221, 222, 224, 225, 226, 227, 230, 232, 233, 236, 239, 240, 246, 247, 253, 255, 264, 265, 266, 268, 269, 270, 271, 273, 278, 279, 280, 281, 282, 285, 286, 287, 295, 296, 298, 299, 301, 303, 304, 305, 307, 310, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365, 367, 368, 369, 370, 371, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 444, 445, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475], "set_backend": [0, 4, 5, 12, 34, 35, 38], "ha": [0, 4, 5, 14, 15, 16, 19, 29, 30, 33, 34, 38, 39, 43, 45, 47, 48, 59, 60, 74, 85, 173, 174, 217, 221, 333, 341, 349, 350, 351, 354, 362, 366, 373, 414, 415, 416, 418, 422, 425, 427, 428, 429, 430], "over": [0, 4, 14, 16, 30, 40, 45, 60, 333, 342, 353, 355, 356, 400, 401, 402, 406, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 469, 470], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 71, 72, 74, 76, 86, 173, 193, 200, 205, 233, 234, 247, 248, 249, 250, 251, 261, 268, 269, 270, 271, 286, 287, 296, 300, 382, 388, 392, 402, 406, 431, 434], "pass": [0, 4, 30, 31, 32, 33, 34, 36, 37, 40, 41, 45, 60, 93, 103, 123, 132, 167, 173, 181, 233, 239, 266, 296, 310, 378, 379, 380, 444, 445, 467, 468, 471, 475, 477, 478], "jax": [0, 4, 5, 6, 15, 16, 38, 39, 40, 41, 43, 45, 48, 60, 296, 302, 414, 415, 418, 434], "get_backend": [0, 33], "specifi": [0, 5, 27, 32, 33, 38, 39, 40, 41, 43, 46, 47, 48, 74, 75, 77, 81, 83, 84, 87, 89, 90, 91, 93, 99, 101, 104, 123, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 159, 163, 166, 167, 168, 173, 222, 233, 254, 255, 261, 294, 312, 318, 333, 337, 342, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 367, 371, 373, 374, 377, 382, 387, 389, 390, 396, 397, 398, 399, 409, 410, 411, 414, 415, 418, 419, 420, 422, 423, 427, 429, 431, 432, 433], "isn": [0, 5, 46], "t": [0, 5, 15, 16, 18, 19, 30, 43, 45, 46, 47, 48, 60, 320, 329, 330], "associ": [0, 5, 19, 33, 35, 60, 173, 177, 217, 333, 344, 347, 357], "option": [0, 5, 18, 28, 29, 30, 33, 38, 39, 40, 41, 43, 48, 63, 65, 66, 68, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 103, 105, 106, 107, 112, 122, 123, 142, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 195, 196, 197, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 221, 222, 224, 225, 226, 227, 229, 230, 233, 241, 244, 245, 246, 252, 254, 255, 273, 275, 278, 279, 286, 287, 296, 307, 320, 327, 332, 333, 342, 344, 347, 356, 358, 360, 361, 362, 363, 364, 366, 367, 368, 369, 371, 372, 373, 374, 382, 383, 388, 393, 394, 402, 403, 404, 405, 406, 409, 410, 411, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "str": [0, 5, 38, 39, 74, 85, 93, 97, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 116, 117, 118, 122, 123, 139, 143, 148, 149, 150, 151, 167, 233, 246, 248, 249, 250, 273, 278, 279, 320, 321, 325, 327, 333, 348, 382, 388, 422, 423], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 40, 41, 43, 44, 45, 46, 47, 48, 59, 60, 296, 300, 422, 423, 434, 440], "want": [0, 5, 15, 17, 19, 32, 46, 47, 48, 60, 422, 423], "retriev": [0, 5], "i": [0, 5, 19, 27, 43, 46, 48, 74, 75, 85, 173, 174, 181, 185, 187, 189, 197, 198, 201, 215, 216, 221, 222, 233, 236, 296, 299, 301, 303, 304, 305, 333, 335, 341, 344, 347, 350, 351, 354, 356, 362, 374, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430], "e": [0, 5, 15, 16, 19, 27, 46, 60, 73, 74, 85, 93, 98, 115, 123, 139, 173, 174, 181, 185, 187, 189, 195, 197, 198, 201, 206, 208, 215, 216, 221, 222, 296, 299, 301, 303, 304, 305, 333, 335, 341, 344, 347, 350, 351, 356, 362, 374, 402, 405, 406, 414, 415, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430], "one": [0, 5, 15, 16, 18, 19, 30, 33, 36, 38, 40, 42, 45, 46, 48, 60, 74, 75, 85, 93, 100, 102, 104, 123, 152, 153, 154, 155, 167, 233, 272, 275, 278, 279, 333, 341, 342, 346, 348, 355, 356, 362, 366, 367, 373, 409, 410, 412, 414, 415, 416, 417, 418, 422, 423, 434], "default": [0, 5, 29, 30, 33, 38, 39, 41, 47, 63, 64, 65, 66, 68, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 99, 105, 106, 107, 108, 123, 132, 133, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 162, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 195, 196, 197, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 221, 222, 224, 225, 226, 227, 229, 230, 233, 234, 240, 241, 244, 245, 252, 253, 254, 255, 259, 260, 261, 263, 267, 268, 269, 271, 272, 273, 275, 277, 278, 279, 282, 284, 286, 287, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 307, 311, 312, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 342, 344, 347, 348, 351, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 378, 379, 380, 381, 382, 383, 384, 388, 392, 393, 394, 395, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 444, 445, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "torch": [0, 5, 12, 28, 33, 34, 36, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 71, 72, 434], "tensorflow": [0, 5, 12, 15, 16, 38, 39, 40, 41, 43, 48, 60, 434], "mxnet": [0, 5, 15, 38, 39, 40, 43, 48, 434], "either": [0, 5, 12, 19, 29, 30, 33, 34, 38, 39, 43, 45, 46, 60, 74, 80, 173, 177, 181, 202, 206, 207, 209, 210, 217, 222, 224, 225, 230, 233, 247, 268, 272, 273, 333, 341, 378, 379, 380, 381, 422, 427, 429, 455, 466, 467, 468], "doesn": [0, 5, 18, 30, 43, 60], "matter": [0, 5, 14, 30], "been": [0, 5, 29, 33, 34, 38, 39, 41, 43, 59, 233, 248, 249, 250, 402, 403], "ivy_np": [0, 5], "us": [0, 5, 12, 15, 16, 18, 19, 20, 27, 28, 29, 30, 32, 33, 36, 37, 38, 39, 41, 42, 43, 45, 47, 48, 59, 60, 73, 93, 109, 123, 132, 133, 158, 162, 165, 166, 167, 170, 172, 173, 177, 230, 233, 257, 258, 272, 278, 279, 280, 281, 286, 287, 296, 298, 299, 303, 304, 320, 328, 329, 331, 332, 333, 336, 337, 342, 353, 362, 363, 367, 369, 371, 378, 379, 380, 381, 382, 383, 385, 391, 392, 393, 395, 400, 401, 414, 415, 422, 423, 431, 432, 434, 455, 463, 466, 467, 468, 469, 470, 471, 473, 474], "ivy_jax": [0, 5], "subsequ": [0, 6, 30, 32, 33, 36, 41, 47], "call": [0, 6, 12, 15, 20, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 123, 167, 233, 277, 282, 293, 296, 300, 382, 383, 388, 392, 393, 455, 466, 467, 468, 471, 475], "nativ": [0, 6, 38, 40, 45, 46, 74, 86, 93, 97, 98, 103, 123, 139, 140, 141, 143, 162, 169, 172, 233, 266, 268, 271, 444, 445], "native_arrai": [0, 6, 12, 30, 74, 85, 173, 177, 230, 320, 327, 333, 335, 336, 353, 358, 361, 362, 363, 367, 371, 372, 402, 403, 431, 432], "1": [0, 6, 12, 15, 16, 20, 30, 33, 42, 43, 45, 46, 47, 48, 60, 63, 66, 67, 68, 74, 75, 82, 83, 84, 85, 87, 88, 92, 93, 99, 110, 123, 127, 130, 132, 137, 143, 147, 151, 155, 159, 161, 166, 168, 173, 175, 176, 177, 178, 181, 184, 187, 189, 190, 191, 195, 196, 199, 204, 206, 207, 208, 209, 221, 224, 225, 230, 233, 236, 243, 254, 255, 275, 278, 279, 284, 287, 290, 291, 292, 294, 312, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 340, 344, 346, 350, 351, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 382, 394, 400, 401, 402, 403, 404, 405, 406, 408, 409, 411, 419, 420, 421, 422, 423, 428, 429, 430, 431, 432, 433, 434, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 477, 478], "type": [0, 6, 12, 18, 27, 28, 29, 30, 35, 36, 37, 39, 40, 41, 43, 45, 46, 48, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 122, 123, 139, 140, 141, 143, 155, 156, 158, 159, 160, 161, 162, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 261, 262, 266, 268, 269, 270, 271, 275, 278, 279, 280, 281, 284, 286, 287, 288, 290, 291, 292, 294, 295, 296, 302, 307, 309, 312, 316, 318, 319, 320, 321, 325, 327, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 383, 384, 388, 392, 393, 394, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "ndarrai": [0, 6, 36, 38, 39, 40, 41, 45, 74, 76, 86, 233, 291], "Or": [0, 6, 46, 422, 423], "jaxlib": [0, 6, 18, 39, 41, 45], "xla_extens": [0, 6, 39, 41, 45], "devicearrai": [0, 6, 45], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 30, 38, 40, 46, 47, 48, 93, 99, 102, 108, 123, 143, 154, 158, 162, 167, 170, 172, 173, 199, 201, 202, 203, 204, 212, 213, 233, 234, 236, 244, 247, 251, 253, 259, 268, 269, 271, 272, 284, 294, 296, 299, 300, 301, 302, 303, 304, 305, 333, 334, 342, 351, 356, 362, 372, 378, 379, 380, 381, 382, 383, 384, 388, 392, 393, 394, 395, 402, 403, 409, 410, 411, 413, 414, 415, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 444, 445, 467, 468, 471, 472, 473, 474, 475, 476], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": 0, "unset": [0, 12, 43, 45], "adjust": [0, 12, 422, 428, 430], "dict": [0, 12, 37, 46, 47, 123, 132, 133, 148, 149, 150, 151, 233, 248, 249, 250, 382, 384, 385, 388, 391, 394, 395], "previous": [0, 12, 20, 32, 33, 43, 233, 239], "otherwis": [0, 12, 36, 38, 39, 41, 43, 45, 74, 75, 93, 99, 102, 105, 106, 107, 173, 201, 202, 203, 233, 238, 293, 296, 302, 307, 333, 334, 336, 355, 356, 378, 379, 380, 382, 395, 409, 410, 411, 413, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "implement": [0, 12, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 93, 99, 115, 173, 174, 175, 176, 178, 179, 180, 181, 190, 191, 195, 196, 206, 207, 208, 209, 217, 221, 222, 225, 226, 230, 333, 338, 414, 415, 418, 419, 420, 421, 422, 424, 425, 426, 434], "wa": [0, 12, 15, 30, 43, 45, 233, 293, 382, 395, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "last": [0, 12, 16, 63, 68, 312, 316, 320, 330, 333, 335, 337, 342, 354, 355, 358, 360, 361, 362, 367, 371, 372, 374, 419, 420, 421, 431, 432, 433, 455, 465], "henc": [0, 12, 414, 415, 418], "here": [0, 12, 18, 28, 30, 41, 43, 44, 45, 46, 47, 48, 59, 60], "tensor": [0, 12, 14, 28, 33, 36, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 74, 83, 84, 93, 108, 173, 215, 216, 233, 275, 278, 279, 320, 328, 330, 333, 353, 362, 370, 372, 402, 403, 409, 411, 434, 455, 463, 465], "howev": [0, 12, 15, 18, 30, 32, 33, 36, 38, 39, 40, 41, 45, 46, 47, 48, 60], "befor": [0, 12, 18, 19, 32, 36, 38, 39, 40, 43, 46, 60, 123, 167, 173, 232, 320, 331, 332, 378, 379, 380, 382, 394, 414, 415, 418, 422, 427, 429], "becom": [0, 12, 14, 16, 19, 30, 43, 48, 60, 362, 363], "swap": [0, 12, 362, 375], "python": [0, 12, 13, 14, 15, 18, 20, 43, 45, 46, 60, 74, 75, 123, 162, 172, 173, 222, 434, 440], "op": [0, 12, 28, 43, 60], "eagertensor": [0, 12], "def": [1, 28, 30, 33, 38, 39, 40, 41, 43, 45, 46, 47, 48, 94, 95, 96, 124, 131, 134, 297, 434, 447, 450, 453], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 23, 24, 25, 26, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 64, 65, 66, 67, 68, 69, 70, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 438, 439, 440, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 481], "framework": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 23, 24, 25, 26, 27, 31, 33, 34, 35, 36, 39, 41, 42, 45, 48, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 481], "backend": [4, 5, 6, 12, 14, 27, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 44, 45, 48, 60, 93, 104, 112, 122, 123, 158, 161, 170, 233, 263, 266, 267, 273, 296, 299, 301, 303, 304, 305, 310, 434, 440, 444, 445, 471, 472, 473, 474, 475, 476], "ml": [13, 15, 16, 17, 42, 43, 44, 46, 47, 48, 59, 434, 440], "explos": [13, 15, 434], "A": [13, 14, 15, 16, 20, 27, 32, 33, 37, 38, 39, 43, 46, 60, 74, 79, 86, 123, 132, 133, 167, 173, 220, 231, 233, 258, 290, 333, 337, 349, 350, 351, 362, 372, 374, 382, 383, 385, 387, 389, 390, 391, 392, 393, 396, 397, 398, 399, 422, 423, 431, 432, 433, 434, 477, 478], "huge": [13, 15, 46, 434], "number": [13, 14, 18, 30, 39, 43, 46, 48, 71, 72, 73, 74, 75, 76, 79, 83, 84, 85, 86, 93, 100, 109, 110, 111, 113, 114, 115, 123, 159, 160, 161, 173, 177, 181, 189, 197, 198, 217, 221, 222, 224, 232, 233, 253, 258, 259, 274, 292, 295, 312, 316, 320, 331, 333, 338, 344, 349, 351, 355, 362, 363, 365, 368, 369, 371, 372, 374, 376, 377, 378, 379, 380, 381, 402, 403, 407, 409, 412, 414, 415, 416, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466], "tool": [13, 16, 44, 48, 59, 60, 434], "have": [13, 14, 15, 16, 19, 28, 29, 30, 31, 32, 33, 36, 38, 39, 41, 43, 44, 45, 46, 47, 48, 59, 60, 63, 66, 74, 75, 77, 78, 81, 82, 85, 87, 88, 89, 90, 91, 92, 93, 99, 100, 101, 110, 123, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 221, 222, 224, 225, 226, 227, 229, 230, 232, 233, 241, 248, 249, 250, 252, 296, 302, 310, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 358, 360, 362, 363, 364, 366, 367, 368, 369, 371, 373, 374, 402, 408, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "explod": [13, 14, 434], "onto": [13, 14, 123, 152, 153, 382, 388, 394, 434], "scene": [13, 14, 27, 42, 44, 296, 299, 301, 303, 304, 305, 434], "b": [13, 16, 17, 18, 27, 30, 33, 34, 42, 43, 44, 46, 47, 48, 58, 173, 177, 230, 233, 236, 320, 327, 333, 334, 335, 336, 346, 350, 353, 357, 362, 367, 369, 371, 374, 419, 420, 422, 423, 431, 432, 434, 440], "why": [13, 15, 19, 40, 41, 45, 434], "unifi": [13, 15, 36, 43, 60, 123, 152, 153, 154, 155, 167, 434], "should": [13, 15, 18, 19, 28, 29, 30, 32, 33, 36, 37, 38, 40, 41, 45, 46, 47, 71, 72, 74, 85, 89, 90, 93, 101, 123, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 217, 219, 221, 222, 224, 225, 226, 227, 229, 230, 232, 233, 239, 275, 296, 299, 301, 303, 304, 305, 333, 334, 335, 336, 337, 340, 341, 344, 346, 347, 348, 350, 351, 353, 354, 355, 356, 362, 370, 402, 408, 409, 410, 411, 414, 415, 418, 422, 423, 424, 425, 427, 428, 429, 430, 434], "them": [13, 14, 15, 16, 32, 34, 36, 37, 43, 45, 46, 47, 60, 434], "c": [13, 15, 16, 17, 27, 30, 33, 42, 43, 44, 46, 60, 233, 236, 296, 298, 299, 301, 303, 304, 305, 362, 374, 409, 412, 422, 428, 430, 434, 440], "standard": [13, 27, 28, 29, 31, 32, 36, 40, 41, 60, 74, 85, 93, 110, 173, 177, 230, 333, 336, 362, 367, 369, 371, 400, 401, 402, 405, 419, 420, 422, 428, 430, 434, 440, 469, 470], "re": [13, 14, 15, 17, 18, 19, 27, 28, 30, 39, 45, 48, 60, 123, 167, 233, 248, 312, 313, 316, 333, 353, 362, 371, 434], "collabor": [13, 14, 15, 434], "consortium": [13, 15, 434, 440], "data": [13, 15, 27, 28, 29, 33, 35, 37, 39, 40, 41, 45, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 122, 123, 125, 126, 127, 128, 129, 130, 135, 136, 137, 139, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 217, 219, 221, 222, 224, 225, 226, 227, 229, 230, 232, 233, 236, 268, 269, 271, 288, 296, 302, 310, 312, 318, 320, 329, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 350, 351, 353, 354, 355, 356, 362, 367, 368, 370, 371, 373, 374, 402, 408, 409, 410, 411, 412, 416, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 440], "api": [13, 14, 27, 29, 30, 32, 33, 35, 36, 38, 39, 40, 41, 42, 44, 46, 60, 74, 85, 173, 177, 230, 333, 336, 362, 367, 369, 371, 419, 420, 434, 440], "open": [14, 15, 16, 17, 18, 59, 74, 75, 402, 404, 406, 434], "project": [14, 15, 16, 18, 19, 20, 45, 47, 59, 60, 402, 403, 404, 405, 406], "grown": 14, "consider": [14, 30, 41], "recent": [14, 15], "year": [14, 16, 434], "especi": 14, "deep": [14, 17, 19, 42, 46, 434], "learn": [14, 15, 18, 27, 33, 42, 48, 59, 173, 199, 296, 299, 301, 303, 304, 305, 378, 379, 380, 381, 434, 471, 472, 473, 474, 475, 476], "can": [14, 15, 16, 17, 19, 27, 28, 29, 30, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 74, 76, 86, 93, 102, 123, 165, 166, 167, 312, 314, 333, 340, 362, 370, 422, 423, 434, 440], "seen": [14, 15, 30, 45, 46], "rapidli": 14, "increas": [14, 123, 147, 151, 155, 362, 365, 377, 382, 394], "github": [14, 18, 32], "repo": [14, 15, 16, 18, 19, 30, 31, 43, 45, 46, 47, 48, 59, 434, 440], "contain": [14, 18, 19, 20, 27, 29, 30, 32, 33, 38, 40, 41, 42, 43, 44, 47, 48, 60, 63, 66, 67, 69, 74, 75, 78, 80, 87, 89, 90, 91, 123, 144, 148, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 240, 241, 261, 270, 312, 318, 320, 327, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 382, 395, 402, 403, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 471, 475, 477, 478], "term": [14, 19, 320, 330, 455, 465], "time": [14, 15, 16, 19, 32, 33, 38, 41, 43, 46, 48, 60, 296, 299, 303, 320, 330, 362, 376, 378, 379, 380, 381, 409, 410, 411, 414, 415, 416, 455, 466, 467, 468], "These": [14, 15, 16, 29, 30, 32, 33, 37, 38, 40, 43, 44, 46, 47, 48, 60, 333, 338, 434, 440], "ar": [14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 74, 75, 123, 132, 133, 157, 159, 163, 167, 173, 190, 212, 213, 225, 230, 233, 234, 236, 237, 238, 256, 262, 263, 267, 274, 276, 288, 320, 329, 333, 335, 341, 342, 344, 347, 351, 352, 355, 362, 363, 367, 371, 382, 384, 388, 394, 402, 405, 406, 409, 410, 411, 412, 414, 415, 434, 477, 478], "written": [14, 28, 29, 36, 40, 41, 43, 45, 48, 60, 422, 423], "mani": [14, 15, 16, 18, 19, 29, 30, 33, 35, 36, 37, 38, 39, 41, 43, 45, 46, 60, 362, 372], "differ": [14, 15, 16, 27, 28, 29, 30, 32, 33, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 60, 93, 110, 123, 144, 145, 148, 149, 173, 177, 217, 229, 320, 329, 362, 374, 422, 427, 429, 434], "while": [14, 15, 19, 30, 40, 47, 48, 60, 173, 212, 213, 414, 415, 422, 425], "thi": [14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 74, 75, 76, 85, 86, 123, 147, 151, 155, 162, 167, 172, 173, 174, 177, 187, 196, 212, 213, 222, 230, 233, 253, 266, 277, 282, 296, 299, 301, 302, 303, 304, 305, 310, 320, 329, 333, 336, 342, 349, 362, 366, 367, 369, 370, 371, 374, 382, 388, 394, 395, 409, 410, 414, 415, 418, 419, 420, 422, 423, 425, 428, 430, 434, 440, 467, 468, 471, 472, 473, 474, 475, 476], "wonder": [14, 16, 45], "thing": [14, 15, 16, 19, 45, 46], "research": [14, 59], "develop": [14, 15, 16, 17, 18, 19, 59, 60, 434], "also": [14, 15, 17, 18, 19, 27, 28, 29, 30, 32, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 74, 85, 173, 177, 230, 233, 266, 296, 299, 320, 329, 333, 336, 362, 367, 369, 371, 378, 379, 380, 381, 382, 383, 384, 392, 393, 394, 419, 420, 455, 465], "consid": [14, 15, 28, 30, 33, 44, 45, 46, 173, 212, 213, 414, 415, 418], "speed": 14, "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 19, 20, 27, 29, 30, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 58, 60, 320, 327, 419, 420, 434, 440], "significantli": 14, "hinder": [14, 41], "librari": [14, 15, 16, 43, 48, 58, 60, 173, 196, 212, 213, 333, 338, 414, 415, 418, 422, 424, 425, 426, 434], "outdat": 14, "month": 14, "rigor": 14, "maintain": [14, 19, 419, 420, 421], "against": [14, 32, 93, 100, 333, 341, 342, 344, 347, 409, 410], "newest": 14, "version": [14, 15, 16, 18, 29, 43, 45, 333, 338, 434], "For": [14, 15, 16, 18, 19, 20, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 59, 60, 74, 75, 85, 173, 174, 175, 176, 177, 178, 179, 180, 181, 189, 190, 191, 195, 196, 197, 206, 207, 209, 210, 217, 221, 222, 225, 226, 227, 230, 232, 296, 302, 310, 333, 351, 354, 362, 363, 374, 414, 415, 418, 422, 423, 424, 426, 429, 444, 445], "softwar": [14, 15, 18, 19], "pipelin": [14, 20, 36, 48], "where": [14, 15, 16, 17, 18, 19, 33, 36, 37, 38, 39, 40, 43, 46, 47, 48, 60, 74, 81, 82, 85, 173, 181, 195, 208, 217, 221, 233, 262, 275, 333, 338, 344, 347, 348, 351, 352, 354, 355, 362, 363, 365, 366, 368, 374, 377, 382, 383, 393, 402, 403, 409, 412, 422, 428, 430, 431, 432, 433, 434], "rapid": [14, 15], "prototyp": 14, "vital": [14, 48], "signific": [14, 15, 60], "bottleneck": 14, "As": [14, 19, 32, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 60, 414, 415, 418], "new": [14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 32, 35, 38, 40, 42, 45, 48, 59, 74, 77, 80, 81, 82, 87, 88, 91, 92, 173, 182, 208, 220, 231, 233, 248, 249, 250, 253, 254, 255, 278, 279, 280, 281, 286, 287, 296, 299, 301, 303, 304, 305, 312, 314, 317, 319, 362, 366, 370, 374, 382, 387, 398, 399, 400, 401, 422, 423, 434, 444, 445, 455, 465, 469, 470, 471, 472, 473, 474, 475, 476], "futur": [14, 16, 19, 45, 333, 338], "avail": [14, 18, 19, 29, 39, 123, 158, 160, 161, 170, 233, 249], "specif": [14, 18, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 59, 60, 93, 115, 123, 165, 173, 212, 213, 233, 248, 249, 250, 273, 333, 338, 353, 362, 374, 378, 379, 380, 381, 402, 403, 422, 424, 425, 426, 434, 437, 439, 440, 467, 468], "quickli": [14, 16, 19, 46, 47], "obsolet": [14, 16], "user": [14, 15, 27, 32, 40, 42, 60, 455, 466, 467, 468], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 30, 42, 45, 46, 47, 48, 60, 434], "desir": [14, 93, 99, 102, 123, 168, 233, 262, 312, 318], "provid": [14, 18, 19, 30, 33, 36, 37, 38, 39, 40, 41, 43, 47, 59, 60, 71, 72, 74, 85, 93, 105, 106, 107, 112, 115, 122, 123, 233, 247, 275, 279, 296, 299, 301, 303, 304, 305, 333, 355, 362, 367, 374, 409, 410, 422, 428, 430, 431, 432, 433, 455, 464, 471, 472, 473, 474, 475, 476], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 71, 72, 74, 75, 89, 90, 123, 132, 157, 163, 233, 234, 236, 237, 256, 276, 291, 320, 330, 333, 350, 353, 356, 362, 367, 371, 378, 379, 380, 381, 382, 383, 384, 393, 394, 395, 402, 403, 406, 431, 434, 437, 439], "modern": [14, 15], "simpl": [14, 18, 19, 28, 29, 30, 32, 33, 36, 37, 38, 39, 40, 43, 45, 47, 48, 60, 233, 251], "scalabl": [14, 43], "manner": [14, 28, 39, 46, 59, 60, 382, 394], "must": [14, 16, 18, 19, 28, 29, 30, 33, 36, 38, 39, 43, 47, 48, 63, 66, 74, 75, 77, 78, 79, 81, 82, 85, 87, 88, 89, 90, 91, 92, 93, 99, 100, 101, 123, 152, 153, 154, 155, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 224, 225, 226, 227, 229, 230, 232, 233, 241, 252, 279, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 350, 351, 353, 354, 355, 356, 358, 360, 362, 363, 364, 366, 367, 368, 369, 371, 373, 374, 402, 407, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 471, 475], "determin": [14, 29, 33, 37, 38, 39, 93, 102, 103, 109, 112, 113, 114, 122, 123, 158, 160, 161, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 195, 196, 201, 202, 203, 206, 207, 209, 210, 214, 217, 221, 222, 225, 226, 227, 230, 233, 234, 236, 237, 261, 263, 267, 268, 269, 270, 271, 288, 295, 296, 302, 320, 331, 333, 334, 335, 336, 337, 340, 341, 344, 346, 347, 349, 350, 354, 355, 356, 378, 379, 380, 381, 414, 415, 418, 431, 432, 433], "exactli": [14, 16, 30, 39, 434, 440], "common": [14, 35, 37, 39, 60], "ground": [14, 32], "li": 14, "between": [14, 30, 32, 33, 36, 37, 41, 42, 44, 45, 46, 48, 59, 74, 75, 93, 110, 173, 181, 221, 358, 360, 361, 362, 366, 374, 382, 388, 402, 404, 414, 415, 418, 434, 471, 473], "find": [14, 19, 43, 46, 414, 415, 418, 434], "exist": [14, 15, 20, 29, 30, 31, 32, 33, 34, 35, 40, 43, 60, 233, 247, 471, 475], "essenti": [14, 15, 30, 33, 39], "order": [14, 18, 19, 20, 29, 30, 34, 36, 38, 39, 41, 45, 46, 48, 60, 173, 181, 296, 299, 301, 303, 304, 305, 333, 338, 342, 351, 352, 356, 362, 367, 378, 379, 380, 409, 412, 414, 415, 418, 419, 420, 421, 422, 423, 477, 478], "design": [14, 15, 27, 40, 43, 45, 60], "univers": 14, "abstract": [14, 37, 47, 60, 123, 138, 471, 475], "In": [14, 16, 18, 19, 28, 29, 30, 33, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 123, 162, 169, 172, 173, 177, 217, 222, 362, 370, 402, 406, 434], "search": [14, 28, 30, 32, 410, 411, 412, 413], "languag": [14, 16, 43], "first": [14, 15, 18, 19, 20, 30, 33, 36, 41, 43, 45, 46, 48, 71, 72, 74, 83, 84, 123, 154, 173, 177, 183, 185, 186, 187, 188, 193, 198, 200, 204, 205, 210, 211, 213, 214, 217, 219, 221, 229, 233, 236, 296, 300, 333, 335, 337, 338, 341, 346, 348, 351, 353, 355, 362, 364, 371, 374, 375, 378, 379, 380, 381, 382, 383, 392, 393, 402, 408, 409, 410, 411, 414, 415, 416, 455, 466, 467, 468, 471, 475], "see": [14, 17, 33, 37, 39, 41, 45, 46, 59, 60, 74, 75, 80, 83, 84, 93, 101, 115, 173, 177, 183, 185, 186, 187, 188, 192, 196, 204, 210, 213, 214, 217, 219, 221, 222, 229, 333, 344, 347, 350, 355, 356, 409, 411, 414, 415, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "clear": [14, 15, 16, 19, 30, 32, 38, 39, 43, 45, 123, 141], "front": [14, 42, 43, 46, 434, 440], "runner": 14, "look": [14, 19, 20, 28, 30, 33, 38, 39, 41, 43, 45, 47, 48], "littl": [14, 36, 45], "deeper": [14, 27, 42, 123, 147, 151, 155, 382, 393, 394], "follow": [14, 15, 18, 20, 28, 29, 30, 32, 34, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 60, 93, 111, 123, 167, 173, 222, 233, 264, 265, 266, 286, 287, 296, 299, 301, 303, 304, 305, 320, 331, 332, 333, 348, 356, 382, 388, 394, 414, 415, 418, 422, 423, 434, 455, 465, 471, 475], "same": [14, 16, 18, 19, 28, 30, 32, 33, 36, 37, 39, 40, 41, 43, 45, 47, 48, 74, 75, 78, 82, 85, 88, 89, 90, 92, 93, 99, 100, 101, 123, 132, 133, 167, 173, 174, 177, 184, 189, 197, 217, 222, 223, 224, 232, 233, 252, 254, 255, 275, 278, 279, 296, 302, 307, 320, 321, 322, 323, 324, 325, 326, 327, 333, 334, 335, 336, 337, 338, 339, 340, 345, 347, 348, 350, 351, 354, 355, 362, 364, 367, 368, 371, 373, 374, 378, 379, 380, 382, 395, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 434, 455, 456, 457, 458, 459, 460, 461, 462], "core": [14, 39, 43, 48, 123, 160, 434], "principl": 14, "oper": [14, 18, 30, 33, 36, 37, 39, 40, 41, 46, 47, 74, 83, 84, 93, 115, 173, 177, 187, 222, 233, 238, 248, 249, 250, 288, 296, 299, 301, 303, 304, 305, 320, 321, 322, 323, 324, 325, 326, 327, 329], "expos": [14, 43, 47, 233, 242], "almost": [14, 37, 44, 46], "ident": [14, 16, 33, 35, 45, 46, 60, 382, 395, 434], "uniqu": [14, 33, 60, 123, 132, 133, 378, 379, 380, 381, 382, 388, 414, 415, 416, 417, 418], "syntax": [14, 15], "There": [14, 30, 33, 36, 37, 38, 43, 46, 60, 422, 423], "onli": [14, 17, 18, 19, 28, 30, 32, 33, 34, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 58, 60, 123, 173, 212, 213, 333, 341, 348, 362, 367, 382, 383, 384, 392, 393, 409, 410, 411, 422, 425, 434, 471, 472, 473, 474, 475, 476], "so": [14, 15, 18, 19, 28, 29, 30, 32, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 382, 383, 393, 434], "wai": [14, 15, 40, 45, 46, 47, 48, 60, 422, 423], "manipul": [14, 28, 48, 59, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "unsurprisingli": 14, "fundament": [14, 43], "consist": [14, 36, 40, 123, 155, 333, 338, 422, 423, 467, 468], "each": [14, 15, 16, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 48, 59, 63, 66, 67, 69, 74, 85, 93, 100, 123, 132, 133, 144, 145, 146, 147, 148, 149, 150, 154, 166, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 296, 299, 301, 303, 304, 305, 312, 315, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 334, 335, 336, 338, 341, 344, 345, 347, 350, 351, 362, 365, 369, 371, 372, 374, 376, 377, 382, 388, 395, 402, 403, 409, 412, 414, 415, 416, 422, 423, 434, 440, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "veri": [14, 15, 19, 28, 32, 33, 39, 40, 41, 44, 46, 47, 48, 60, 434], "similar": [14, 28, 37, 38, 39, 46, 60, 173, 222, 320, 331, 455, 466], "convent": [14, 59, 333, 341, 422, 423], "those": [14, 19, 33, 37, 38, 39, 40, 43, 48, 74, 75, 296, 310, 333, 348, 351, 362, 363], "introduc": [14, 46, 362, 371], "2006": 14, "layer": [14, 28, 43, 44, 47, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 400, 401, 434, 446, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 477, 478], "therefor": [14, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 43, 45, 47, 60], "present": [14, 31, 38, 39, 40, 41, 43], "itself": [14, 19, 37, 40, 41, 47, 59, 60, 382, 394], "cut": 14, "cloth": 14, "adher": [14, 15, 29, 31, 43, 48], "semant": [14, 43, 48, 173, 222], "round": [14, 15, 16, 30, 43, 45, 46, 47, 48, 59, 173, 177, 189, 197, 198, 217, 227, 232, 434], "up": [14, 15, 16, 17, 19, 30, 43, 44, 45, 46, 47, 48, 59, 60], "hopefulli": [14, 15, 16, 27, 43, 45, 46, 47, 48, 59], "paint": [14, 43], "pictur": [14, 43], "how": [14, 16, 17, 18, 27, 29, 30, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 59, 60, 434, 440, 455, 466, 467, 468], "pleas": [14, 15, 16, 18, 19, 30, 43, 45, 46, 47, 48, 59], "check": [14, 15, 16, 18, 19, 30, 37, 42, 43, 45, 46, 47, 48, 59, 93, 103, 112, 122, 123, 162, 172, 233, 238, 251, 261, 268, 269, 270, 271, 288, 295, 296, 302, 333, 338, 382, 383, 392, 393, 394, 434], "out": [14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 32, 33, 36, 37, 38, 42, 43, 45, 46, 47, 48, 59, 63, 66, 74, 75, 123, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 241, 244, 245, 252, 254, 320, 328, 330, 333, 354, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 409, 410, 411, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 455, 463], "discuss": [14, 15, 16, 17, 19, 30, 38, 39, 40, 43, 45, 46, 47, 48, 59, 60, 434], "faq": [14, 15, 16, 30, 43, 45, 46, 47, 48, 59], "reach": [14, 15, 16, 19, 30, 43, 45, 46, 47, 48, 59, 123, 147, 151, 155, 382, 394], "discord": [14, 15, 16, 19, 30, 43, 45, 46, 47, 48, 59], "you": [14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 33, 42, 43, 45, 46, 47, 48, 59, 60, 434, 440], "question": [14, 15, 16, 30, 32, 43, 45, 46, 47, 48, 59, 60], "With": [15, 16, 30, 32, 43, 74, 85, 173, 177, 230, 320, 327, 333, 334, 335, 336, 342, 353, 358, 361, 362, 363, 367, 369, 371, 372, 402, 403, 409, 410, 419, 420, 431, 432], "central": 15, "goal": 15, "being": [15, 16, 19, 30, 32, 35, 36, 37, 38, 39, 40, 41, 43, 46, 59, 60, 74, 75, 233, 277, 282, 414, 417, 434], "would": [15, 18, 19, 27, 29, 30, 32, 35, 36, 40, 41, 42, 43, 45, 47, 48, 60, 63, 68], "entir": [15, 16, 19, 30, 31, 32, 36, 37, 45, 46, 47, 48, 123, 167, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 455, 464], "forgiven": 15, "rais": [15, 43, 45, 93, 101, 173, 195, 221, 233, 238, 257, 280, 287, 293, 333, 341, 343, 355, 362, 373, 374, 409, 412, 422, 424, 426, 431, 432, 433, 467, 468, 471, 475], "an": [15, 16, 18, 19, 20, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 63, 66, 67, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 99, 100, 101, 110, 113, 114, 115, 123, 145, 149, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 239, 240, 241, 243, 252, 253, 262, 268, 269, 270, 271, 291, 292, 293, 296, 302, 307, 309, 310, 312, 314, 318, 319, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 347, 348, 349, 350, 351, 354, 355, 356, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 388, 402, 404, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 444, 445, 467, 468, 471, 472, 473, 475], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 33, 38, 39, 40, 41, 43, 45, 48, 60, 296, 299, 301, 303, 304, 305, 434, 471, 472, 473, 474, 475, 476], "other": [15, 19, 28, 30, 32, 33, 36, 37, 40, 43, 45, 47, 48, 58, 59, 60, 71, 72, 74, 75, 173, 196, 233, 234, 296, 300, 402, 406, 414, 417, 422, 428, 430, 434], "strong": 15, "industri": 15, "back": [15, 36, 40, 42, 43, 45, 60, 434, 440, 467, 468, 471, 475], "momentum": 15, "won": [15, 16, 48], "ad": [15, 18, 19, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 41, 43, 47, 60, 233, 286, 287, 333, 338, 362, 366, 477, 478], "just": [15, 16, 19, 29, 30, 32, 33, 43, 45, 46, 60, 422, 423, 455, 464], "make": [15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 45, 46, 48, 123], "problem": [15, 19, 36, 45], "even": [15, 16, 19, 33, 38, 39, 45, 46, 47, 48, 60, 173, 221], "wors": 15, "rather": [15, 28, 32, 37, 39, 48, 60, 74, 75, 123, 167, 233, 268, 269, 271, 296, 302], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 19, 33], "feasibl": 15, "space": [15, 74, 75, 83, 84, 233, 253], "case": [15, 18, 19, 28, 29, 30, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 47, 48, 60, 74, 85, 123, 162, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 189, 190, 191, 195, 196, 197, 206, 207, 209, 210, 217, 221, 222, 224, 225, 226, 227, 230, 232, 233, 278, 279, 333, 342, 362, 370, 382, 385, 391, 422, 424, 425, 426, 428, 429, 430, 455, 466, 467, 468, 471, 475], "unlik": [15, 30, 37, 123], "charger": 15, "charact": 15, "encod": [15, 46, 233, 253, 312, 314], "instant": [15, 434], "messag": [15, 43, 45, 480, 481], "much": [15, 18, 19, 28, 36, 37, 40, 43, 45, 46], "doe": [15, 19, 20, 27, 28, 30, 32, 33, 34, 35, 38, 40, 41, 43, 45, 46, 60, 362, 372], "mandat": [15, 32, 40], "adopt": [15, 19, 36], "continu": [15, 16, 31, 32, 60], "own": [15, 16, 29, 43, 60], "signatur": [15, 28, 29, 30, 38, 39, 41, 419, 420], "replac": [15, 20, 32, 35, 38, 39, 43, 45, 48, 60, 233, 278, 279, 362, 363, 402, 403], "your": [15, 16, 17, 18, 28, 29, 46, 47, 60, 434], "10": [15, 20, 30, 43, 45, 46, 74, 81, 84, 123, 173, 184, 207, 233, 277, 282, 296, 303, 333, 336, 353, 362, 367, 369, 372, 402, 403, 404, 422, 423, 471, 473], "100": [15, 16, 46, 47, 48, 60, 434], "despit": [15, 39], "distinct": [15, 40, 42, 414, 415, 418, 434], "still": [15, 32, 38, 45, 47, 60, 434], "believ": [15, 19], "share": [15, 32, 33, 34, 37, 43], "bring": [15, 43, 44], "benefit": [15, 16, 36, 37, 45, 46, 60], "unrel": 15, "what": [15, 16, 27, 30, 37, 42, 43, 45, 46, 47, 48, 59, 60, 434], "again": [15, 16, 19, 28, 30, 37, 40, 46, 48, 60], "contrari": 15, "bumpi": 15, "road": [15, 434], "allud": [15, 46], "most": [15, 18, 28, 32, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 60, 333, 338], "technolog": 15, "sector": [15, 173, 176, 179, 182], "full": [15, 16, 19, 29, 38, 41, 43, 60, 74, 93, 110, 333, 348, 350, 351], "success": 15, "reason": [15, 19, 28, 30, 33, 36, 37, 38, 43, 45, 173, 222], "build": [15, 17, 18, 33, 42, 44, 47, 48, 414, 415, 418, 434, 455, 466, 467, 468], "custom": [15, 47], "comput": [15, 16, 33, 43, 46, 60, 123, 167, 173, 177, 183, 186, 188, 193, 194, 199, 200, 204, 205, 211, 212, 213, 214, 217, 218, 219, 233, 240, 241, 244, 245, 296, 298, 299, 300, 301, 303, 304, 305, 307, 309, 312, 315, 320, 321, 322, 323, 324, 325, 326, 327, 329, 331, 333, 334, 335, 338, 339, 340, 341, 342, 348, 349, 350, 351, 355, 356, 358, 359, 360, 361, 382, 388, 414, 415, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430], "thank": [15, 46], "interoper": 15, "compon": [15, 43], "bio": 15, "hardwar": 15, "initi": [15, 19, 38, 39, 123, 320, 330, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 471, 475], "pcie": 15, "interfac": [15, 48, 60], "motherboard": 15, "raid": 15, "storag": [15, 46], "virtual": 15, "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 33, 47, 48, 74, 76, 86, 89, 90, 296, 299, 301, 303, 304, 305, 320, 333, 334, 336, 337, 338, 339, 340, 344, 345, 347, 348, 350, 351, 352, 354, 382, 384, 394], "factor": [15, 123, 132, 165, 166, 167, 296, 298, 299, 303, 304, 320, 321, 322, 323, 324, 325, 326, 327, 333, 334, 455, 456, 457, 458, 459, 460, 461, 462, 471, 472, 473, 474], "sata": 15, "connect": [15, 18, 47, 48, 455, 465, 466], "host": [15, 60], "bu": 15, "adapt": [15, 296, 304, 471, 474], "devic": [15, 27, 28, 33, 35, 38, 45, 46, 60, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 233, 254, 255, 275, 278, 279, 402, 403, 404, 405, 406, 444, 445, 446, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 477, 478], "html": [15, 20, 29, 419, 420], "enabl": [15, 18, 19, 32, 33, 36, 37, 40, 42, 43, 44, 46, 48, 60], "anyon": [15, 17, 60], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 382, 383, 392, 393], "commun": [15, 17, 19, 60, 434, 440], "network": [15, 33, 37, 43, 47, 59, 320, 329, 434, 441, 455, 467, 468], "smtp": 15, "possibl": [15, 17, 18, 19, 29, 30, 32, 38, 40, 43, 46, 59, 60, 233, 272, 290, 312, 318, 422, 424, 426], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 73, 93, 110, 173, 177, 196, 217, 222, 227], "754": [15, 73, 93, 110, 173, 177, 196, 217, 222, 227], "allow": [15, 43, 60, 74, 83, 84, 233, 272, 422, 423, 467, 468], "calcul": [15, 29, 173, 174, 175, 176, 177, 178, 179, 180, 181, 190, 191, 192, 195, 196, 206, 207, 208, 209, 210, 217, 221, 225, 226, 227, 229, 230, 358, 360, 361, 422, 424, 425, 426, 427, 428, 429, 430], "live": [15, 16], "depend": [15, 18, 29, 35, 38, 43, 60, 93, 99, 173, 174, 175, 176, 178, 179, 180, 181, 190, 191, 195, 196, 206, 207, 208, 209, 221, 225, 226, 230, 333, 338, 348, 350, 351, 409, 413, 419, 420, 421], "did": [15, 48], "aris": [15, 60], "until": [15, 19, 60, 434], "substanti": [15, 19, 32, 36], "innov": 15, "growth": 15, "usag": [15, 43, 123, 167], "relev": [15, 30, 38, 46, 471, 472, 473, 474, 475, 476], "area": [15, 40, 58, 173, 176, 179, 182, 434], "necess": 15, "parti": [15, 60], "could": [15, 16, 30, 32, 38, 40, 43, 45, 46, 47, 414, 415, 418], "easili": [15, 46, 47, 48, 60, 434], "engag": [15, 17, 19], "regard": [15, 123], "effect": [15, 29, 36, 41, 60, 74, 85, 296, 305, 422, 428, 430], "2015": 15, "sinc": 15, "alongsid": 15, "machin": [15, 18, 33, 59, 93, 110, 111, 173, 199, 333, 344, 347], "given": [15, 16, 19, 28, 29, 33, 36, 37, 39, 40, 43, 45, 47, 48, 59, 74, 75, 77, 83, 84, 123, 156, 162, 164, 165, 166, 167, 169, 172, 233, 244, 245, 255, 278, 279, 294, 296, 298, 299, 301, 303, 304, 305, 320, 321, 322, 323, 324, 325, 326, 327, 333, 357, 358, 360, 361, 362, 363, 366, 367, 369, 371, 372, 376, 382, 389, 390, 402, 404, 405, 406, 408, 419, 421, 444, 445], "frame": [15, 59], "less": [15, 30, 41, 42, 43, 173, 175, 176, 178, 181, 189, 206, 207, 209, 221, 222, 224, 227, 333, 344, 347, 356, 402, 406, 422, 430], "matur": [15, 60], "state": [15, 42, 43, 44, 46, 59, 173, 217, 320, 330, 434, 441, 442, 443, 444, 445, 446, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "than": [15, 19, 28, 30, 32, 37, 39, 40, 43, 46, 47, 48, 60, 74, 75, 93, 110, 123, 167, 173, 175, 176, 178, 181, 185, 187, 189, 197, 198, 206, 207, 209, 215, 221, 222, 224, 227, 232, 233, 268, 269, 271, 296, 302, 333, 335, 341, 344, 347, 356, 362, 363, 367, 373, 402, 406, 414, 415, 416, 418, 422, 423, 427, 428, 429, 430], "preced": [15, 47], "mention": [15, 18, 19, 30, 33, 41], "aros": 15, "70": [15, 333, 334, 422, 423], "80": [15, 422, 423], "90": [15, 422, 423], "effort": [15, 17, 60], "stage": [15, 17, 19, 20, 27, 434], "complet": [15, 19, 36, 37, 45, 46, 333, 348], "natur": [15, 30, 36, 59, 173, 195, 206, 208, 333, 349], "like": [15, 18, 19, 27, 28, 29, 30, 32, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 296, 302, 402, 406, 422, 423, 434], "certainli": 15, "mission": [15, 434], "creat": [15, 17, 20, 38, 39, 40, 43, 44, 47, 58, 59, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 91, 92, 123, 132, 133, 233, 254, 255, 275, 278, 279, 290, 296, 309, 402, 403, 404, 406, 422, 423, 434, 440, 444, 445, 446, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "At": 15, "process": [15, 16, 17, 19, 20, 33, 43, 48, 123, 132, 133, 162, 172], "ourselv": 15, "lead": [15, 16, 60, 333, 348, 351], "quansight": 15, "compani": 15, "made": [15, 19, 40, 43, 45], "organ": [15, 28, 33, 36, 37], "panda": 15, "scipi": 15, "conda": 15, "dask": [15, 414, 415, 418], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 43, 48], "sympi": 15, "rai": [15, 173, 181], "modin": 15, "spyder": 15, "includ": [15, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 59, 60, 74, 75, 76, 86, 233, 261, 295, 333, 356, 382, 383, 402, 406, 409, 411, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 439, 455, 465, 466, 469, 470], "member": [15, 19], "googl": [15, 434], "octoml": 15, "einop": [15, 233, 248, 249, 250], "further": [15, 16, 19, 20, 30, 36, 42, 46, 47, 434], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 27, 46, 312, 315, 319, 320, 321, 322, 323, 324, 325, 326, 327, 333, 337, 434, 440], "shaw": 15, "co": [15, 43, 59, 173, 233, 253, 434], "intel": 15, "togeth": [15, 36, 47, 48, 60, 477, 478], "major": [15, 38, 39, 60, 409, 412], "involv": [15, 17, 20, 27, 38, 48, 93, 115, 173, 177, 217, 434, 440], "anoth": [15, 19, 33, 38, 45, 48, 74, 80, 93, 100, 102, 104], "promis": 15, "sign": [15, 18, 44, 48, 74, 75, 173, 174, 177, 181, 187, 217, 222, 333, 349, 414, 415, 418, 422, 427, 429], "pursuit": 15, "unif": [15, 17, 45, 434, 440], "clearli": [15, 30], "lot": [15, 16, 35, 45, 60], "thought": [15, 18, 19, 41], "care": [15, 19, 48], "attent": [15, 19, 36, 320, 331, 332, 455, 466], "gone": [15, 42], "simplifi": [15, 43, 44, 45, 47], "compat": [15, 93, 101, 173, 177, 181, 183, 185, 186, 187, 188, 192, 193, 198, 200, 204, 205, 210, 211, 213, 214, 217, 219, 221, 222, 229, 333, 344, 347, 350, 353, 355, 356, 362, 370, 409, 411, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "excit": [15, 17, 27, 434], "complianc": 15, "hope": [15, 60], "due": [15, 40, 173, 217], "suit": [15, 27, 31, 32, 46, 59], "some": [15, 16, 19, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 59, 60, 173, 196, 296, 298, 299, 301, 303, 304, 305, 310, 320, 328, 434, 455, 463], "motiv": [15, 45], "great": [15, 16, 32, 43, 45], "convinc": 15, "celebr": 15, "encourag": [15, 59, 60, 434, 440], "foundat": 15, "point": [16, 19, 29, 30, 36, 41, 43, 45, 46, 59, 73, 74, 75, 77, 79, 81, 87, 91, 93, 99, 110, 113, 115, 173, 175, 176, 177, 178, 179, 180, 181, 182, 189, 190, 191, 192, 195, 196, 197, 206, 207, 209, 210, 217, 221, 222, 225, 226, 227, 230, 232, 333, 334, 336, 338, 339, 340, 344, 347, 348, 350, 351, 356, 414, 415, 418, 422, 424, 425, 426, 427, 428, 429, 430], "mai": [16, 18, 45, 47, 74, 75, 80, 173, 193, 200, 205, 212, 213, 233, 247, 414, 415, 418, 419, 420, 421, 422, 424, 425, 426], "ask": [16, 43, 45, 60], "perfectli": 16, "happi": [16, 18, 60], "abund": 16, "better": [16, 27, 42, 45, 46, 47], "ll": [16, 17, 30, 46], "give": [16, 19, 27, 30, 45, 362, 370, 422, 423], "two": [16, 30, 32, 36, 42, 46, 48, 74, 75, 79, 85, 89, 90, 173, 187, 233, 236, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 362, 375, 414, 415, 417, 418, 422, 423, 434], "streamlin": 16, "workflow": [16, 46, 58, 434], "save": [16, 60, 233, 283, 312, 314, 467, 468], "week": [16, 434], "let": [16, 30, 38, 39, 43, 45, 46, 47, 48, 422, 423, 425, 428, 429, 430, 434], "sai": [16, 35, 45], "deepmind": 16, "releas": [16, 18, 434], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 40, 46, 422, 428, 430], "perceiverio": 16, "happen": [16, 19, 46], "slew": 16, "rush": 16, "f": [16, 27, 43, 46, 48, 173, 199, 233, 263, 267, 312, 317], "g": [16, 27, 60, 93, 98, 115, 123, 139, 402, 405, 406, 414, 415, 418, 422, 424, 426, 427, 429], "inevit": 16, "deviat": [16, 400, 401, 402, 405, 422, 428, 469, 470], "origin": [16, 34, 35, 38, 43, 45, 173, 181, 333, 342, 362, 370, 371], "often": [16, 33, 60], "erron": 16, "train": [16, 33, 37, 39, 46, 47, 48, 58, 59, 60, 296, 298, 299, 303, 434], "poor": 16, "converg": 16, "perform": [16, 28, 30, 32, 33, 34, 36, 37, 39, 40, 41, 43, 46, 60, 63, 68, 74, 83, 84, 123, 233, 244, 248, 249, 250, 264, 265, 266, 296, 299, 301, 303, 304, 305, 312, 313, 316, 320, 328, 330, 333, 351, 378, 379, 380, 381, 382, 389, 390, 431, 432, 433], "issu": [16, 17, 43, 45, 47, 60], "etc": [16, 18, 19, 28, 30, 32, 36, 37, 38, 41, 43, 45, 46, 60, 74, 83, 84, 233, 254, 255, 275, 278, 279, 402, 403, 404, 406, 414, 415, 418, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 477, 478], "publish": [16, 60], "manag": [16, 17, 60, 123], "get": [16, 17, 18, 19, 27, 33, 38, 39, 43, 44, 45, 46, 47, 93, 108, 109, 110, 111, 123, 132, 133, 143, 156, 157, 162, 166, 169, 172, 233, 235, 256, 257, 258, 277, 434, 440, 455, 464], "work": [16, 18, 19, 27, 32, 38, 39, 42, 43, 44, 45, 47, 48, 434, 440], "repositori": [16, 18, 19, 31], "pull": [16, 17, 18, 28], "request": [16, 17, 28], "confus": 16, "do": [16, 18, 19, 28, 30, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 173, 222, 296, 302, 310, 382, 383, 392, 393, 394, 422, 423], "don": [16, 19, 47, 60], "expect": [16, 60, 233, 235, 434], "codebas": [16, 17, 27, 42, 123, 165, 166, 434], "total": [16, 17, 19, 32, 39, 46, 47, 60, 123, 169, 409, 412, 422, 428, 430], "hour": 16, "spent": 16, "spin": 16, "off": [16, 42, 333, 337, 354], "test": [16, 18, 27, 30, 93, 113, 114, 173, 201, 202, 203, 431, 432, 433], "error": [16, 18, 32, 36, 39, 45, 60, 63, 64, 123, 173, 194, 422, 424, 426, 467, 468, 471, 475], "iter": [16, 37, 43, 46, 71, 72, 123, 146, 148, 149, 150, 151, 154, 167, 233, 234, 279, 284, 362, 365, 369, 372, 376, 377, 382, 383, 384, 388, 392, 393, 394], "address": [16, 19, 36, 43], "sake": 16, "singl": [16, 28, 30, 32, 33, 35, 37, 40, 41, 43, 46, 47, 48, 60, 123, 132, 133, 152, 153, 154, 155, 233, 292, 295, 402, 405, 406, 414, 415], "multipl": [16, 19, 33, 37, 60, 173, 217, 233, 272, 333, 340, 362, 372, 400, 401, 409, 410, 411, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 455, 465], "line": [16, 18, 19, 30, 36, 44, 45, 46, 47, 58, 434, 440], "convert": [16, 36, 40, 43, 60, 74, 76, 86, 93, 97, 98, 104, 123, 139, 140, 141, 162, 169, 172, 233, 285, 291, 292, 312, 314, 319, 333, 357, 382, 384, 394, 445], "directli": [16, 19, 28, 33, 36, 37, 38, 39, 40, 41, 43, 45, 47, 48, 59, 60, 382, 394], "graph": [16, 33, 44, 60, 296, 299, 301, 303, 304, 305, 414, 415, 418, 467, 468], "guarante": [16, 36, 414, 415], "turn": [16, 30], "4": [16, 20, 30, 43, 45, 46, 47, 48, 74, 82, 85, 88, 92, 173, 177, 181, 230, 233, 253, 312, 314, 315, 319, 320, 323, 324, 325, 327, 330, 333, 335, 336, 337, 340, 344, 353, 354, 358, 361, 362, 363, 364, 367, 369, 370, 371, 372, 402, 403, 408, 419, 420, 422, 423, 431, 432, 434, 471, 472, 473, 474, 476], "step": [16, 18, 19, 20, 30, 34, 36, 38, 39, 43, 46, 47, 48, 59, 74, 75, 83, 84, 123, 296, 298, 299, 301, 303, 304, 305, 378, 379, 380, 381, 434, 471, 472, 473, 474, 475, 476], "take": [16, 17, 19, 30, 32, 38, 39, 43, 45, 47, 48, 60, 312, 316, 434, 440], "few": [16, 19, 33, 37, 38, 39, 40, 44, 45, 46, 47, 58, 434, 440], "second": [16, 30, 45, 123, 154, 173, 177, 183, 185, 186, 187, 188, 193, 198, 200, 204, 205, 210, 211, 213, 214, 217, 219, 221, 229, 233, 236, 277, 282, 296, 298, 299, 303, 333, 335, 337, 338, 341, 346, 348, 351, 353, 355, 362, 374, 375, 378, 380, 414, 415, 416, 471, 472, 473], "automat": [16, 18, 19, 33, 37, 41, 42, 43, 44, 47, 48, 434], "convers": [16, 42, 44, 48, 59, 60, 434, 440], "everyon": [16, 17, 19, 60], "regardless": [16, 17, 45, 48, 71, 72], "wouldn": 16, "nice": [16, 32], "write": [16, 19, 20, 27, 28, 29, 30, 32, 33, 34, 43, 45, 48, 63, 66, 123, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 195, 196, 197, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 221, 222, 224, 225, 226, 227, 229, 230, 233, 241, 245, 252, 254, 358, 360, 362, 363, 366, 367, 368, 369, 371, 373, 374, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "onc": [16, 18, 19, 37, 38, 39, 43, 46, 123, 167, 333, 340, 351, 402, 403], "know": [16, 414, 415, 418], "among": [16, 32], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 33, 43], "understand": [16, 27, 30, 41, 42], "pattern": [16, 38, 233, 248, 249, 250], "hasn": 16, "chang": [16, 19, 29, 31, 32, 43, 47, 60, 123, 333, 335, 362, 370, 382, 384, 394, 434, 440], "now": [16, 18, 28, 35, 38, 41, 45, 46, 48, 59, 60, 422, 423, 455, 466, 467, 468], "spend": 16, "torchvis": 16, "probabl": [16, 320, 328, 402, 403, 455, 463], "sonnet": 16, "about": [16, 19, 42, 43, 47, 48, 60, 93, 110, 111], "next": [16, 18, 29, 30, 34, 35, 45, 46, 93, 110, 434, 467, 468, 471, 472, 473, 474, 475, 476], "everyth": [16, 44, 60], "zero": [16, 30, 39, 41, 43, 46, 47, 74, 77, 79, 85, 89, 90, 92, 93, 99, 173, 177, 185, 196, 212, 213, 217, 221, 222, 230, 233, 275, 278, 279, 296, 298, 299, 303, 304, 320, 328, 333, 336, 341, 344, 347, 355, 356, 362, 367, 369, 371, 377, 409, 410, 411, 412, 414, 415, 418, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 446, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 471, 472, 473, 474], "need": [16, 19, 28, 29, 30, 31, 33, 36, 43, 45, 46, 59, 60, 233, 240, 241, 362, 363, 366], "said": 16, "high": [16, 46, 402, 404, 406], "level": [16, 17, 33, 42, 43, 46, 47, 48, 60], "optim": [16, 44, 46, 48, 59, 123, 296, 299, 301, 303, 304, 305, 378, 379, 380, 381, 434, 472, 473, 474, 476], "trainer": [16, 58, 60, 434], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 48], "flax": [16, 48, 60], "trax": [16, 48], "objax": [16, 48], "idea": [16, 59], "fulli": [16, 36, 41, 43, 44, 45, 46, 47, 48, 60, 455, 465, 466], "offer": [16, 47], "strongli": [17, 434, 440], "welcom": [17, 18, 434, 440], "absolut": [17, 173, 174, 333, 349], "skill": 17, "whether": [17, 18, 38, 40, 41, 63, 64, 71, 72, 93, 99, 108, 112, 113, 114, 122, 123, 143, 154, 158, 162, 167, 170, 172, 173, 203, 233, 234, 236, 237, 244, 247, 251, 253, 259, 261, 263, 267, 268, 269, 270, 271, 272, 284, 288, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 307, 320, 328, 333, 338, 378, 379, 380, 381, 382, 383, 384, 388, 392, 393, 394, 395, 402, 403, 431, 432, 433, 444, 445, 455, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 27, 29, 30, 38, 42, 43, 45, 46, 47, 59, 74, 75, 83, 84, 123, 138], "aspect": [17, 46, 312, 318, 434], "guid": [17, 18, 19, 32, 434], "through": [17, 19, 27, 30, 33, 34, 42, 43, 45, 46, 47, 48, 59, 173, 181], "journei": [17, 434, 440], "inclusvi": 17, "big": [17, 60], "team": [17, 18, 19], "board": 17, "contributor": [17, 19, 42, 434], "split": [17, 19, 42, 43, 60, 123, 132, 148, 149, 150, 151, 165, 166, 167, 233, 272, 362, 434], "section": [17, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 414, 415, 418], "below": [17, 18, 27, 28, 30, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 59, 74, 85, 89, 90, 173, 177, 230, 333, 336, 337, 354, 362, 367, 369, 371, 419, 420, 434], "best": [17, 19, 27, 28, 30, 32, 233, 272], "go": [17, 18, 19, 27, 28, 30, 42, 46, 382, 393], "finish": [17, 18, 27, 434], "dive": [17, 19, 42, 45, 46, 60], "right": [17, 18, 19, 27, 30, 46, 173, 185, 187, 333, 351], "environ": [17, 18, 59], "basic": 17, "fork": [17, 233, 273], "doc": [17, 29, 41, 43, 46, 47, 434], "document": [17, 19, 20, 44, 46, 48], "local": [17, 19, 33], "help": [17, 18, 19, 30, 36, 37, 45, 46, 47, 58, 422, 423, 429, 434], "realli": [18, 60], "contribut": [18, 19, 43, 440], "toward": [18, 43, 362, 371, 434, 440], "page": [18, 19, 44, 48, 58, 434, 440], "explain": [18, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 434, 440], "main": [18, 20, 35, 37, 74, 79, 89, 90, 333, 337, 354], "prefer": 18, "mode": [18, 30, 60, 71, 72, 123, 152, 153, 154, 155, 167, 173, 177, 217, 333, 348], "git": [18, 19], "com": 18, "unifyai": [18, 20], "http": [18, 29, 296, 298, 299, 419, 420], "gh": 18, "your_fold": 18, "id": [18, 36, 37, 467, 468], "cours": [18, 19, 30, 46, 60], "whatev": [18, 60], "integr": [18, 32, 93, 99], "familiar": 18, "decid": [18, 382, 393], "sure": [18, 31], "elig": 18, "free": [18, 19, 33, 42, 59], "student": 18, "licenc": 18, "peopl": [18, 19, 27], "seem": [18, 47, 60], "miss": [18, 30, 32, 36, 37, 471, 475], "add": [18, 19, 27, 28, 29, 33, 34, 36, 37, 41, 43, 45, 173, 358, 359, 400, 401, 434, 440, 469, 470], "explicit": [18, 38, 40, 43], "remind": 18, "show": [18, 30, 59, 60, 434], "easier": [18, 36], "remot": 18, "packag": [18, 60], "mitig": 18, "potenti": [18, 42, 173, 196], "conflict": [18, 19, 46], "addit": [18, 19, 28, 29, 32, 37, 38, 45, 46, 48, 173, 177, 233, 248, 249, 250, 400, 401, 455, 465], "yet": 18, "particular": [18, 28, 40, 173, 174, 422, 423], "system": [18, 60, 333, 350], "instruct": 18, "abov": [18, 29, 30, 33, 36, 40, 41, 45, 46, 47, 48, 74, 85, 89, 90, 173, 177, 217, 230, 333, 336, 337, 338, 354, 362, 367, 369, 371, 402, 404, 419, 420, 422, 427, 428, 429], "instal": [18, 20, 59, 434], "desktop": 18, "wsl": 18, "requir": [18, 20, 28, 30, 32, 35, 36, 38, 39, 41, 45, 60, 71, 72, 173, 227, 333, 338, 362, 374, 444, 445], "run": [18, 19, 20, 31, 32, 43, 44, 45, 46, 47, 48, 59, 60, 123, 132, 296, 298, 299, 303, 378, 379, 380, 381, 455, 466, 467, 468], "command": [18, 20, 434], "powershel": 18, "admin": 18, "visit": 18, "link": 18, "latest": [18, 20, 29, 419, 420, 455, 464], "imag": [18, 20, 28, 43, 44, 46, 48, 59, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 434], "cmd": 18, "profession": 18, "execut": [18, 20, 43, 45, 48, 60, 233, 293], "deploy": 18, "click": [18, 434], "top": [18, 32, 46, 47], "left": [18, 30, 38, 173, 185, 333, 338, 342, 351, 409, 410], "icon": 18, "side": [18, 19], "choos": [18, 19, 48, 173, 212, 213, 409, 413, 414, 415, 418, 422, 424, 425, 426], "panel": 18, "python3": 18, "path": [18, 20], "press": [18, 46, 434], "ok": 18, "correctli": [18, 32, 38, 41, 47, 60, 333, 342, 409, 410], "caus": [18, 30, 32], "earlier": [18, 19], "note": [18, 19, 28, 30, 173, 222, 333, 338, 351, 362, 374, 422, 425], "termin": [18, 37, 43, 46], "linux": 18, "detail": [18, 19, 28, 32, 33, 34, 35, 37, 41, 46, 47, 74, 80, 414, 415, 418], "sudo": 18, "apt": 18, "updat": [18, 19, 20, 27, 30, 31, 35, 36, 37, 38, 41, 43, 45, 46, 48, 123, 132, 233, 266, 278, 279, 296, 298, 299, 301, 303, 304, 305, 320, 330, 378, 379, 380, 382, 389, 390, 398, 399, 444, 445, 471, 472, 473, 474, 475, 476], "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 74, 85, 233, 240, 241, 320, 328, 333, 342, 356, 455, 463], "keyr": 18, "fssl": 18, "download": [18, 32], "gpg": 18, "dearmor": 18, "o": [18, 43], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 48, 60], "lsb_releas": 18, "cs": 18, "stabl": [18, 43, 233, 257, 258, 280, 281, 286, 287, 419, 420, 421], "tee": 18, "list": [18, 20, 28, 30, 38, 39, 41, 43, 46, 47, 48, 60, 74, 75, 76, 77, 85, 86, 87, 91, 93, 100, 123, 132, 133, 144, 145, 148, 149, 152, 153, 167, 233, 237, 285, 290, 294, 312, 318, 320, 321, 322, 323, 324, 325, 326, 327, 333, 353, 362, 364, 367, 372, 374, 382, 383, 384, 388, 393, 394, 431, 432, 433, 434, 455, 456, 457, 458, 459, 460, 461, 462], "dev": [18, 33, 39, 43, 45, 47, 123, 132, 159], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 60], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 59], "post": [18, 48, 400, 401, 434, 440], "pypi": 18, "more": [18, 19, 27, 28, 30, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 74, 75, 93, 100, 173, 196, 333, 341, 362, 367, 414, 415, 416, 418, 422, 423, 434], "nutshel": [18, 41], "hook": 18, "lint": 18, "accept": [18, 19, 29, 30, 32, 33, 36, 37, 39, 40, 41, 45, 74, 85, 173, 177, 212, 213, 222, 230, 333, 336, 362, 367, 369, 371, 419, 420, 422, 425, 434], "necessari": [18, 30, 40], "fix": [18, 19], "fail": [18, 32, 43, 45], "attempt": [18, 60], "succe": 18, "problemat": 18, "appli": [18, 30, 32, 33, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 58, 60, 63, 64, 65, 66, 67, 68, 69, 70, 93, 115, 233, 248, 249, 250, 296, 303, 304, 320, 329, 331, 332, 333, 344, 347, 358, 360, 361, 362, 374, 378, 379, 380, 382, 388, 391, 394, 395, 400, 401, 434, 441, 442, 443, 469, 470], "To": [18, 19, 33, 37, 46, 47, 48, 434], "proce": [18, 30], "modifi": [18, 29, 33, 38, 39, 43], "file": [18, 19, 20, 28, 33, 36, 37, 43, 46, 233, 283, 467, 468], "properli": [18, 27], "m": [18, 27, 43, 74, 85, 89, 90, 333, 334, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 350, 351, 352, 354, 402, 405, 406], "pip": [18, 59, 434], "enter": [18, 19, 36, 38, 39, 41], "folder": [18, 19, 20, 28, 31, 32, 33], "cd": 18, "That": [18, 19, 45, 46, 47, 173, 222], "Then": [19, 20, 45, 60], "practic": [19, 32], "separ": [19, 32, 43, 45, 46], "branch": [19, 60, 71, 72, 173, 181], "pr": 19, "master": 19, "simpli": [19, 29, 32, 33, 36, 37, 39, 40, 41, 43, 47, 48, 173, 196], "role": [19, 44], "kept": [19, 40, 378, 379, 380], "date": 19, "upstream": [19, 31], "complic": [19, 43], "keep": [19, 31, 44, 46, 48, 233, 294], "script": [19, 30, 43, 60], "root": [19, 20, 46, 173, 227, 402, 403, 404, 405, 406], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "extens": [19, 29, 74, 85, 173, 177, 230, 333, 336, 362, 367, 371, 419, 420], "act": [19, 30, 60], "placehold": [19, 36, 41, 382, 394], "track": [19, 123, 382, 394, 467, 468], "sub": [19, 27, 32, 37, 45, 46, 47, 123, 148, 149, 152, 153, 154, 155, 333, 337, 362, 372, 378, 379, 380, 381, 434], "task": [19, 59, 378, 379, 380, 381], "mark": [19, 32], "tick": 19, "ii": [19, 422, 423], "iii": 19, "comment": 19, "titl": [19, 434], "name": [19, 20, 29, 32, 43, 45, 46, 48, 71, 72, 333, 338, 348, 351, 414, 415, 416], "refer": [19, 32, 33, 38, 41, 60, 74, 79, 173, 196, 208, 296, 298, 299, 333, 355, 357, 422, 428, 430, 431, 432, 433, 455, 465], "issue_numb": 19, "delet": [19, 20], "No": [19, 43], "wait": 19, "progress": [19, 44, 48], "soon": [19, 58, 60, 434, 440], "partial": [19, 467, 468], "solut": [19, 32, 333, 350], "review": [19, 28], "merg": 19, "everi": [19, 20, 30, 31, 32, 33, 34, 35, 37, 40, 41, 43, 45, 47, 74, 81, 82, 233, 234], "respond": 19, "good": [19, 29, 30, 36, 41, 43, 47, 422, 423], "shape": [19, 28, 29, 30, 38, 39, 41, 43, 45, 46, 47, 48, 63, 66, 74, 77, 78, 81, 82, 85, 87, 88, 89, 90, 91, 92, 93, 99, 100, 101, 123, 135, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 195, 196, 197, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 221, 222, 223, 224, 225, 226, 227, 229, 230, 233, 241, 252, 255, 259, 275, 278, 279, 285, 312, 315, 317, 318, 320, 322, 324, 326, 327, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 377, 402, 404, 405, 406, 409, 410, 416, 419, 420, 421, 422, 423, 431, 432, 433, 434, 455, 457, 458, 459, 460, 461, 462, 469, 470], "move": [19, 28, 123, 168], "within": [19, 32, 47, 60, 74, 75, 402, 406], "7": [19, 20, 30, 33, 173, 177, 184, 195, 230, 296, 298, 299, 303, 312, 315, 319, 320, 327, 333, 335, 336, 337, 353, 358, 359, 360, 361, 362, 363, 367, 369, 372, 402, 403, 404, 422, 423], "dai": 19, "close": [19, 29, 173, 196, 312, 318, 333, 351], "method": [19, 28, 29, 30, 32, 33, 36, 41, 43, 44, 47, 48, 60, 74, 80, 85, 173, 177, 230, 233, 242, 278, 279, 296, 303, 304, 333, 335, 336, 353, 358, 361, 362, 363, 367, 369, 371, 372, 382, 383, 393, 394, 395, 419, 420, 431, 432, 434, 455, 466, 467, 468], "likewis": [19, 33, 38, 41, 46], "freed": 19, "flag": [19, 45, 296, 302], "purpos": [19, 20, 30, 32, 33, 35, 36, 37, 41, 42, 45, 173, 196, 434], "ensur": [19, 32, 36, 38, 41], "remain": [19, 30, 60, 173, 177, 217, 222, 362, 370, 382, 388], "access": [19, 20, 38], "who": [19, 27, 42, 60], "short": [19, 47, 320, 330], "basi": [19, 31, 46], "avoid": [19, 32, 34, 35, 45, 123, 173, 196], "situat": [19, 48], "alloc": [19, 60, 74, 89, 90, 93, 99, 123], "upon": [19, 30, 32, 40], "long": [19, 30, 320, 330], "period": 19, "whilst": [19, 48], "prevet": 19, "instead": [19, 29, 30, 32, 33, 37, 41, 43, 45, 46, 60], "unabl": 19, "communuti": 19, "obvious": 19, "never": 19, "reflect": [19, 36], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "respons": [19, 20, 40], "busi": 19, "sometim": 19, "fine": [19, 45, 48], "person": 19, "becaus": [19, 29, 32, 33, 34, 36, 38, 39, 41, 43, 47, 48, 60], "inact": 19, "limit": [19, 30, 32, 43, 46, 48, 60, 93, 110, 111, 233, 240, 241, 362, 363], "me": 19, "unfairli": 19, "definit": [19, 33, 38, 45, 333, 334, 335], "investig": 19, "newli": [19, 40, 71, 72, 93, 99, 233, 239], "repeat": [19, 29, 30, 34, 36, 233, 250, 362, 376], "yourself": [19, 59], "simpler": [19, 45], "cannot": [19, 38, 48], "alreadi": [19, 34, 41, 45, 60, 123, 173, 189, 197, 217, 232, 333, 346, 434], "receiv": [19, 32, 38, 39, 123, 132, 133, 233, 235, 272, 455, 465], "least": [19, 30, 33, 36, 333, 341], "final": [19, 29, 30, 33, 36, 38, 43, 45, 46, 74, 83, 84, 233, 253, 455, 466], "done": [19, 30, 32, 46], "tickbox": 19, "lower": [19, 30, 43, 74, 79, 89, 173, 215, 333, 334, 402, 406], "corner": 19, "without": [19, 28, 33, 36, 43, 45, 46, 47, 59, 60, 233, 277, 282, 362, 370, 382, 384, 414, 415, 418], "might": [19, 28, 32, 35, 43, 45, 46, 233, 247], "span": 19, "intent": 19, "larg": [19, 46, 173, 177, 217], "end": [19, 42, 59, 60, 74, 75, 173, 181, 434, 440], "gener": [19, 20, 27, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 59, 60, 71, 74, 75, 83, 84, 173, 222, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 302, 402, 403, 404, 406, 407, 419, 420, 434, 471, 475], "approach": [19, 32, 33, 45, 46, 60], "discourag": 19, "philosophi": 19, "increment": [19, 233, 265], "frequent": 19, "valuabl": 19, "infrequ": 19, "It": [19, 20, 27, 28, 29, 30, 36, 37, 40, 43, 45, 46, 47, 63, 66, 123, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 195, 196, 197, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 221, 222, 224, 225, 226, 227, 229, 230, 233, 241, 252, 358, 360, 362, 363, 366, 367, 368, 369, 371, 373, 374, 409, 410, 419, 420, 421, 431, 432, 433], "earli": [19, 434], "wast": 19, "spot": [19, 33], "mistak": 19, "propsal": 19, "mean": [19, 27, 30, 33, 37, 38, 39, 40, 43, 45, 46, 47, 48, 59, 60, 123, 152, 153, 154, 155, 167, 233, 249, 378, 379, 380, 381, 382, 388, 402, 405, 422, 446], "mountain": 19, "resolv": [19, 422, 427, 429], "around": [19, 33, 36, 41, 45, 60], "advoc": [19, 60], "individu": [19, 33], "per": [19, 46, 123, 320, 321, 322, 323, 324, 325, 326, 327, 455, 456, 457, 458, 459, 460, 461, 462], "style": [19, 409, 412], "ve": [19, 42, 45, 402, 403, 434], "were": [19, 28, 30, 32], "actual": [19, 27, 33, 40, 42, 45, 47, 60], "aim": [19, 42], "part": [19, 28, 31, 32, 33, 43, 44, 48, 59, 60, 74, 89, 90, 296, 299, 301, 303, 304, 305, 467, 468], "subsect": 19, "filepath": 19, "interact": [19, 434], "session": 19, "block": [19, 33, 42, 44, 48, 434], "smaller": [19, 43, 48, 362, 363, 371, 422, 427, 429], "manual": [19, 32, 47, 382, 383, 392, 393], "edit": 19, "exact": [19, 43, 414, 415], "beauti": 19, "hisotri": 19, "someth": [19, 28, 46, 47, 60], "particularli": [19, 46], "concern": [19, 27, 30, 40, 42], "abl": [19, 33, 38, 45, 48], "effici": [19, 32, 33, 40, 41, 43, 46, 60, 422, 423], "histori": 19, "too": [19, 60, 173, 177, 217], "difficult": [19, 32, 60, 414, 415, 418], "undo": 19, "stress": 19, "builder": [20, 58, 60, 434], "synchron": 20, "rest": [20, 44, 48], "remove_doc": 20, "_": [20, 29, 40, 45, 46, 296, 298, 299, 333, 357, 419, 420], "indic": [20, 44, 48, 63, 68, 173, 224, 233, 254, 255, 262, 275, 278, 279, 320, 321, 322, 323, 324, 325, 326, 327, 333, 356, 362, 371, 382, 383, 385, 387, 389, 390, 391, 393, 396, 397, 398, 399, 400, 401, 402, 403, 409, 410, 411, 412, 414, 415, 417, 419, 420, 421, 434, 437, 439, 455, 456, 457, 458, 459, 460, 461, 462, 467, 468], "privat": [20, 471, 475], "fulfil": [20, 42, 434], "autogenerated_sourc": 20, "3": [20, 30, 43, 45, 46, 47, 48, 73, 74, 82, 85, 88, 91, 92, 123, 168, 173, 177, 187, 195, 199, 204, 230, 233, 236, 284, 312, 315, 318, 319, 320, 321, 322, 325, 326, 327, 333, 334, 335, 336, 337, 340, 344, 351, 353, 354, 357, 358, 361, 362, 363, 364, 367, 369, 370, 371, 372, 373, 402, 403, 404, 408, 419, 420, 422, 423, 429, 431, 432, 434], "format": [20, 38, 39, 43, 45, 46, 93, 104, 108, 123, 143, 422, 423, 434], "png": [20, 46], "_imag": 20, "lastli": 20, "docstr": [20, 27, 28, 33, 41, 74, 85, 173, 177, 230, 333, 336, 362, 367, 371, 419, 420], "structur": [20, 28, 33, 36, 37, 46, 47, 233, 242, 382, 395], "rst": 20, "submodul": [20, 31, 32, 33, 39, 42, 43, 47, 434, 469, 470, 477, 478], "skip": [20, 32, 382, 395], "read": [20, 434], "configur": [20, 38, 382, 395], "partial_sourc": 20, "conf": 20, "copi": [20, 34, 38, 43, 45, 46, 59, 60, 74, 76, 80, 93, 99, 233, 243, 291, 292, 362, 370, 382, 384, 419, 421], "5": [20, 30, 45, 46, 47, 74, 82, 85, 88, 91, 92, 123, 159, 173, 177, 182, 187, 230, 312, 315, 320, 325, 326, 333, 334, 335, 336, 337, 340, 353, 354, 358, 361, 362, 363, 364, 367, 369, 370, 371, 372, 402, 403, 404, 408, 419, 420, 422, 423, 431, 432, 455, 466], "create_rst_fil": 20, "filter": [20, 320, 321, 322, 323, 324, 325, 326, 327, 455, 456, 457, 458, 459, 460, 461, 462], "recurs": [20, 33, 35, 37, 47, 60, 382, 383, 384, 392, 393, 394], "directori": [20, 233, 283], "repres": [20, 45, 74, 85, 93, 104, 109, 173, 176, 177, 179, 182, 191, 217, 226, 320, 329, 333, 349, 350], "its": [20, 29, 93, 100, 123, 167, 333, 341, 362, 366, 370, 371, 375], "overal": [20, 29, 37, 38, 39, 48], "markup": 20, "6": [20, 30, 45, 46, 47, 74, 82, 173, 177, 184, 230, 312, 315, 320, 327, 333, 335, 336, 337, 351, 353, 358, 361, 362, 363, 364, 367, 369, 370, 371, 372, 402, 403, 404, 422, 423], "extract": [20, 28], "get_functions_and_class": 20, "doctr": 20, "readm": [20, 60], "module_nam": 20, "copy_readme_to_rst": 20, "8": [20, 30, 42, 46, 173, 177, 312, 315, 320, 327, 333, 335, 336, 337, 353, 362, 363, 367, 369, 372, 402, 403, 404, 422, 423, 434, 455, 466], "tabl": 20, "content": [20, 40, 43, 46], "toc": 20, "tree": 20, "accord": [20, 33, 38, 93, 102, 110, 173, 177, 187, 217, 233, 254, 278, 279, 333, 355, 362, 365, 377, 422, 428, 430], "append": [20, 32, 43, 46, 173, 185, 333, 337, 341], "append_toctree_to_rst": 20, "9": [20, 30, 46, 47, 173, 177, 184, 296, 298, 299, 303, 320, 327, 333, 335, 336, 351, 353, 362, 363, 367, 371, 372, 402, 403, 404, 422, 423, 471, 472, 473], "index": [20, 33, 45, 73, 74, 79, 85, 233, 254, 255, 362, 374, 382, 385, 386, 389, 390, 391, 396, 398, 409, 410, 411, 412, 414, 415, 416, 419, 420, 437, 439], "create_index_rst": 20, "14": [20, 30, 333, 353, 362, 369, 402, 404, 422, 423], "\u03c0": [20, 173, 175, 178, 180, 181], "namespac": [20, 28, 38, 43, 48], "remov": [20, 29, 32, 33, 38, 40, 48, 333, 337, 341, 354, 362, 373, 378, 379, 380], "debug_mod": 21, "set_breakpoint_debug_mod": 21, "set_debug_mod": 21, "debug_mode_in": [21, 24], "except": [21, 24, 33, 38, 39, 40, 45, 60, 93, 101, 233, 238, 247, 293, 333, 347, 362, 364, 374, 409, 412, 431, 432, 433], "set_exception_debug_mod": 21, "unset_debug_mod": 21, "debugg": [22, 23, 24, 25, 26], "mainli": [27, 44, 46], "place": [27, 28, 29, 30, 32, 33, 39, 41, 48, 74, 75, 76, 77, 78, 79, 81, 82, 86, 87, 88, 91, 92, 123, 168, 173, 177, 230, 233, 264, 265, 266, 333, 336, 362, 367, 369, 371, 419, 420, 471, 472, 473, 474, 475, 476], "target": [27, 42, 46, 47, 48, 123, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 434], "under": [27, 29, 30, 32, 33, 37, 42, 43, 46, 48], "hood": [27, 30, 32, 33, 37, 42, 43, 46, 48], "outlin": [27, 32, 33, 45], "weed": [27, 42], "behind": [27, 42, 44, 296, 299, 301, 303, 304, 305], "navig": 27, "quick": [27, 47], "tour": 27, "primari": [27, 32, 34, 40, 60], "composit": [27, 32, 34, 36, 43, 47, 48, 60], "mix": [27, 30, 32, 43, 93, 115, 173, 177, 320, 327, 333, 353, 358, 361, 422, 425], "nestabl": [27, 29, 30, 32, 37, 40], "wrap": [27, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 48, 60, 233, 239, 296, 310], "dynam": [27, 38, 39, 40, 43, 71, 72], "runtim": [27, 32], "thei": [27, 28, 30, 33, 37, 38, 39, 40, 45, 46, 47, 48, 60, 378, 379, 380, 402, 403, 434, 477, 478], "handl": [27, 32, 33, 35, 38, 39, 40, 41, 47, 60, 71, 72, 123, 139, 140, 141, 143, 159, 162, 169, 172, 296, 299, 301, 303, 304, 305, 471, 472, 473, 474, 475, 476], "correct": [27, 33, 37, 38, 39, 41, 362, 363, 422, 428, 430, 434], "h": [27, 312, 313, 314, 315, 317, 319, 320, 323, 324, 325, 326, 327], "inplac": [27, 30, 35, 36, 41, 45, 47, 233, 238, 263, 267, 288, 296, 299, 301, 303, 304, 305, 444, 445, 471, 472, 473, 474, 475, 476], "output": [27, 28, 29, 30, 32, 33, 36, 39, 40, 41, 43, 45, 47, 48, 60, 63, 66, 74, 75, 77, 78, 79, 81, 82, 85, 87, 88, 91, 92, 123, 132, 133, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 195, 196, 197, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 221, 222, 224, 225, 226, 227, 229, 230, 233, 239, 241, 245, 252, 254, 296, 300, 320, 322, 324, 326, 328, 330, 331, 332, 333, 354, 358, 360, 362, 363, 366, 367, 368, 369, 371, 373, 374, 376, 402, 404, 405, 406, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466], "j": [27, 233, 236, 333, 354, 422, 423], "k": [27, 43, 74, 79, 89, 90, 233, 236, 320, 332, 333, 341, 348, 350, 351, 352, 354, 402, 405, 406, 409, 412], "l": [27, 333, 334, 338, 341, 354], "borrow": 27, "n": [27, 74, 85, 89, 90, 320, 328, 333, 337, 341, 343, 344, 345, 346, 347, 348, 351, 352, 354, 355, 356, 357, 362, 365, 366, 368, 374, 377, 402, 405, 406, 409, 412, 422, 425, 428, 429, 430, 431, 432, 433], "categori": [28, 36, 37, 38, 42, 434], "taken": [28, 48, 333, 337], "constant": [28, 33, 47, 48, 123, 132, 133, 358, 359, 362, 365, 382, 388, 400, 401, 446, 447, 451, 454, 467, 468, 469, 470], "creation": [28, 38, 39, 43, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], "data_typ": [28, 38, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], "elementwis": [28, 33, 43, 48, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232], "linear_algebra": [28, 45, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], "sort": [28, 333, 338, 351, 352, 420], "statist": [28, 38, 423, 424, 425, 426, 427, 428, 429, 430], "util": [28, 39, 123, 156, 432, 433], "activ": [28, 47, 64, 65, 66, 67, 68, 69, 70, 434, 442, 443], "compil": [28, 42, 44, 60, 434, 467, 468, 471, 472, 473, 474, 475, 476], "gradient": [28, 46, 47, 59, 60, 123, 167, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 378, 379, 380, 381, 434, 471, 472, 473, 474, 475, 476], "loss": [28, 33, 46, 47, 48, 359, 360, 361, 434], "meta": [28, 379, 380, 381], "nest": [28, 33, 37, 45, 46, 47, 60, 123, 147, 151, 155, 233, 290, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 467, 468, 471, 472, 473, 474, 475, 476], "norm": [28, 233, 240, 241, 333, 342, 356, 401, 434, 470, 471, 473], "random": [28, 39, 48, 59, 403, 404, 405, 406, 407, 408, 434], "overlap": 28, "sever": [28, 60, 333, 340], "judgement": 28, "suitabl": [28, 37], "alwai": [28, 33, 36, 40, 41, 43, 45, 93, 99, 173, 177, 217, 233, 266, 296, 302, 307], "suggest": 28, "locat": [28, 32, 39, 402, 403], "matmul": [28, 43, 333, 351, 434], "some_namespac": 28, "insid": [28, 38], "some_backend": 28, "another_backend": 28, "break": [28, 41, 45, 434], "anyth": 28, "refactor": 28, "ongo": 28, "subfold": [28, 32], "via": [28, 34, 37, 38, 39, 40, 43, 45, 46, 59, 382, 383, 392, 393], "file_nam": 28, "defin": [28, 29, 38, 41, 45, 47, 60, 173, 217, 222, 233, 275, 333, 335, 338, 350, 402, 404, 422, 424, 425, 426], "my_func": [28, 30], "union": [28, 30, 33, 36, 38, 39, 40, 41, 43, 48, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 122, 123, 139, 140, 141, 143, 148, 149, 150, 151, 156, 162, 164, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 240, 241, 243, 244, 245, 248, 249, 250, 252, 253, 254, 255, 259, 261, 262, 266, 275, 278, 279, 284, 285, 290, 291, 292, 294, 295, 296, 309, 312, 316, 318, 319, 320, 321, 325, 327, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 383, 384, 393, 394, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433], "nativearrai": [28, 30, 33, 36, 38, 40, 41, 43, 45, 48, 63, 65, 66, 67, 68, 69, 70, 74, 75, 76, 78, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 99, 100, 101, 108, 110, 111, 113, 114, 115, 123, 143, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 240, 241, 243, 244, 245, 248, 249, 250, 252, 253, 254, 255, 259, 261, 262, 266, 275, 278, 279, 284, 290, 291, 292, 294, 295, 296, 309, 312, 316, 318, 319, 320, 321, 325, 327, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 384, 394, 402, 403, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433], "ax": [28, 30, 38, 45, 123, 167, 333, 342, 350, 353, 356, 362, 365, 367, 368, 371, 373, 375, 377, 409, 410, 411, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "int": [28, 30, 33, 38, 39, 41, 48, 63, 68, 71, 72, 74, 77, 79, 81, 82, 83, 84, 87, 89, 90, 91, 93, 101, 107, 109, 110, 111, 114, 123, 148, 149, 150, 151, 159, 160, 161, 167, 233, 244, 245, 248, 249, 250, 253, 254, 259, 275, 278, 279, 284, 285, 294, 312, 316, 318, 320, 321, 325, 327, 333, 335, 337, 353, 354, 355, 356, 358, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 382, 394, 402, 403, 404, 405, 406, 407, 409, 410, 411, 419, 420, 421, 422, 424, 425, 426, 428, 429, 430, 431, 432, 433], "tupl": [28, 38, 39, 41, 45, 46, 47, 60, 71, 72, 74, 76, 77, 81, 86, 87, 91, 93, 101, 233, 253, 285, 312, 318, 320, 327, 333, 344, 347, 351, 353, 356, 362, 364, 365, 367, 368, 371, 373, 374, 377, 382, 384, 385, 387, 389, 390, 391, 393, 394, 396, 397, 398, 399, 402, 404, 405, 406, 409, 412, 414, 415, 416, 417, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "dtype": [28, 30, 33, 38, 39, 45, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 91, 92, 93, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 122, 173, 187, 233, 236, 275, 312, 315, 409, 410, 419, 421, 422, 423, 427, 428, 429, 431, 432, 434], "nativedtyp": [28, 38, 39, 41, 74, 75, 76, 77, 78, 79, 81, 82, 86, 87, 88, 91, 92, 93, 98, 106, 107, 108, 422, 429], "nativedevic": [28, 39, 41, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 91, 92, 123, 140, 141, 156, 162, 164, 168, 169, 172, 233, 254, 255, 275, 278, 279, 402, 403, 404, 405, 406], "my": 28, "cool": 28, "special": [28, 29, 30, 36, 41, 173, 174, 175, 176, 177, 178, 179, 180, 181, 189, 190, 191, 195, 196, 197, 206, 207, 209, 210, 217, 221, 222, 224, 225, 226, 227, 230, 232, 422, 424, 425, 426, 428, 429, 430], "nan": [28, 29, 73, 93, 99, 173, 174, 175, 176, 177, 178, 179, 180, 181, 189, 190, 191, 195, 196, 197, 201, 203, 206, 207, 209, 210, 217, 221, 222, 225, 226, 227, 230, 232, 233, 261, 295, 414, 415, 418, 422, 424, 425, 426, 428, 429, 430, 431, 432, 433], "y": [28, 30, 43, 45, 63, 65, 66, 67, 68, 69, 70, 74, 81, 82, 85, 87, 88, 92, 93, 99, 123, 143, 159, 173, 177, 181, 184, 187, 189, 190, 195, 215, 216, 230, 233, 236, 243, 252, 290, 291, 292, 296, 300, 312, 319, 320, 327, 329, 333, 334, 335, 336, 340, 353, 354, 358, 360, 361, 362, 363, 364, 366, 367, 369, 370, 371, 372, 402, 403, 404, 405, 406, 408, 409, 411, 413, 419, 420, 422, 423, 428, 429, 431, 432], "els": [28, 33, 34, 40, 43, 45, 47, 48, 233, 238, 247, 251, 382, 392], "input": [28, 29, 30, 32, 33, 36, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 78, 80, 82, 85, 86, 88, 89, 90, 92, 93, 99, 100, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 123, 132, 133, 143, 144, 147, 148, 151, 155, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 259, 261, 262, 264, 265, 266, 268, 269, 270, 271, 284, 285, 288, 290, 291, 292, 294, 295, 296, 300, 302, 307, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 400, 401, 402, 403, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470], "numer": [28, 47, 74, 85, 93, 99, 173, 174, 177, 189, 192, 196, 197, 198, 201, 202, 203, 204, 212, 213, 217, 218, 219, 221, 222, 224, 229, 232, 233, 257, 258, 280, 281, 286, 287, 333, 335, 341, 346, 351, 353, 354, 355, 402, 408, 409, 410, 411, 422, 424, 427, 429, 446], "along": [28, 40, 74, 83, 84, 123, 148, 149, 150, 151, 152, 153, 154, 155, 167, 233, 244, 245, 254, 294, 312, 316, 333, 342, 354, 355, 356, 358, 360, 361, 362, 364, 367, 369, 371, 372, 374, 376, 378, 379, 380, 381, 402, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "result": [28, 29, 30, 32, 36, 37, 38, 40, 41, 46, 63, 66, 74, 75, 93, 115, 123, 132, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 241, 245, 252, 254, 278, 279, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 333, 334, 337, 342, 351, 356, 358, 360, 362, 363, 366, 367, 368, 369, 371, 373, 374, 382, 395, 409, 410, 411, 414, 415, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "broadcast": [28, 29, 30, 38, 63, 66, 93, 100, 101, 123, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 224, 225, 226, 227, 229, 230, 233, 241, 252, 333, 341, 342, 344, 347, 350, 355, 356, 358, 360, 362, 363, 366, 367, 368, 369, 371, 373, 374, 409, 410, 411, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "cooler": 28, "keyword": [28, 38, 39, 40, 41, 46, 74, 85, 123, 132, 133, 147, 151, 155, 233, 235, 272, 382, 388, 422, 429, 467, 468], "hint": [28, 29, 33, 36, 40, 41, 74, 85, 173, 177, 230, 333, 336, 362, 367, 369, 371, 419, 420], "produc": [28, 123, 132, 133], "featur": [28, 41, 46, 434], "something_cool": 28, "category_nam": [29, 33, 38, 39, 41], "thorough": [29, 32, 41], "contrast": [29, 41], "backend_nam": [29, 33, 34, 35, 38, 39, 41], "account": 29, "instanti": 29, "tan": [29, 33, 37, 40, 41, 43, 173, 419, 420, 434], "firstli": [29, 30, 33, 36, 38, 46], "correspond": [29, 30, 31, 33, 36, 37, 38, 93, 100, 173, 181, 221, 333, 335, 338, 350, 362, 364, 371, 402, 403, 409, 410, 411, 414, 415, 416, 418, 422, 427, 428, 429, 430], "templat": [29, 434], "found": [29, 36, 37], "spec": [29, 30], "api_specif": [29, 419, 420], "array_api": 29, "approxim": [29, 63, 64, 173, 175, 176, 178, 179, 180, 181, 190, 191, 195, 196, 206, 207, 208, 209, 221, 225, 226, 230, 333, 344, 347], "tangent": [29, 63, 70, 173, 180, 181, 182, 230, 231], "domain": [29, 173, 175, 176, 178, 179, 180, 181, 190, 191, 195, 196, 206, 207, 209, 225, 226, 227, 230], "infin": [29, 73, 93, 99, 173, 174, 176, 177, 179, 180, 181, 189, 190, 191, 195, 196, 197, 198, 201, 202, 206, 207, 209, 210, 217, 221, 222, 225, 226, 227, 230, 232, 333, 356, 422, 424, 426, 431, 432, 433], "codomain": [29, 173, 175, 176, 178, 179, 180, 181, 190, 191, 195, 196, 206, 207, 209, 225, 226, 227, 230], "element": [29, 43, 48, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 81, 82, 89, 90, 123, 146, 150, 154, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 240, 241, 244, 245, 252, 262, 291, 292, 320, 328, 333, 335, 338, 341, 348, 351, 362, 363, 367, 369, 371, 372, 373, 402, 403, 409, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 455, 463], "x_i": [29, 173, 174, 175, 176, 178, 179, 180, 184, 189, 190, 191, 195, 196, 197, 201, 202, 203, 206, 207, 209, 212, 224, 225, 226, 227, 228, 230, 232, 414, 415, 418, 422, 424, 425, 426, 428, 429, 430], "assum": [29, 38, 45, 46, 60, 74, 85, 173, 177, 190, 225, 230, 333, 336, 362, 367, 369, 371, 419, 420], "express": [29, 43, 48, 173, 175, 178, 180, 181, 190, 225, 230], "radian": [29, 173, 175, 178, 180, 181, 190, 225, 230], "float": [29, 33, 38, 45, 47, 63, 65, 73, 74, 75, 77, 79, 81, 82, 84, 87, 91, 93, 99, 106, 110, 113, 115, 123, 156, 162, 169, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 189, 190, 191, 192, 195, 196, 197, 206, 207, 209, 210, 217, 221, 222, 225, 226, 227, 230, 232, 233, 240, 241, 253, 257, 258, 280, 281, 286, 287, 312, 314, 319, 320, 327, 333, 334, 336, 338, 339, 340, 344, 347, 348, 350, 351, 356, 358, 360, 361, 402, 405, 406, 414, 415, 418, 422, 424, 425, 426, 427, 428, 429, 430], "operand": [29, 173, 175, 176, 177, 178, 179, 180, 181, 189, 190, 191, 195, 196, 197, 206, 207, 209, 210, 217, 221, 222, 225, 226, 227, 230, 232, 422, 423, 424, 426, 429], "whose": [29, 74, 89, 90, 173, 176, 179, 182, 190, 191, 221, 225, 226, 230, 233, 239, 333, 334, 336, 337, 338, 339, 340, 344, 345, 346, 347, 348, 350, 351, 352, 354, 362, 367, 371, 414, 415, 416, 422, 423], "ref": [29, 173, 187, 204, 217, 219, 222, 229, 362, 374], "promot": [29, 33, 38, 93, 99, 102, 115, 173, 175, 176, 177, 178, 179, 180, 182, 183, 185, 186, 187, 188, 190, 191, 192, 195, 196, 206, 207, 209, 210, 214, 217, 221, 222, 225, 226, 227, 230, 333, 334, 335, 340, 341, 344, 346, 347, 350, 355, 356, 362, 374, 422, 425], "But": [29, 48], "needless": 29, "duplic": [29, 34, 35, 45, 47], "info": [29, 434], "subset": [29, 32, 41, 43], "behaviour": [29, 32, 36, 40, 41, 45], "extend": [29, 32, 34, 41], "renam": 29, "conform": [29, 74, 85, 173, 177, 196, 230, 333, 336, 362, 367, 369, 371, 419, 420], "org": [29, 296, 298, 299, 419, 420], "elementwise_funct": [29, 419, 420], "explan": [29, 41, 45], "both": [29, 30, 33, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 173, 221, 333, 335, 341, 355], "descript": [29, 74, 85, 173, 177, 230, 333, 336, 356, 362, 367, 369, 371, 419, 420], "simplic": [29, 47, 59, 74, 85, 173, 177, 230, 333, 336, 362, 367, 369, 371, 419, 420], "instanc": [29, 30, 32, 33, 36, 38, 40, 41, 46, 47, 48, 74, 85, 123, 132, 164, 173, 177, 230, 233, 266, 333, 335, 336, 353, 358, 361, 362, 363, 367, 369, 371, 372, 419, 420, 431, 432, 444, 445], "judgment": 29, "after": [30, 38, 42, 173, 227, 296, 299, 300, 301, 303, 304, 305, 312, 313, 316, 400, 401, 471, 472, 473, 474, 475, 476], "func_nam": [30, 33], "cover": [30, 33, 35, 42], "variant": 30, "independ": [30, 31, 43, 48, 333, 335, 350, 402, 403], "combinatorili": 30, "equal": [30, 37, 38, 74, 79, 81, 82, 93, 99, 173, 185, 187, 201, 202, 221, 233, 234, 236, 237, 333, 337, 344, 347, 362, 363, 365, 372, 377, 402, 406, 414, 415, 418, 419, 420, 421, 422, 425, 428, 429, 430], "maximum": [30, 43, 46, 48, 123, 147, 151, 155, 167, 173, 233, 240, 241, 253, 296, 303, 362, 363, 382, 394, 409, 410, 422, 424, 426, 434], "variat": [30, 32], "grid": [30, 32, 59, 74, 85], "across": [30, 32, 33, 37, 38, 41, 123, 132, 133, 144, 145, 147, 148, 149, 150, 151, 155, 165, 166, 233, 236, 237, 382, 388, 409, 411], "vari": [30, 32, 37, 45, 414, 415, 418], "valu": [30, 32, 33, 38, 39, 41, 43, 45, 48, 60, 74, 75, 79, 81, 82, 83, 84, 93, 99, 105, 106, 107, 123, 135, 142, 166, 167, 173, 174, 175, 177, 178, 180, 189, 193, 194, 197, 198, 199, 200, 204, 205, 215, 216, 217, 219, 220, 221, 223, 232, 233, 240, 241, 242, 247, 253, 254, 255, 260, 263, 267, 277, 278, 279, 280, 281, 282, 295, 296, 298, 299, 300, 303, 307, 311, 312, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 332, 333, 344, 347, 348, 349, 350, 351, 352, 356, 362, 363, 365, 369, 370, 377, 378, 379, 380, 382, 386, 387, 388, 389, 390, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 455, 456, 457, 458, 459, 460, 461, 462, 466, 467, 468, 469, 470, 471, 472, 473, 475], "simplest": 30, "small": [30, 33, 43, 47, 173, 217, 333, 344, 347, 358, 359, 400, 401, 469, 470], "dimens": [30, 43, 46, 63, 68, 74, 89, 90, 123, 154, 233, 248, 249, 250, 253, 259, 275, 294, 312, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 347, 348, 350, 351, 352, 354, 355, 356, 358, 360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 402, 408, 409, 410, 411, 412, 414, 415, 416, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 455, 456, 457, 458, 459, 460, 461, 462, 465, 466], "unus": [30, 40, 71, 72], "highlight": 30, "extra": [30, 35, 36, 43, 296, 300], "versatil": 30, "excess": [30, 34, 45], "combin": [30, 32, 33, 36, 37, 48, 312, 318, 333, 335, 422, 423], "non": [30, 37, 38, 43, 71, 72, 93, 99, 112, 173, 212, 213, 333, 336, 344, 351, 353, 355, 356, 409, 410, 411, 412, 422, 424, 425, 426, 427, 430, 431, 432, 433, 467, 468, 471, 475], "__add__": [30, 36, 37, 41, 45], "__sub__": [30, 36, 37, 41, 45], "__mul__": [30, 36, 37, 41, 45], "__truediv__": [30, 36, 37], "subtract": [30, 36, 173], "multipli": [30, 36, 173, 233, 244, 422, 423], "divid": [30, 36, 173, 198, 233, 286, 362, 372], "respect": [30, 36, 37, 38, 41, 74, 85, 173, 174, 177, 181, 183, 185, 186, 187, 188, 192, 193, 198, 199, 200, 204, 205, 210, 211, 213, 214, 217, 219, 222, 229, 296, 298, 299, 300, 301, 303, 304, 305, 333, 348, 378, 379, 380, 381], "respecitv": 30, "meant": 30, "imaginari": 30, "std": [30, 402, 405, 422], "prod": [30, 38, 233, 249, 422], "var": [30, 43, 378, 379, 380, 422], "some_flag": 30, "bool": [30, 38, 48, 71, 72, 74, 81, 93, 99, 102, 105, 106, 107, 108, 112, 113, 114, 122, 123, 142, 143, 158, 167, 170, 173, 193, 199, 200, 201, 202, 203, 204, 205, 211, 212, 213, 219, 233, 234, 236, 237, 244, 247, 251, 253, 259, 261, 268, 269, 270, 271, 284, 294, 295, 296, 307, 333, 334, 342, 351, 356, 362, 372, 382, 383, 384, 388, 392, 393, 394, 402, 403, 409, 410, 411, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "another_flag": 30, "true": [30, 32, 33, 37, 38, 43, 45, 46, 47, 48, 63, 64, 71, 72, 74, 83, 93, 99, 102, 123, 173, 199, 201, 202, 203, 204, 212, 213, 233, 234, 236, 238, 239, 251, 253, 261, 262, 284, 290, 292, 295, 296, 299, 301, 302, 303, 304, 305, 307, 320, 328, 333, 334, 342, 351, 356, 358, 359, 360, 361, 362, 372, 378, 379, 380, 381, 382, 383, 392, 393, 395, 402, 403, 409, 410, 411, 413, 414, 415, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 455, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "axi": [30, 33, 38, 41, 43, 45, 48, 59, 63, 68, 74, 83, 84, 123, 125, 128, 135, 148, 149, 150, 151, 152, 153, 154, 155, 167, 233, 244, 245, 254, 294, 312, 316, 333, 335, 337, 355, 356, 358, 360, 361, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 402, 408, 409, 410, 411, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "54": [30, 173, 190, 422, 423], "jointli": 30, "three": [30, 42, 74, 85, 434], "x0": [30, 233, 236], "x1": [30, 41, 173, 177, 181, 183, 185, 186, 187, 188, 192, 193, 198, 199, 200, 204, 205, 210, 211, 213, 214, 215, 216, 217, 219, 221, 222, 229, 233, 236, 320, 325, 333, 335, 341, 346, 350, 353, 355, 409, 413], "x2": [30, 41, 173, 177, 181, 183, 185, 186, 187, 188, 192, 193, 198, 199, 200, 204, 205, 210, 211, 213, 214, 215, 216, 217, 219, 221, 222, 229, 320, 325, 333, 335, 341, 346, 350, 353, 355, 409, 413], "procedur": 30, "think": 30, "sens": [30, 45], "5574077": 30, "1850398": 30, "5463025": 30, "8422884": 30, "91601413": 30, "9647598": 30, "3738229": 30, "1597457": 30, "0963247": 30, "9955841": 30, "3278579": 30, "multi": [30, 42, 60, 320, 331, 333, 335, 422, 423, 434, 440, 455, 466], "seper": [30, 36, 233, 253], "pars": [30, 60], "satisfi": [30, 333, 357], "ignor": [30, 60, 74, 85, 382, 393, 471, 475], "far": [30, 39, 44, 45, 382, 383, 393], "asid": [30, 59], "irrelev": [30, 38], "increasingli": 30, "complex": [30, 46, 47, 48, 333, 338, 351], "shown": [30, 41, 43, 45, 74, 85, 173, 177, 230, 333, 336, 362, 367, 369, 371, 419, 420], "rule": [30, 32, 33, 36, 37, 38, 93, 99, 102, 115, 173, 182, 187, 192, 217, 222, 333, 334, 335, 346, 350], "count": [30, 46, 123, 159, 333, 355, 362, 367, 414, 415, 416, 431, 432, 433], "14254655": 30, "1578213": 30, "380515": 30, "11": [30, 173, 177, 362, 367, 369, 402, 404, 422, 423], "12": [30, 233, 258, 333, 353, 362, 367, 369, 371, 402, 404, 422, 423], "shift": [30, 41, 173, 185, 187, 362, 371], "sequenc": [30, 59, 123, 132, 133, 233, 237, 272, 312, 318, 362, 372, 374, 455, 464, 469, 470, 477, 478], "15": [30, 333, 353, 362, 369, 371, 402, 404, 422, 423], "bit": [30, 33, 36, 45, 93, 109, 110, 111, 173, 184, 185, 187, 312, 314, 319, 422, 427, 429], "trivial": 30, "By": [30, 33, 47, 48, 233, 244, 245, 333, 355, 362, 369, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "demonstr": [30, 45], "float32": [30, 38, 93, 97, 98, 312, 315], "z": [30, 43, 45, 123, 159, 173, 177, 233, 236, 333, 335, 358, 360, 422, 423], "dictat": [30, 40, 41], "13": [30, 320, 327, 362, 369, 402, 404, 422, 423], "docst": 30, "ever": 30, "unsur": 30, "unit": [31, 32, 63, 64, 65, 66, 123], "test_array_api": [31, 32], "push": 31, "thoroughli": [31, 32], "On": [32, 44, 48], "map": [32, 33, 37, 41, 46, 59, 60, 123, 132, 382, 389, 390, 394, 395, 434, 455, 466], "collect": [32, 59, 63, 71, 123, 233, 296, 312, 320, 358, 382, 395, 400, 402, 441, 455, 469, 471], "test_ivi": 32, "serv": [32, 33, 36, 37, 41, 42, 434], "properti": [32, 33, 37, 45, 46, 47, 123, 135, 467, 468, 471, 472, 473, 474, 476], "pytest": 32, "fixtur": 32, "ones": [32, 43, 45, 46, 74, 79, 88, 233, 275, 312, 318, 434], "commit": 32, "consum": [32, 41, 123], "300": 32, "ab": [32, 173, 221, 333, 356, 434], "hit": [32, 43], "permit": [32, 36, 41], "action": 32, "eleg": 32, "intellig": 32, "sampl": [32, 312, 313, 316, 320, 328, 402, 403, 405, 406, 422, 428, 430, 455, 463], "rang": [32, 46, 47, 48, 74, 75, 83, 84, 422, 427, 429, 434], "previou": [32, 41, 48, 296, 299, 303], "cach": [32, 33, 123, 141, 233, 239], "select": [32, 43, 45, 48], "unexplor": 32, "known": 32, "repeatedli": [32, 382, 391], "upload": 32, "artifact": 32, "ci": 32, "parametr": 32, "strategi": 32, "statement": [32, 60], "plai": [32, 48], "todo": 32, "helper": [32, 46], "arbitrari": [32, 33, 37, 41, 47, 60, 74, 85, 93, 100, 115, 123, 152, 153, 155], "verifi": [32, 38, 39, 45, 434, 440], "truth": [32, 173, 193, 199, 200, 204, 205, 219], "opt": [32, 45], "defer": [32, 33, 36, 37, 38, 39], "well": [32, 40, 47, 48, 59, 233, 261, 333, 350], "suffic": [32, 35], "catch": [32, 233, 247], "bug": 32, "systemat": 32, "compar": [32, 46, 233, 234, 236, 237, 414, 415, 418, 419, 420, 421], "safeguard": 32, "inabl": 32, "leav": [32, 33, 35, 37, 38, 40, 41, 46, 47, 362, 374, 382, 383, 384, 392, 393, 394], "fact": [32, 46], "num_gpu": [32, 39, 123], "four": [33, 38, 41, 46], "categor": [33, 39], "mutual": [33, 37], "exclus": [33, 37, 48, 74, 75, 233, 244, 268, 269, 271, 296, 302, 402, 404], "consitut": 33, "venn": 33, "diagram": 33, "lowest": [33, 60, 382, 394, 402, 404], "light": [33, 60], "wherea": [33, 36, 38, 39, 41, 48], "hand": [33, 60], "themselv": [33, 38, 39, 47, 382, 383], "cross_entropi": [33, 358, 361], "pred": [33, 358, 359, 360, 361], "epsilon": [33, 47, 296, 298, 299, 303, 333, 344, 347, 358, 359, 360, 361, 400, 401, 469, 470, 471, 472, 473], "1e": [33, 47, 48, 233, 258, 296, 298, 299, 303, 333, 351, 358, 359, 360, 361, 434, 471, 472, 473, 474, 476], "clip": [33, 43, 46, 48, 173, 215, 216, 233, 240, 241, 362, 434], "log_pr": 33, "log": [33, 43, 46, 74, 84, 173, 208, 210, 333, 349, 358, 359, 434], "neg": [33, 63, 65, 74, 75, 79, 173, 201, 202, 217, 221, 222, 333, 351, 355, 356, 362, 367, 371, 431, 432, 433], "sum": [33, 38, 43, 123, 152, 153, 154, 155, 167, 173, 177, 210, 233, 245, 249, 278, 279, 333, 351, 354, 356, 422, 423, 428], "explicitli": [33, 36, 40, 43, 60, 333, 338, 455, 464, 466, 467, 468], "set_framework": [33, 43, 45, 46, 48, 434], "array_arg": 33, "typic": 33, "though": [33, 46, 60], "whatsoev": 33, "standlon": 33, "commonli": [33, 422, 428, 430], "outsid": [33, 39, 43, 45, 48, 362, 363, 374], "cache_fn": [33, 233], "stable_divid": [33, 233], "denomin": [33, 60, 233, 252, 258, 281, 286, 287, 400, 401, 469, 470], "divis": [33, 173, 187, 192, 198, 222, 233, 252, 258, 281, 286, 287, 296, 298, 299, 303, 471, 472, 473], "leaf": [33, 46, 382, 383, 392, 393], "piec": [33, 35, 36, 43], "deal": [33, 60], "batch": [33, 37, 46, 123, 165, 166, 233, 253, 312, 317, 320, 329, 333, 356, 378, 379, 380, 381, 400, 401, 469, 470], "concurr": 33, "weight": [33, 37, 47, 48, 296, 298, 299, 301, 303, 304, 305, 320, 329, 330, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 467, 468, 471, 473, 474], "modif": 33, "_wrap_funct": [33, 35], "appear": [33, 38, 39, 40, 45, 362, 366], "non_wrapped_funct": [33, 38, 39, 40], "dure": [33, 38, 39, 40, 60, 71, 72, 233, 293, 296, 298, 299, 303, 333, 341, 378, 379, 380, 381, 422, 428, 430, 467, 468, 471, 472, 473, 475], "static": [33, 60, 71, 72], "group": [33, 37, 312, 318], "briefli": [33, 46], "can_cast": [33, 38, 93], "cast": [33, 38, 93, 99, 102, 312, 314, 319, 362, 364, 422, 427, 429, 434], "set_default_dtyp": [33, 38, 93], "default_dtyp": [33, 38, 93], "get_all_arrays_on_dev": [33, 39, 123], "nested_map": [33, 382], "index_nest": [33, 382], "feel": [33, 42], "quit": [33, 35, 36], "store": [34, 36, 37, 43, 45, 46, 47, 233, 253, 296, 310, 333, 354, 362, 372, 467, 468], "__dict__": [34, 43, 45], "ivy_original_dict": [34, 43], "string": [34, 38, 39, 43, 46, 93, 97, 98, 108, 112, 122, 123, 139, 140, 141, 156, 162, 168, 169, 172, 233, 246], "unmodifi": [34, 38], "loop": [34, 60, 378, 379, 380, 381], "solv": [34, 44, 59, 333], "achiev": [35, 46, 48], "_wrap_or_unwrap_funct": 35, "_function_wrap": 35, "logic": [35, 36, 38, 39, 45, 173, 211, 212, 213, 431, 432, 433, 434], "independenli": 35, "topic": [35, 45], "tf": [36, 38, 39, 40, 41, 43, 48, 60, 434], "empti": [36, 38, 39, 74, 75, 422, 428, 429, 431, 432, 433], "overwritten": 36, "wrapper": [36, 40, 41, 45], "self": [36, 43, 45, 46, 47, 48, 434, 471, 475], "_data": [36, 45], "organiz": [36, 37], "inherit": [36, 37, 45], "arraywithelementwis": 36, "intern": [36, 37, 39, 123, 296, 310, 382, 383, 392, 393, 446, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 477, 478], "underpin": [36, 37, 43], "programmat": [36, 37], "backup": [36, 37], "accident": [36, 37], "readabl": [36, 37, 41, 45, 46], "absent": [36, 37], "perk": [36, 37], "auto": [36, 37, 46], "__setitem__": [36, 37, 45], "sin": [36, 43, 173, 233, 253, 434], "throw": [36, 45], "agnost": [36, 41, 43, 45, 48, 60, 434], "imposs": 36, "chain": [36, 37, 47, 48, 60, 378, 379, 380, 382, 395, 477, 478], "coupl": [36, 45, 47], "anywai": 36, "secondli": [36, 38], "dicat": [36, 41], "five": [37, 46], "all_tru": [37, 46], "evalu": [37, 173, 195, 196, 206, 207, 208, 209, 218, 224, 228, 382, 383, 392, 393, 431, 432, 433], "boolean": [37, 74, 81, 93, 99, 112, 122, 123, 158, 170, 173, 183, 184, 186, 188, 211, 212, 213, 214, 233, 234, 236, 237, 261, 262, 263, 267, 268, 269, 270, 271, 288, 295, 296, 302, 378, 379, 380, 382, 392, 422, 426], "to_iter": 37, "travers": [37, 43, 45, 382, 394], "containerbas": 37, "decis": [37, 43, 45], "bind": 37, "multi_map": 37, "diff": [37, 46], "displai": [37, 46], "common_key_chain": 37, "recap": [37, 47], "arbitrarili": [37, 46], "multi_map_in_static_method": 37, "static_add": 37, "static_tan": 37, "static_rol": 37, "roll": [37, 41, 362], "containerwithelementwis": 37, "__repr__": 37, "control": [37, 38, 40, 45, 46, 59], "__getattr__": 37, "kei": [37, 46, 123, 135, 233, 242, 320, 331, 332, 378, 379, 380, 382, 385, 391, 395, 444, 445, 455, 466, 471, 475], "underli": [37, 173, 183, 186, 188, 214], "queri": [37, 38, 45, 123, 156, 166, 320, 331, 332, 455, 466], "attribut": [37, 38, 44, 45, 46, 47, 93, 110, 111], "__setattr__": 37, "__getitem__": 37, "__contains__": 37, "__getstate__": 37, "__setstate__": 37, "pickl": [37, 46], "unpickl": 37, "static_subtract": 37, "static_multipli": 37, "static_divid": 37, "int8": 38, "int16": [38, 422, 427, 429], "int32": [38, 422, 423, 427, 429], "int64": [38, 173, 187, 422, 427, 429], "uint8": [38, 312, 314, 319], "uint16": [38, 422, 427, 429], "uint32": [38, 422, 427, 429], "uint64": [38, 422, 427, 429], "bfloat16": 38, "float16": 38, "float64": [38, 93, 99], "deriv": [38, 39, 45, 47, 74, 78, 82, 88, 92, 296, 298, 299, 301, 303, 304, 305, 382, 384, 394, 467, 471, 475, 477], "constructor": [38, 39, 45, 233, 235, 477, 478], "all_dtyp": 38, "all_numeric_dtyp": 38, "all_int_dtyp": 38, "all_float_dtyp": 38, "fall": [38, 42, 434, 467, 468, 471, 475], "replic": 38, "valid": [38, 43, 93, 103, 320, 321, 322, 323, 324, 325, 326, 327, 362, 374, 431, 432, 433, 455, 456, 457, 458, 459, 460, 461, 462], "invalid": [38, 333, 355, 431, 432, 433], "thirdli": 38, "native_float32": 38, "importantli": [38, 45, 48, 59], "unsupport": 38, "longer": [38, 40], "varieti": [38, 39], "astyp": [38, 40, 93], "broadcast_to": [38, 93], "result_typ": [38, 93], "conveni": [38, 39, 41, 44, 46, 47], "arguabl": [38, 39], "compound": 38, "reduct": [38, 45, 233, 249, 278, 279, 431, 432, 433, 434], "overflow": [38, 173, 177, 422, 429], "_function_w_arrays_dtype_n_dev_handl": [38, 39], "non_dtype_wrapped_funct": [38, 39], "applic": [38, 39, 47, 320, 331, 332, 382, 388, 394], "arr": [38, 39], "scalar": [38, 43, 48, 60, 74, 82, 233, 275, 292, 295, 333, 356], "default_int_dtyp": [38, 93], "default_float_dtyp": [38, 93], "settabl": [38, 39], "set_default_int_dtyp": [38, 93], "set_default_float_dtyp": [38, 93], "arang": [38, 74, 83, 84, 312, 315, 319, 422, 423, 434], "dim": [38, 233, 275, 312, 313, 318, 333, 353, 455, 466], "integ": [38, 45, 74, 75, 81, 93, 111, 114, 115, 173, 174, 183, 184, 185, 186, 187, 188, 189, 197, 198, 214, 221, 222, 223, 232, 333, 343, 355, 356, 362, 372, 402, 404, 407, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "bear": 38, "popul": [38, 39, 43, 402, 403, 422, 428, 430], "keepdim": [38, 233, 294, 333, 342, 356, 409, 410, 411, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "jaxarrai": [38, 39, 40, 41], "jnp": [38, 39, 40, 41, 48, 434], "mx": [38, 39, 40, 434], "nd": [38, 39, 40, 43, 48, 434], "One": [38, 43, 45, 46, 233, 249, 362, 370, 402, 404], "deleg": 38, "fill_valu": [38, 74, 81, 82], "shape_to_tupl": [38, 233], "item": [38, 43, 45, 46, 48, 93, 105, 123, 132, 133, 135, 142, 144, 146, 148, 150, 154, 233, 242, 260, 286, 287, 382, 387, 388, 389, 390, 394, 398, 399, 434, 467, 468], "as_n": [38, 93, 105, 106, 107, 108, 123, 142, 143], "cpu": [39, 60, 74, 83, 84, 123, 143, 160, 162, 168, 169, 172, 233, 254, 255, 275, 278, 279, 402, 403, 404, 406, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 477, 478], "gpu": [39, 45, 60, 123, 158, 161, 402, 404], "idx": [39, 45], "tpu": [39, 123, 170], "aliv": [39, 123, 157, 159, 163, 233, 256, 274, 276], "total_mem_on_dev": [39, 123], "amount": [39, 123, 169, 358, 360, 361], "memori": [39, 40, 58, 60, 123, 141, 162, 167, 169, 172, 320, 330, 422, 423, 434], "dev_util": [39, 123], "num_cpu_cor": [39, 123], "default_devic": [39, 43, 123], "random_uniform": [39, 47, 402, 434], "dual": 39, "thrown": [39, 60], "unless": [39, 60, 173, 217, 233, 275], "distribut": [39, 60, 123, 144, 148, 149, 150, 151, 320, 328, 358, 360, 361, 402, 403, 404, 405, 406, 455, 463, 467, 468], "non_dev_wrapped_funct": 39, "omit": [39, 41, 414, 415, 418], "rare": [39, 60], "set_default_devic": [39, 123], "context": [39, 233, 273, 320, 331, 455, 466], "overwrit": [40, 43, 123, 167], "program": 40, "prevent": [40, 45, 296, 298, 299, 303, 422, 429, 471, 472, 473], "old": 40, "strictli": 40, "inplace_upd": [40, 233, 444, 445], "ration": 40, "technic": [40, 41, 60], "speak": 40, "subtli": 40, "val": [40, 45, 233, 264, 265, 266, 280, 281], "x_nativ": 40, "val_n": 40, "args_to_n": [40, 45], "is_ivy_arrai": [40, 45, 233], "variabl": [40, 41, 46, 47, 48, 60, 233, 238, 264, 265, 266, 267, 268, 269, 271, 288, 296, 299, 300, 301, 302, 303, 304, 305, 307, 310, 320, 331, 333, 350, 378, 379, 380, 381, 400, 401, 434, 444, 445, 446, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "is_vari": [40, 296], "assign": [40, 45], "irrespect": [40, 45, 93, 99], "inclus": [40, 74, 75, 402, 404], "ommit": 40, "unspecifi": [40, 173, 221, 222, 333, 338, 362, 374], "predominatli": 40, "_function_w_arrays_n_out_handl": 40, "math": [40, 48, 434], "presenc": 40, "altern": [40, 46], "_wrap_fn": 40, "reshap": [40, 43, 45, 48, 312, 315, 319, 362, 434], "asarrai": [40, 74, 320, 321], "equival": [40, 46, 48, 74, 75, 173, 187, 212, 213, 222, 333, 344, 347, 350, 356], "input_arrai": 40, "adress": 41, "revisit": [41, 48], "dedic": [41, 45, 47, 296, 310, 444, 445], "variou": [41, 59], "posit": [41, 46, 59, 73, 74, 79, 93, 110, 123, 147, 151, 155, 173, 174, 201, 202, 217, 222, 233, 253, 333, 334, 362, 366, 371, 402, 407, 409, 412, 431, 432, 433, 444, 445], "__div__": 41, "addition": 41, "detect": [41, 46, 47, 382, 383, 393], "futher": 41, "brittl": 41, "intend": [41, 422, 429], "freeli": 41, "inde": [41, 60], "flexibl": 41, "original_typ": 41, "cumbersom": 41, "gain": [42, 47, 446], "sound": 42, "higher": [42, 43, 48, 60, 296, 299, 301, 303, 304, 305], "overview": [42, 59], "handler": [42, 44, 48, 434], "transpil": [42, 44, 434, 440], "fledg": [43, 44], "label": [43, 44, 48, 358, 359, 360, 361], "cuda": [43, 46, 60, 74, 83, 84, 123, 132, 139, 233, 254, 255, 275, 278, 279, 402, 403, 404, 406, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 477, 478], "syntact": [43, 48], "align": [43, 45, 434, 440], "x_min": [43, 48, 362, 363], "x_max": [43, 48, 362, 363], "clip_by_valu": [43, 48], "clamp": [43, 48], "mayb": [43, 45, 422, 423], "behavior": [43, 60, 173, 221, 222, 414, 415, 418], "fit": [43, 312, 318, 362, 369], "logspac": [43, 74], "construct": [43, 44, 47, 48, 362, 376, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "stop": [43, 60, 74, 75, 83, 84, 123, 138, 167, 296, 299, 301, 303, 304, 305, 307, 378, 379, 380, 381, 471, 472, 473, 474, 475, 476], "num": [43, 74, 83, 84, 312, 318], "power_seq": 43, "linspac": [43, 74, 75, 434], "okai": 43, "bound": 43, "resid": [43, 47], "interv": [43, 48, 74, 75, 83, 84, 333, 355, 362, 363, 374, 402, 404, 406, 431, 432, 433], "edg": [43, 48, 362, 363, 365, 377, 434], "wise": [43, 48, 63, 64, 65, 66, 67, 68, 69, 70, 173, 174, 175, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 192, 193, 194, 198, 199, 200, 204, 205, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 229, 233, 252, 362, 363, 422, 423], "larger": [43, 48, 93, 110, 362, 363, 371, 422, 428, 430], "param": [43, 48, 233, 254, 255], "minimum": [43, 48, 123, 173, 174, 233, 257, 258, 280, 281, 286, 287, 362, 363, 409, 411, 422, 424, 426, 434], "ml_framework": [43, 48, 74, 75], "current_framework": [43, 48], "furthermor": 43, "implicit": 43, "concaten": [43, 46, 233, 253, 362, 364, 434], "framework_handl": 43, "face": 43, "verbos": [43, 434, 481], "cprint": [43, 480], "framework_stack": 43, "stack": [43, 74, 89, 90, 312, 318, 333, 336, 337, 338, 339, 340, 341, 343, 344, 345, 347, 348, 351, 352, 354, 362, 382, 383, 392, 393, 434, 455, 464], "_determine_framework_from_arg": 43, "valueerror": [43, 362, 373], "get_framework": 43, "neither": [43, 173, 177, 217], "callabl": [43, 71, 72, 123, 167, 233, 239, 247, 249, 378, 379, 380, 381, 382, 388, 392, 393, 394], "slightli": [43, 47, 422, 423], "illustr": [43, 59], "un": [43, 93, 112], "v": [43, 46, 47, 48, 320, 332, 434, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 475, 477, 478], "constitut": [43, 422, 428, 430], "lstm_updat": [43, 320], "nn": [43, 48, 74, 85, 434], "init_h": [43, 320, 330], "init_c": [43, 320, 330], "kernel": [43, 60, 320, 330], "recurrent_kernel": [43, 320, 330], "bia": [43, 47, 320, 329, 330, 455, 456, 457, 458, 459, 460, 461, 462, 465], "recurrent_bia": [43, 320, 330], "x_shape": 43, "batch_shap": [43, 45, 48, 233, 275, 312, 313, 314, 315, 317, 318, 319, 320, 330, 331, 332, 333, 357, 402, 403, 455, 464], "timestep": [43, 320, 330, 455, 464], "input_channel": [43, 47, 455, 456, 457, 458, 459, 460, 461, 464, 465], "x_flat": 43, "wi": 43, "wi_x": 43, "wii_x": 43, "wif_x": 43, "wig_x": 43, "wio_x": 43, "recurr": [43, 320, 330], "wh": 43, "lstm": [43, 320, 330, 455], "ht": 43, "ct": 43, "hts_list": 43, "unrol": [43, 46, 320, 330], "wii_xt": 43, "wif_xt": 43, "wig_xt": 43, "wio_xt": 43, "zip": 43, "unstack": [43, 46, 233, 434], "htm1": 43, "ctm1": 43, "wh_htm1": 43, "whi_htm1": 43, "whf_htm1": 43, "whg_htm1": 43, "who_htm1": 43, "num_or_size_split": [43, 362, 372], "sigmoid": [43, 46, 47, 63, 434], "ft": 43, "gt": 43, "tanh": [43, 63, 173, 434], "ot": 43, "expand_dim": [43, 46, 362, 434], "offici": 43, "reliabl": 43, "minim": 43, "sacrific": 43, "hear": 43, "virtu": 43, "pure_ivi": 43, "reduce_mean": [43, 46, 47, 48, 434], "reduce_sum": [43, 434], "reduce_var": 43, "compile_graph": [43, 48], "pure_torch": 43, "cat": [43, 48], "backbon": [43, 46], "_layer": 43, "linear": [43, 46, 47, 48, 63, 64, 65, 66, 233, 253, 312, 316, 320, 328, 350, 434, 455, 456, 457, 458, 459, 460, 461, 462], "super": [43, 46, 47, 48], "_forward": [43, 46, 47, 434], "clean": [43, 44, 46], "w": [43, 46, 47, 296, 298, 299, 301, 303, 304, 305, 312, 313, 314, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327], "random_unifrom": 43, "unclean": 43, "wx": 43, "temp": 43, "trace": [43, 60, 233, 268, 269, 271, 333], "torchscript": 43, "lambda": [43, 46, 471, 474, 476], "fn": [43, 45, 123, 132, 133, 233, 293, 382, 383, 388, 389, 390, 392, 393, 394, 437, 439], "example_input": [43, 71, 72], "static_argnum": [43, 71, 72], "static_argnam": [43, 71, 72], "jit": [43, 60], "maxim": 43, "low": [43, 402, 404, 406], "explor": [44, 48, 59], "frontend": 44, "treat": [44, 48, 71, 72], "abil": [44, 60], "primit": [44, 60], "experi": [44, 46, 60], "describ": [44, 48, 422, 423, 427, 428, 429], "hierarch": [44, 46, 47], "trainabl": [44, 46, 47, 296, 302, 444, 445, 467, 468, 477], "built": [44, 74, 75, 123, 455, 466, 467, 468], "straight": 45, "arraywithdevic": 45, "arraywithgener": 45, "arraywithgradi": 45, "arraywithimag": 45, "arraywithlinalg": 45, "arraywithlog": 45, "arraywithmath": 45, "arraywithmeta": 45, "arraywithrandom": 45, "arraywithreduct": 45, "assert": [45, 46, 233, 238], "is_native_arrai": [45, 233], "_shape": 45, "_size": 45, "functool": 45, "reduc": [45, 123, 167, 233, 249, 333, 348, 409, 410, 411, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "mul": 45, "len": [45, 48, 74, 85], "_dtype": 45, "_devic": 45, "_dev_str": 45, "as_ivy_dev": [45, 123], "_pre_repr": 45, "_post_repr": 45, "ndim": [45, 333, 348, 351], "size": [45, 46, 74, 83, 84, 123, 165, 166, 167, 233, 278, 312, 317, 333, 337, 342, 346, 348, 351, 355, 362, 366, 371, 372, 373, 402, 403, 405, 406, 409, 410, 412, 431, 432, 433, 455, 456, 457], "matrix_transpos": [45, 333, 353], "mt": 45, "answer": [45, 60], "perhap": [45, 46, 47, 60], "consol": 45, "typeerror": 45, "immut": 45, "pure": [45, 48, 60], "behav": 45, "claim": 45, "truli": 45, "_native_wrapp": 45, "attributeerror": 45, "scatter_nd": [45, 233, 434], "genuin": 45, "some_method": 45, "similarli": [45, 74, 85], "rewritten": 45, "__pow__": 45, "strang": 45, "power": [45, 46, 47, 173, 187, 195, 221, 233, 257, 280, 287, 333, 343, 446], "enforc": 45, "notic": 45, "inv": [45, 333, 434], "invers": [45, 59, 173, 175, 176, 178, 179, 180, 181, 182, 333, 340, 347], "_wrap_method": 45, "func_wrapp": 45, "hasattr": 45, "__name__": 45, "non_wrapped_method": 45, "_method_wrap": 45, "native_arg": 45, "native_kwarg": 45, "to_ivi": 45, "inner_fn": 45, "whist": 45, "down": 45, "unwrap": 45, "inner": [45, 333, 338, 341, 378, 379, 380, 381, 422, 423], "transit": 45, "needlessli": 45, "randn": 45, "_unwrap_method": 45, "method_wrap": 45, "whenev": [45, 46], "parent": 45, "compartment": 45, "public": [45, 233, 242], "abc": [45, 123, 132, 138, 467, 468, 471, 475], "newshap": [45, 362, 370], "new_shap": 45, "transpos": [45, 48, 123, 154, 320, 322, 324, 326, 333, 345, 347, 422, 423, 434, 455, 457, 459, 461], "flip": [45, 46, 48, 173, 184, 362, 434], "tidi": 45, "20": [45, 173, 195, 333, 353, 402, 404, 422, 423], "shorter": 45, "hard": 45, "crystal": 45, "41": [45, 333, 334, 422, 429], "builtin": [45, 47], "enough": [45, 46, 47], "ton": 46, "ado": [46, 47], "dictionari": [46, 60], "incred": [46, 60], "hash": 46, "soup": 46, "walk": [46, 47], "dct": 46, "cnt": 46, "combo": [46, 434, 440], "intuit": [46, 47], "hold": [46, 233, 278, 279], "1000": 46, "uda": 46, "3333": 46, "6667": 46, "178": 46, "grad": [46, 47, 48, 434, 471, 475], "lr": [46, 47, 296, 299, 301, 303, 304, 305, 471, 472, 473, 474, 475, 476], "new_weight": 46, "0600": 46, "3100": 46, "2400": 46, "6900": 46, "delimit": 46, "autocomplet": 46, "tab": [46, 434], "midwai": 46, "agent": 46, "total_spe": 46, "total_height": 46, "total_width": 46, "ag": 46, "tot": 46, "total_": 46, "total_h": 46, "disk": [46, 312, 314], "hdf5": [46, 467, 468], "to_disk_as_hdf5": 46, "from_disk_as_hdf5": 46, "same_arrai": 46, "to_disk_as_pickl": 46, "from_disk_as_pickl": 46, "config": [46, 382, 395], "batch_siz": [46, 312, 315, 319, 320, 321, 322, 323, 324, 325, 326, 327, 402, 403], "16": [46, 173, 230, 333, 353, 402, 404, 422, 423], "dir": 46, "dataset": [46, 58, 434], "dropout": [46, 320, 455, 466], "adam": [46, 47, 48, 296, 298, 299, 303, 434, 471, 473], "json": 46, "to_disk_as_json": 46, "from_disk_as_json": 46, "debug": 46, "cnt0": 46, "cnt1": 46, "deep_copi": 46, "diff_0": 46, "diff_1": 46, "config0": 46, "config1": 46, "Not": [46, 47, 73], "hierarchi": 46, "screen": 46, "decod": 46, "l0": 46, "l1": [46, 333, 356], "depth": [46, 47, 48, 59, 123, 147, 151, 155, 233, 260, 275, 382, 394, 467, 468], "clearer": 46, "truncat": 46, "__": 46, "flatten_key_chain": [46, 467, 468], "above_height": 46, "decoder__l0": 46, "decoder__l1": 46, "encoder__l0": 46, "encoder__l1": 46, "height": [46, 312, 318], "below_depth": 46, "l0__b": 46, "l0__w": 46, "l1__b": 46, "l1__w": 46, "with_print_limit": 46, "printabl": 46, "with_key_length_limit": 46, "length": [46, 74, 75, 85, 333, 351, 352, 362, 370, 422, 423], "with_print_ind": 46, "indent": 46, "obviou": 46, "foresight": 46, "untidili": 46, "update_ag": 46, "normalize_img": 46, "img": 46, "img_max": 46, "reduce_max": [46, 434], "img_min": 46, "reduce_min": [46, 434], "img_rang": 46, "agent_posit": 46, "agent_veloc": 46, "agent_cam_front_rgb": 46, "agent_cam_front_depth": 46, "agent_cam_rear_rgb": 46, "agent_cam_rear_depth": 46, "agent_cam_lidar": 46, "normal": [46, 362, 374, 400, 401, 402, 405, 469, 470], "cleaner": 46, "camera": 46, "front_rgb": 46, "front_depth": 46, "rear_rgb": 46, "rear_depth": 46, "lidar": 46, "rgb": 46, "rear": 46, "veloc": 46, "cam": 46, "cam_max": 46, "cam_min": 46, "cam_rang": 46, "Of": 46, "ideal": 46, "perman": 46, "afterward": 46, "thread": 46, "incorpor": 46, "multiprocess": [46, 60, 123, 132, 233], "queue": [46, 123, 132, 133, 233, 277, 282], "pretti": 46, "straightforward": 46, "dataload": [46, 58, 434], "_cnt": 46, "img_": 46, "_dataset_s": 46, "_batch_siz": 46, "_count": [46, 47], "__next__": 46, "filenam": 46, "img_fnam": 46, "list_stack": 46, "fname": 46, "loaded_img": 46, "cv2": 46, "imread": 46, "from_numpi": 46, "loader": [46, 60], "32": [46, 312, 319, 422, 423], "batch_slic": 46, "model": [46, 47, 434], "mymodel": [46, 434], "linear0": [46, 47, 434], "64": [46, 47, 320, 327, 422, 423, 434, 455, 466], "linear1": [46, 47, 434], "relu": [46, 47, 63, 64, 65, 434], "x_in": [46, 47, 48, 434], "001": [46, 47], "loss_fn": [46, 47, 48, 434], "execute_with_gradi": [46, 47, 48, 60, 296, 434], "to_numpi": [46, 233, 434], "0145": 46, "grad_fn": 46, "addbackward0": 46, "_create_vari": 47, "output_channel": [47, 455, 456, 457, 458, 459, 460, 461, 464, 465], "with_bia": [47, 455, 465], "_input_channel": 47, "_output_channel": 47, "_w_shape": 47, "_b_shape": 47, "_with_bia": 47, "8979": 47, "3198": 47, "0196": 47, "3126": 47, "3717": 47, "9687": 47, "6958": 47, "5122": 47, "3902": 47, "8800": 47, "5613": 47, "1982": 47, "nightmar": 47, "overcom": 47, "fc": 47, "9563": 47, "direct": [47, 48, 59, 419, 421], "impact": 47, "v0": 47, "v1": 47, "6440": 47, "key0": 47, "key1": 47, "1823": 47, "8075": 47, "linear3": 47, "v2": 47, "2346": 47, "counter": 47, "hidden": [47, 320, 330, 455, 464], "fed": [47, 123, 167], "sequenti": 47, "1300": 47, "decoupl": 47, "scheme": 47, "come": [47, 58, 434, 440], "weight_initi": [47, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465], "glorotuniform": [47, 446, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465], "bias_initi": [47, 455, 456, 457, 458, 459, 460, 461, 462, 465], "_w_init": 47, "_b_init": 47, "create_vari": [47, 446], "var_shap": [47, 446], "fan_out": [47, 446], "fan_in": [47, 446], "uniform": [47, 402, 403, 404, 406, 446, 448, 449, 452, 453], "fan_mod": [47, 446], "fan_sum": 47, "slight": 47, "misnom": 47, "belong": 47, "saw": 47, "vanilla": [47, 378, 380], "descent": [47, 296, 301, 471, 476], "lar": [47, 296, 303, 304, 471], "lamb": [47, 296, 303, 471], "beta1": [47, 296, 298, 299, 303, 471, 472, 473], "beta2": [47, 296, 298, 299, 303, 471, 472, 473], "999": [47, 296, 298, 299, 303, 471, 472, 473], "07": [47, 296, 298, 299, 303, 358, 359, 360, 361, 471, 472, 473], "stop_gradi": [47, 123, 167, 296, 299, 301, 303, 304, 305, 378, 379, 380, 381, 434, 471, 472, 473, 474, 475, 476], "compile_on_next_step": [47, 467, 468, 471, 472, 473, 474, 475, 476], "_beta1": 47, "_beta2": 47, "_epsilon": 47, "_mw": 47, "_vw": 47, "_first_pass": 47, "_should_compil": 47, "_step": [47, 471, 475], "new_v": 47, "adam_upd": [47, 296], "_lr": 47, "isinst": [47, 48, 233, 290], "_inplac": 47, "_stop_gradi": 47, "set_stat": [47, 471, 472, 473, 474, 475, 476], "mw": [47, 296, 298, 299], "vw": [47, 296, 298, 299], "revers": [48, 60, 233, 247, 362, 367], "pre": [48, 60, 123], "captur": 48, "one_hot": [48, 233, 434], "sparse_funct": 48, "num_class": [48, 402, 403], "ey": [48, 74, 320, 327], "cumprod": [48, 233], "ones_lik": [48, 74, 434], "num_dim": 48, "new_axi": 48, "constitu": 48, "_linear": 48, "forward": [48, 59, 60, 467, 468, 471, 475], "to_backend": 48, "jax_graph": 48, "learnabl": [48, 400, 401, 469, 470], "to_ivy_modul": [48, 444], "thinli": 48, "preserv": [48, 60, 296, 307, 362, 367], "to_haiku_modul": 48, "hk": 48, "loss_fn_t": 48, "transform": [48, 59, 320, 328, 329], "without_apply_rng": 48, "rng": 48, "prngkei": 48, "42": [48, 402, 407, 422, 423], "init": 48, "update_rul": 48, "01": 48, "tree_multimap": 48, "mechan": [58, 60, 434], "vision": [58, 434], "robot": [58, 434], "focus": 59, "field": [59, 333, 338, 348, 351, 414, 415, 416], "perfect": 59, "showcas": 59, "3d": [59, 455, 460, 461], "differenti": 59, "demo": [59, 434], "orient": 59, "pose": 59, "represent": [59, 73, 93, 97, 98, 104, 110, 111, 123, 139, 140, 173, 174, 177, 183, 186, 188, 214, 217, 233, 285, 290], "largest": [59, 93, 110, 111, 333, 351], "euler": [59, 73], "quaternion": 59, "rotat": 59, "matric": [59, 74, 85, 89, 90, 320, 329, 333, 334, 336, 337, 338, 339, 340, 343, 344, 345, 347, 348, 350, 351, 352, 354], "vector": [59, 74, 85, 233, 241, 320, 329, 333, 335, 338, 341, 346, 351, 352, 355, 356, 357, 455, 465], "angl": [59, 173, 181, 191, 226], "ivy_mech": 59, "target_facing_rotation_matrix": 59, "polar_to_cartesian_coord": 59, "predominantli": 59, "ordin": [59, 333, 350], "warp": [59, 312, 313], "optic": 59, "flow": 59, "voxel": 59, "cloud": 59, "ivy_vis": 59, "coords_to_voxel_grid": 59, "render_pixel_coord": 59, "neural": [59, 320, 434, 441, 455], "radianc": 59, "nerf": 59, "trajectori": 59, "motion": 59, "plan": [59, 434], "mobil": 59, "ivy_robot": 59, "sample_spline_path": 59, "rigidmobil": 59, "sample_bodi": 59, "drone": 59, "sample_link": 59, "openai": 59, "swimmer": 59, "cumul": [59, 233, 244, 245], "reward": 59, "supervis": 59, "reinforc": 59, "door": [59, 60], "intersect": 59, "cartpol": 59, "mountain_car": 59, "pendulum": 59, "reacher": 59, "polici": 59, "condit": [59, 71, 72, 382, 392, 393, 409, 413], "learnt": 59, "ture": 59, "ntm": 59, "egospher": 59, "spatial": 59, "esm": 59, "ivy_memori": 59, "egocentr": 59, "room": 59, "inspir": 59, "doubt": 60, "grate": 60, "put": 60, "probe": 60, "q": [60, 320, 332, 333, 338, 348], "xla": 60, "buffer": 60, "certain": [60, 74, 75, 83, 84], "kind": [60, 93, 110, 111, 173, 221, 422, 427, 429], "gold": 60, "dex": 60, "phase": 60, "lax": 60, "scan": 60, "tricki": 60, "predictor": 60, "tight": 60, "driver": 60, "schedul": 60, "algorithm": [60, 320, 321, 322, 323, 324, 325, 326, 327, 455, 456, 457, 458, 459, 460, 461, 462], "eager": 60, "dispatch": 60, "Will": 60, "ast": 60, "dynamic": 60, "cond": 60, "strive": 60, "jacobian": 60, "checkpoint": 60, "autodiff": 60, "shine": 60, "merci": 60, "superset": 60, "autograd": 60, "cluster": 60, "compet": 60, "paradigm": 60, "parallelis": [60, 123, 132, 133], "spmd": 60, "mixtur": 60, "expert": 60, "sophist": 60, "depart": 60, "routin": 60, "hundr": 60, "thousand": 60, "deepli": [60, 382, 384], "moment": [60, 296, 298, 299, 303, 471, 472, 473], "broadli": 60, "heavili": 60, "supplementari": 60, "someon": 60, "drop": 60, "Is": 60, "reusabl": 60, "fanci": 60, "fusion": 60, "lose": 60, "vmap": 60, "pmap": 60, "overhead": 60, "ineffici": 60, "eventu": 60, "supplement": 60, "backdoor": 60, "callback": 60, "load": 60, "record": 60, "metric": 60, "visual": 60, "somewhat": 60, "outsourc": 60, "third": [60, 333, 351, 414, 415], "gelu": [63, 441], "gaussian": [63, 64], "leaki": [63, 64, 65], "leaky_relu": [63, 434], "alpha": [63, 65], "rectifi": [63, 65, 66], "slope": [63, 65], "39": [63, 65, 422, 423], "85": [63, 65], "17": [63, 65], "269": [63, 67], "731": [63, 67], "881": [63, 67], "softmax": [63, 320, 331, 332, 434], "09003057": [63, 68], "24472848": [63, 68], "66524094": [63, 68], "softplu": [63, 434], "3461": [63, 69], "6491": [63, 69], "5349962": [63, 69], "4203641": [63, 69], "hyperbol": [63, 70, 173, 176, 179, 182, 191, 226, 231], "55": [63, 70, 422, 423], "50": [63, 70, 422, 423], "func": [71, 72, 123, 167, 233, 239, 296, 300, 382, 395], "faster": [71, 72, 422, 423], "invoc": [71, 72], "718281828459045": 73, "inf": [73, 233, 261, 295, 333, 356], "newaxi": 73, "alia": 73, "pi": 73, "141592653589793": 73, "mathemat": [73, 173, 177, 181, 196, 217, 333, 356], "evenli": [74, 75, 83, 84, 362, 372], "half": [74, 75, 402, 404, 406], "word": [74, 75, 402, 406, 444, 445], "chosen": [74, 75, 173, 181, 409, 413], "distanc": [74, 75], "adjac": [74, 75], "dimension": [74, 75, 79, 85, 333, 335, 336, 341, 344, 346, 347, 355, 356, 362, 372, 409, 410, 411, 412, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "ceil": [74, 75, 173, 434], "datatyp": [74, 76, 86, 93, 103, 113, 114], "interpret": [74, 76, 86], "fill": [74, 77, 81, 82, 87, 88, 91, 92, 402, 404], "uniniti": [74, 77, 78], "empty_lik": 74, "n_row": [74, 79], "n_col": [74, 79], "diagon": [74, 79, 89, 90, 333, 354, 422, 423], "elsewher": [74, 79, 409, 413], "row": [74, 79, 333, 350, 351, 402, 403, 409, 412], "column": [74, 79, 333, 338, 348, 350, 351, 422, 423], "upper": [74, 79, 90, 333, 334, 348, 402, 406], "from_dlpack": 74, "__dlpack__": [74, 80], "view": [74, 80, 320, 327], "interchang": [74, 80, 362, 375], "full_lik": 74, "endpoint": [74, 83], "entri": [74, 83, 84, 362, 372, 382, 395], "meshgrid": 74, "xy": [74, 85], "coordin": [74, 85, 173, 181], "cartesian": [74, 85], "matrix": [74, 85, 89, 90, 233, 234, 240, 320, 329, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 350, 351, 352, 354, 357, 455, 465], "ij": [74, 85, 422, 423], "rank": [74, 85, 233, 294, 333, 335, 344, 348, 350, 354, 355, 356, 362, 365, 366, 374, 377, 409, 412, 431, 432, 433], "ni": [74, 85], "xi": [74, 85], "n1": [74, 85], "n2": [74, 85], "n3": [74, 85], "accordingli": [74, 85, 173, 196, 333, 356, 409, 411, 414, 415, 418, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "xv": [74, 85], "yv": [74, 85], "tril": 74, "triangular": [74, 89, 90, 333, 334, 348], "innermost": [74, 89, 90, 333, 334, 336, 337, 338, 339, 340, 344, 345, 347, 348, 350, 351, 352, 354], "mxn": [74, 89, 90, 333, 337, 344, 345, 347, 348, 352, 354], "triu": 74, "zeros_lik": [74, 362, 363, 434], "defaultdtyp": [93, 94], "defaultfloatdtyp": [93, 95], "float_dtyp": [93, 106, 117], "defaultintdtyp": [93, 96], "as_ivy_dtyp": 93, "dtype_in": [93, 97, 98, 104, 109, 112, 113, 114, 122], "as_native_dtyp": 93, "match": [93, 99, 173, 222, 233, 272], "broadcast_arrai": 93, "incompat": [93, 101], "from_": [93, 102], "occur": [93, 102, 409, 410, 411, 414, 415, 416, 418], "closest_valid_dtyp": 93, "closest": [93, 103, 173, 189, 197, 198, 232], "convert_dtyp": 93, "summari": [93, 105, 106, 107, 116, 117, 118, 123, 136, 137, 142, 233, 242, 246, 260, 296, 306, 311], "floatdtyp": [93, 106], "int_dtyp": [93, 107, 118], "intdtyp": [93, 107], "dtype_bit": 93, "finfo": 93, "inform": [93, 110, 111, 296, 307], "followng": [93, 110], "occupi": [93, 110, 111, 233, 278, 279], "ep": [93, 110, 333, 344, 347], "smallest": [93, 110, 111, 173, 189], "max": [93, 110, 111, 173, 215, 233, 240, 241, 249, 278, 279, 333, 344, 347, 422, 471, 473], "min": [93, 110, 111, 173, 216, 233, 249, 278, 279, 286, 333, 348, 351, 352, 356, 422], "smallest_norm": [93, 110], "precis": [93, 110, 173, 217, 227], "iinfo": 93, "encapsul": [93, 111], "invalid_dtyp": 93, "is_float_dtyp": 93, "is_int_dtyp": [93, 233, 292], "arrays_and_dtyp": [93, 115], "unset_default_dtyp": 93, "unset_default_float_dtyp": 93, "unset_default_int_dtyp": 93, "valid_dtyp": 93, "noinspect": [94, 95, 96, 124, 297], "pyshadowingnam": [94, 95, 96, 124, 297], "defaultdevic": [123, 124], "devcloneditem": 123, "multidevitem": [123, 125, 128], "devclonedit": 123, "multidevit": [123, 126, 129, 132, 133, 137], "devclonednest": 123, "max_depth": [123, 127, 130, 137, 147, 151, 155, 233, 260, 382, 394], "multidevnest": [123, 127, 130], "devdistitem": 123, "devdistit": 123, "devdistnest": 123, "devmanag": [123, 131], "dev_mapp": 123, "da_dim_s": 123, "safety_factor": 123, "min_dev_dim_s": 123, "max_dev_dim_step_ratio": 123, "min_unit_dev_tune_step": 123, "min_sf_tune_step": 123, "starting_split_factor": 123, "max_split_factor_step_s": 123, "05": 123, "tune_dev_alloc": 123, "tune_dev_split": 123, "mapper": [123, 132, 133], "clone": [123, 144, 145, 146, 147], "receivess": 123, "ratio": [123, 296, 303, 312, 318, 471, 473], "safe": [123, 132], "oom": 123, "tune": 123, "da_tune_step": 123, "dim_siz": 123, "ds_tune_step": 123, "to_clon": 123, "to_distribut": 123, "multidevic": [123, 132], "parallel": [123, 132, 133], "mutlidevic": [123, 132], "repeated_config_check": 123, "tune_step": 123, "devmapp": [123, 133], "ret_fn": [123, 132, 133], "queue_class": [123, 132, 133], "worker_class": [123, 132, 133], "timeout": [123, 132, 133, 233, 277, 282], "worker": [123, 132, 133], "used_dev": [123, 132], "split_factor": [123, 132], "sf": [123, 132], "devmappermultiproc": 123, "multidev": [123, 134, 135, 136, 155], "at_dev": [123, 136, 137], "profil": 123, "save_dir": [123, 138], "as_native_dev": 123, "clear_mem_on_dev": 123, "dev_clon": 123, "deviceic": [123, 144], "dev_clone_arrai": 123, "dev_clone_it": 123, "xs": [123, 146, 150, 152, 153, 154, 233, 234, 237, 296, 300, 362, 364], "dev_clone_nest": 123, "dev_dist": 123, "dev_dist_arrai": 123, "dev_dist_it": 123, "iterbal": [123, 150, 154], "dev_dist_nest": 123, "dev_unifi": 123, "concatten": [123, 152, 153, 154, 155, 167], "concat": [123, 152, 153, 154, 155, 167, 233, 253, 362, 434], "dev_unify_arrai": 123, "dev_unify_it": 123, "dev_unify_nest": 123, "spread": [123, 155], "gpu_is_avail": 123, "num_arrays_on_dev": 123, "percent_used_mem_on_dev": 123, "process_specif": [123, 162, 172], "percentag": [123, 162], "ram": [123, 162, 169, 172], "alon": [123, 162, 172], "print_all_arrays_on_dev": 123, "set_split_factor": 123, "scale": [123, 165, 166, 296, 304, 320, 328, 331, 332, 400, 401, 455, 463, 466, 471, 474], "chunk": [123, 165, 166, 167], "split_func_cal": 123, "max_chunk_s": [123, 167], "chunk_siz": [123, 167], "input_ax": [123, 167], "output_ax": [123, 167], "feed": [123, 167], "fist": [123, 167], "to_dev": 123, "gb": [123, 169, 172], "tpu_is_avail": 123, "unset_default_devic": 123, "used_mem_on_dev": 123, "magnitud": [173, 174, 177, 217, 333, 351, 352], "aco": [173, 434], "princip": [173, 175, 178, 180], "cosin": [173, 175, 176, 190, 191], "greater": [173, 175, 178, 181, 185, 187, 197, 198, 221, 222, 224, 232, 333, 335, 362, 373, 402, 406], "acosh": [173, 434], "x1_i": [173, 177, 181, 183, 185, 186, 187, 188, 192, 193, 198, 199, 200, 204, 205, 210, 211, 213, 214, 217, 219, 221, 222, 229], "x2_i": [173, 177, 181, 183, 185, 186, 187, 188, 192, 193, 198, 199, 200, 204, 205, 210, 211, 213, 214, 217, 219, 221, 222, 229], "finit": [173, 177, 181, 201, 217, 221, 222], "nonzero": [173, 177, 217, 409], "nor": [173, 177, 217], "nearest": [173, 177, 217, 223], "2019": [173, 177, 196, 217], "appropri": [173, 177, 217, 409, 410], "commut": [173, 177], "asin": [173, 434], "sine": [173, 178, 179, 225, 226], "asinh": [173, 434], "atan": [173, 434], "atan2": [173, 434], "quotient": [173, 181], "notat": [173, 181, 422, 423], "denot": [173, 181], "pair": [173, 181, 320, 332, 333, 335], "quadrant": [173, 181], "3\u03c0": [173, 181], "atanh": [173, 434], "549": [173, 182], "bitwise_and": 173, "bitwis": [173, 183, 186, 188, 214], "AND": [173, 183, 211, 431, 432], "binari": [173, 183, 186, 188, 214, 358, 359], "bitwise_invert": 173, "invert": [173, 184], "bitwise_left_shift": 173, "bitwise_or": 173, "OR": [173, 186, 213, 431, 433], "bitwise_right_shift": 173, "arithmet": [173, 187, 422, 425], "propag": [173, 187, 422, 424, 425, 426, 428, 429, 430], "thu": [173, 187, 221, 222, 333, 338], "floor": [173, 187, 233, 252, 434], "lh": [173, 187], "rh": [173, 187], "bitwise_xor": 173, "xor": [173, 188, 214], "416": [173, 190], "cosh": [173, 434], "dividend": [173, 192, 222], "divisor": [173, 192, 222, 296, 298, 299, 303, 422, 428, 430, 471, 472, 473], "erf": 173, "gauss": [173, 194], "exponenti": [173, 194, 195, 210, 221], "exp": [173, 196, 210, 434], "logarithm": [173, 195, 206, 207, 208, 209, 210, 333, 349], "7182817": [173, 195], "389056": [173, 195], "085537": [173, 195], "expm1": 173, "accur": [173, 196], "fdlibm": [173, 196], "compliant": [173, 196, 212, 213, 422, 424, 425, 426], "greatest": [173, 197, 198], "floor_divid": 173, "greater_equ": 173, "isfinit": 173, "out_i": [173, 201, 202, 203], "isinf": 173, "isnan": 173, "less_equ": 173, "log10": 173, "log1p": 173, "log2": 173, "logaddexp": 173, "logical_and": [173, 434], "logical_not": [173, 434], "NOT": [173, 212], "recommend": [173, 212, 213, 222, 422, 425], "logical_or": [173, 434], "logical_xor": 173, "threshold": [173, 215, 216], "exce": [173, 216], "product": [173, 217, 233, 244, 320, 331, 332, 333, 335, 341, 346, 353, 355, 422, 423, 427, 455, 466], "not_equ": 173, "pow": 173, "expon": [173, 221, 233, 287], "versu": [173, 221], "odd": [173, 221], "remaind": [173, 233, 252, 362, 372], "modulu": [173, 222], "primarili": [173, 222], "backward": [173, 222, 333, 355, 431, 432, 433], "sinh": [173, 434], "sqrt": [173, 333, 356], "squar": [173, 227, 333, 334, 336, 338, 339, 340, 343, 349, 350, 351], "indistinguish": [173, 227], "infinit": [173, 227], "56": [173, 230, 422, 423], "19": [173, 230, 362, 369], "546": [173, 230], "842": [173, 230], "916": [173, 230], "96": [173, 230, 422, 423], "37": [173, 230, 312, 319], "996": [173, 230], "328": [173, 230], "143": [173, 230], "38": [173, 230], "trunc": 173, "decim": [173, 232], "all_equ": 233, "equality_matrix": [233, 234], "arg_nam": 233, "array_equ": 233, "arrays_equ": 233, "assert_supports_inplac": 233, "later": [233, 239], "clip_matrix_norm": 233, "max_norm": [233, 240, 241], "downscal": [233, 240, 241], "clip_vector_norm": 233, "container_typ": 233, "copy_arrai": 233, "cumsum": [233, 434], "current_backend_str": 233, "default_v": [233, 247], "catch_except": [233, 247], "rev": [233, 247], "with_cal": [233, 247], "einops_rearrang": 233, "axes_length": [233, 248, 249, 250], "rearrang": [233, 248, 250], "arrang": [233, 248], "einops_reduc": 233, "einops_repeat": 233, "floormod": [233, 434], "mod": [233, 252], "fourier_encod": 233, "max_freq": [233, 253], "num_band": [233, 253], "flatten": [233, 253, 333, 346, 356, 362, 369, 371, 409, 410, 411, 414, 415, 416, 418], "pad": [233, 253, 320, 321, 322, 323, 324, 325, 326, 327, 362, 365, 377, 455, 456, 457, 458, 459, 460, 461, 462], "fourier": [233, 253], "frequenc": [233, 253], "band": [233, 253], "linearli": [233, 253, 333, 350], "oppos": [233, 253], "geometr": [233, 253], "expand": [233, 253, 362, 366], "channel": [233, 253, 312, 314, 315, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465], "gather": [233, 255], "slice": [233, 254, 255, 382, 391], "gather_nd": [233, 434], "get_all_arrays_in_memori": 233, "get_min_bas": 233, "get_min_denomin": 233, "get_num_dim": [233, 434], "as_arrai": [233, 259, 284], "get_referrers_recurs": 233, "seen_set": [233, 260], "local_set": [233, 260], "has_nan": 233, "include_inf": [233, 261, 295], "indices_wher": [233, 434], "inplace_arrays_support": 233, "inplace_decr": 233, "decrement": [233, 264], "inplace_incr": 233, "inplace_variables_support": 233, "is_arrai": 233, "is_ivy_contain": 233, "match_kwarg": 233, "allow_dupl": [233, 272], "forkserv": [233, 273], "spawn": [233, 273], "num_arrays_in_memori": 233, "hot": [233, 275], "scatter": [233, 275, 278, 279], "overrid": [233, 275], "print_all_arrays_in_memori": 233, "queue_timeout": 233, "scatter_flat": 233, "flat": [233, 278, 362, 369], "set_min_bas": 233, "set_min_denomin": 233, "set_queue_timeout": 233, "set_tmp_dir": 233, "tmp_dr": [233, 283], "temporari": [233, 283], "y_tupl": [233, 284], "y_tensor": [233, 284], "as_tensor": [233, 284], "min_denomin": [233, 286], "stabil": [233, 286, 287, 419, 420, 421], "_min_denomin": [233, 286], "stable_pow": 233, "min_bas": [233, 287], "_min_bas": [233, 287, 400, 401, 469, 470], "supports_inplac": 233, "tmp_dir": 233, "to_list": [233, 434], "to_scalar": 233, "try_else_non": 233, "unpack": [233, 294], "r": [233, 294, 333, 348, 357], "value_is_nan": 233, "gradienttrack": [296, 297], "with_grad": [296, 306], "adam_step": 296, "dcdw": [296, 298, 299, 301, 303, 304], "delta": [296, 298], "cost": [296, 298, 299, 301, 303, 304, 305, 378, 379, 380, 381], "ws": [296, 298, 299, 301, 303, 304, 305], "en": [296, 298, 299], "wikipedia": [296, 298, 299], "wiki": [296, 298, 299], "stochastic_gradient_desc": [296, 298, 299], "dc": [296, 298, 299, 301, 303, 304, 305], "dw": [296, 298, 299, 301, 303, 304, 305], "averag": [296, 298, 299, 303, 378, 379, 380], "forget": [296, 298, 299, 303, 471, 472, 473], "mw_tm1": [296, 299, 303], "vw_tm1": [296, 299, 303], "rate": [296, 299, 301, 303, 304, 305, 378, 379, 380, 381, 455, 466, 471, 472, 473, 474, 475, 476], "rel": [296, 299, 301, 303, 304, 305, 333, 337, 344, 347, 354, 362, 367, 371, 419, 420, 421, 434], "ws_new": [296, 299, 301, 303, 304, 305], "retain_grad": [296, 300], "dy": [296, 300, 312, 315], "dx": [296, 300, 312, 315], "retain": [296, 300], "gradient_descent_upd": [296, 378, 379, 380, 381, 434], "lamb_upd": 296, "max_trust_ratio": [296, 303, 471, 473], "decay_lambda": [296, 303, 304, 471, 473, 474], "trust": [296, 303, 471, 473], "decai": [296, 303, 304, 471, 473, 474], "lars_upd": 296, "layerwis": [296, 304, 471, 474], "optimizer_upd": 296, "effective_grad": [296, 305], "set_with_grad": 296, "preserve_typ": [296, 307], "unset_with_grad": 296, "variable_data": 296, "bilinear_resampl": [312, 434], "bilinearli": [312, 313], "num_sampl": [312, 313, 316, 402, 403], "bilinear": [312, 313], "float_img_to_uint8_img": 312, "gradient_imag": [312, 434], "linear_resampl": 312, "interpol": [312, 316], "resampl": [312, 316], "random_crop": 312, "crop_siz": [312, 317], "image_dim": [312, 317], "seed": [312, 317, 402, 434], "randomli": [312, 317, 320, 328, 455, 463], "crop": [312, 317], "2d": [312, 317, 333, 349, 455, 458, 459, 462], "nh": [312, 317], "nw": [312, 317], "stack_imag": [312, 434], "desired_aspect_ratio": [312, 318], "window": [312, 318, 320, 321, 322, 323, 324, 325, 326, 327, 455, 456, 457, 458, 459, 460, 461, 462], "width": [312, 318], "uint8_img_to_float_img": 312, "820471434542632e": [312, 319], "0082513512365273e": [312, 319], "34": [312, 319], "658462758989161e": [312, 319], "003653270560797e": [312, 319], "30": [312, 319, 422, 423, 446, 452], "conv1d": [320, 455], "stride": [320, 321, 322, 323, 324, 325, 326, 327, 455, 456, 457, 458, 459, 460, 461, 462], "data_format": [320, 321, 322, 323, 324, 325, 326, 327, 455, 456, 457, 458, 459, 460, 461, 462], "nwc": [320, 321, 322, 455, 456, 457], "dilat": [320, 321, 322, 323, 324, 325, 326, 327, 455, 456, 457, 458, 459, 460, 461, 462], "convolut": [320, 321, 322, 323, 324, 325, 326, 327, 455, 456, 457, 458, 459, 460, 461, 462], "d_in": [320, 321, 322, 323, 324, 325, 326], "fw": [320, 321, 322, 323, 324, 325, 326, 327], "d_out": [320, 321, 322, 323, 324, 325, 326], "slide": [320, 321, 322, 323, 324, 325, 326, 327, 455, 456, 457, 458, 459, 460, 461, 462], "ncw": [320, 321, 322, 455, 456, 457], "wio": [320, 321], "conv1d_transpos": 320, "output_shap": [320, 322, 324, 326, 455, 457, 459, 461], "conv2d": [320, 434, 455], "nhwc": [320, 323, 324, 327, 455, 458, 459, 462], "fh": [320, 323, 324, 325, 326, 327], "nchw": [320, 323, 324, 327, 455, 458, 459, 462], "conv2d_transpos": 320, "conv3d": [320, 455], "ndhwc": [320, 325, 326, 455, 460, 461], "volum": [320, 325], "fd": [320, 325, 326], "ncdhw": [320, 325, 326, 455, 460, 461], "dhwio": [320, 325], "conv3d_transpos": 320, "depthwise_conv2d": [320, 434], "depthwis": [320, 327, 455, 462], "random_norm": [320, 327, 333, 351, 402], "28": [320, 327, 422, 423], "unsqueez": [320, 327], "333": [320, 327], "inp": [320, 327], "prob": [320, 328, 402, 403, 455, 463], "bernoul": [320, 328, 455, 463], "out_featur": [320, 328, 329], "incom": [320, 329], "outer_batch_shap": [320, 329], "inner_batch_shap": [320, 329], "in_featur": [320, 329], "cell": [320, 330, 455, 464], "multi_head_attent": 320, "num_head": [320, 331, 455, 466], "mask": [320, 331, 332], "to_q_fn": [320, 331], "to_kv_fn": [320, 331], "to_out_fn": [320, 331], "to_q_v": [320, 331], "to_kv_v": [320, 331], "to_out_v": [320, 331], "head": [320, 331, 434, 455, 466], "num_queri": [320, 331, 332], "x_feat_dim": [320, 331], "measur": [320, 331, 455, 466], "num_kei": [320, 331, 332], "cont_feat_dim": [320, 331], "numhead": [320, 331], "feat_dim": [320, 331, 332], "dot": [320, 331, 332, 333, 353, 355, 422, 423, 455, 466], "out_feat_dim": [320, 331], "scaled_dot_product_attent": 320, "choleski": 333, "decomposit": [333, 334, 348, 351], "symmetr": [333, 334, 338, 339, 357], "u": [333, 334, 351], "73": [333, 334], "57": [333, 334], "63": [333, 334, 422, 423], "cross": [333, 358, 359, 360, 361, 434], "vif": [333, 335], "35": [333, 335, 422, 423], "det": 333, "92": [333, 336], "293": [333, 336], "47": [333, 336], "offset": [333, 337, 354, 400, 401], "axis1": [333, 337, 362, 375], "axis2": [333, 337], "eigh": 333, "eigendecomposit": [333, 338], "qlq\u1d40": [333, 338], "orthogon": [333, 338], "eig": [333, 338], "namedtupl": [333, 338, 348, 351, 414, 415, 416], "eigenvalu": [333, 338, 339], "eigenvector": [333, 338], "eigvalsh": 333, "25": [333, 340, 358, 360, 422, 423], "75": [333, 340], "prepend": [333, 341], "matrix_norm": 333, "ord": [333, 342, 356], "fro": [333, 342], "matrix_pow": 333, "matrix_rank": 333, "rtol": [333, 344, 347], "singular": [333, 344, 347, 351, 352], "toler": [333, 344, 347], "largest_singular_valu": [333, 344, 347], "outer": [333, 378, 379, 380, 381, 422, 423], "array_lik": [333, 346], "pinv": [333, 434], "moor": [333, 347], "penros": [333, 347], "pseudo": [333, 347], "qr": 333, "orthonorm": [333, 348, 351], "slodget": 333, "logdet": [333, 349], "equat": [333, 350, 422, 423], "coeffici": [333, 350], "svd": [333, 434], "full_matric": [333, 351], "usvh": [333, 351], "vh": [333, 351], "hermitian": [333, 351], "descend": [333, 351, 352, 419, 420, 421], "et": [333, 351], "cetera": [333, 351], "adjoint": [333, 351], "reconstruct": [333, 351, 414, 415, 417], "reconstructed_x": [333, 351], "svdval": 333, "tensordot": 333, "contract": [333, 353, 422, 423], "26": [333, 353, 422, 423], "doubl": [333, 353], "89": [333, 353, 422, 429], "76": [333, 353, 422, 423], "vecdot": 333, "vector_norm": 333, "singleton": [333, 356, 362, 373, 409, 411, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "liter": [333, 356], "manhattan": [333, 356], "l2": [333, 356], "euclidean": [333, 356], "vector_to_skew_symmetric_matrix": [333, 434], "mathbf": [333, 357], "mathbb": [333, 357], "skew": [333, 357], "binary_cross_entropi": 358, "entropi": [358, 359, 360, 361], "predict": [358, 359, 360, 361], "discret": [358, 360], "smooth": [358, 360, 361], "3862944": [358, 360], "35667497": [358, 360, 361], "sparse_cross_entropi": 358, "spars": [358, 361], "logit": [358, 361], "3025851": [358, 361], "693": [358, 361], "357": [358, 361], "join": [362, 364, 374, 434], "constant_pad": 362, "pad_width": [362, 365, 377], "before_1": [362, 365, 377], "after_1": [362, 365, 377], "before_n": [362, 365, 377], "after_n": [362, 365, 377], "insert": [362, 366, 382, 387, 409, 410], "reorder": [362, 367], "permute_dim": 362, "permut": [362, 368, 375], "repetit": [362, 369, 376], "beyond": [362, 371], "restor": [362, 371], "with_remaind": [362, 372], "45": [362, 372, 422, 423], "squeez": [362, 434], "famili": [362, 374], "intxx": [362, 374], "floatxx": [362, 374], "swapax": 362, "axis0": [362, 375], "tile": [362, 434], "rep": [362, 376], "zero_pad": [362, 434], "fomaml_step": 378, "inner_cost_fn": [378, 379, 380], "outer_cost_fn": [378, 379, 380], "inner_grad_step": [378, 379, 380, 381], "inner_learning_r": [378, 379, 380, 381], "inner_optimization_step": [378, 379, 380, 381], "inner_batch_fn": [378, 379, 380], "outer_batch_fn": [378, 379, 380], "average_across_step": [378, 379, 380], "inner_v": [378, 379, 380], "keep_inner_v": [378, 379, 380], "outer_v": [378, 379, 380], "keep_outer_v": [378, 379, 380], "return_inner_v": [378, 379, 380, 381], "num_task": [378, 379, 380, 381], "maml": [378, 379, 380], "recev": [378, 379, 380], "maml_step": 378, "rece": [378, 380], "reptile_step": 378, "cost_fn": [378, 381], "reptil": [378, 381], "receivng": [378, 381], "all_nested_indic": 382, "include_nest": [382, 383], "_index": [382, 383, 393], "_base": [382, 383, 392, 393], "begin": [382, 383, 393], "copy_nest": 382, "include_deriv": [382, 384, 394], "to_mut": [382, 384, 394], "mutabl": [382, 384, 394], "insert_into_nest_at_index": 382, "insert_into_nest_at_indic": 382, "map_nest_at_index": 382, "map_nest_at_indic": 382, "multi_index_nest": 382, "nested_ani": 382, "check_nest": [382, 392, 393], "conditon": [382, 392, 393], "nested_indices_wher": 382, "to_ignor": [382, 393], "_depth": [382, 394], "_tuple_check_fn": [382, 394], "_list_check_fn": [382, 394], "_dict_check_fn": [382, 394], "wherebi": [382, 394], "nested_multi_map": 382, "key_chain": [382, 395], "to_appli": [382, 395], "prune_unappli": [382, 395], "prune": [382, 395, 396, 397], "leftmost": [382, 395], "nest0": [382, 395], "funciton": [382, 395], "prune_nest_at_index": 382, "prune_nest_at_indic": 382, "set_nest_at_index": 382, "set_nest_at_indic": 382, "layer_norm": 400, "normalized_idx": [400, 401], "new_std": [400, 401, 469, 470], "mini": [400, 401, 469, 470], "gamma": [400, 401], "beta": [400, 401], "multinomi": 402, "population_s": [402, 403], "draw": [402, 403, 405, 406], "unnorm": [402, 403], "drawn": [402, 403, 404, 405, 406], "home": [402, 403, 404, 405, 406], "randint": [402, 434], "uniformli": [402, 404, 406], "highest": [402, 404], "parameter": [402, 405, 406], "6444774682897879": [402, 405], "boundari": [402, 406], "89150229": [402, 406], "seed_valu": [402, 407], "shuffl": [402, 434], "argmax": [409, 434], "occurr": [409, 410, 411, 414, 415], "argmin": [409, 434], "yield": [409, 413], "unique_al": 414, "x_j": [414, 415, 418], "impli": [414, 415, 418], "inverse_indic": [414, 415, 417], "aggreg": [414, 415], "fourth": [414, 415], "unique_count": 414, "unique_invers": 414, "unique_valu": 414, "argsort": 419, "ascend": [419, 420], "einsum": 422, "einstein": [422, 423], "summat": [422, 423], "seq": [422, 423], "imagin": [422, 423], "suppos": [422, 423], "chanc": [422, 423], "22": [422, 423], "bigger": [422, 423], "jk": [422, 423], "ik": [422, 423], "1d": [422, 423, 455, 456, 457], "24": [422, 423], "36": [422, 423], "66": [422, 423], "84": [422, 423], "104": [422, 423], "126": [422, 423], "510": [422, 423], "18": [422, 423], "21": [422, 423], "27": [422, 423], "33": [422, 423], "40": [422, 423], "44": [422, 423], "48": [422, 423], "52": [422, 423], "60": [422, 423], "65": [422, 423], "72": [422, 423], "78": [422, 423], "49": [422, 423], "77": [422, 423], "91": [422, 423], "98": [422, 423], "88": [422, 423], "112": [422, 423], "81": [422, 423], "99": [422, 423], "108": [422, 423], "117": [422, 423], "sentinel": [422, 424, 426], "unsign": [422, 427, 429], "degre": [422, 428, 430], "freedom": [422, 428, 430], "bessel": [422, 428, 430], "8164966": [422, 428], "varianc": [422, 430], "unbias": [422, 430], "autom": 434, "grow": 434, "ai": 434, "got": 434, "colab": 434, "sharp": 434, "immedi": 434, "favourit": 434, "jax_concat": 434, "tf_concat": 434, "np_concat": 434, "mx_concat": 434, "torch_concat": 434, "prompt": 434, "get_devic": 434, "reduce_prod": 434, "linalg": 434, "neural_net": 434, "ecosystem": [434, 440], "popular": [434, 440], "acceler": 434, "articl": 434, "lenton2021ivi": 434, "inter": 434, "portabl": 434, "author": 434, "lenton": 434, "daniel": 434, "pardo": 434, "fabio": 434, "falck": 434, "fabian": 434, "jame": 434, "stephen": 434, "clark": 434, "ronald": 434, "journal": 434, "arxiv": 434, "preprint": 434, "2102": 434, "02886": 434, "2021": 434, "add_array_spec": 437, "fn_array_spec": 437, "inspect": [438, 439], "geglu": 441, "native_modul": [444, 445], "native_module_class": [444, 445], "firstlayersiren": 446, "kaimingnorm": [446, 450], "negative_slop": 446, "Ones": 446, "siren": 446, "w0": [446, 452], "filter_s": [455, 456, 457], "conv1dtranspos": 455, "filter_shap": [455, 458, 459, 460, 461, 462], "conv2dtranspos": 455, "conv3dtranspos": 455, "depthwiseconv2d": 455, "num_channel": [455, 462], "num_lay": [455, 464], "return_sequ": [455, 464], "return_st": [455, 464], "get_initial_st": [455, 464], "dens": [455, 465], "multiheadattent": 455, "query_dim": [455, 466], "head_dim": [455, 466], "dropout_r": [455, 466], "context_dim": [455, 466], "with_to_q_fn": [455, 466], "with_to_kv_fn": [455, 466], "with_to_out_fn": [455, 466], "build_mod": [455, 466, 467, 468], "on_init": [455, 466, 467, 468], "__call__": [455, 466, 467, 468], "store_var": [467, 468], "arg_stateful_idx": [467, 468], "kwarg_stateful_idx": [467, 468], "fallback_to_non_compil": [467, 468, 471, 475], "with_partial_v": [467, 468], "initialz": [467, 468], "from_cal": [467, 468], "check_submod_ret": [467, 468], "get_mod_kei": [467, 468], "top_mod": [467, 468], "mod_depth": [467, 468], "mod_height": [467, 468], "mod_with_top_mod_key_chain": [467, 468], "save_weight": [467, 468], "weights_path": [467, 468], "show_mod_in_top_mod": [467, 468], "upper_depth": [467, 468], "lower_depth": [467, 468], "show_structur": [467, 468], "show_v_in_top_v": [467, 468], "sub_mod": [467, 468], "show_v": [467, 468], "track_submod_call_ord": [467, 468], "track_submod_ret": [467, 468], "v_with_top_v_key_chain": [467, 468], "layernorm": 469, "normalized_shap": [469, 470], "elementwise_affin": [469, 470], "trail": [469, 470], "affin": [469, 470], "0001": [471, 472, 473], "init_on_first_step": [471, 475], "ignore_miss": [471, 475], "overriden": [471, 475], "sgd": 471, "stochast": [471, 476], "sub_modul": [477, 478], "color": [480, 481], "green": [480, 481]}, "objects": {"ivy": [[0, 0, 0, "-", "backend_handler"], [21, 0, 0, "-", "debugger"], [61, 0, 0, "-", "func_wrapper"], [437, 0, 0, "-", "inspection"], [480, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 3, 1, "", "choose_random_backend"], [3, 3, 1, "", "clear_backend_stack"], [4, 3, 1, "", "current_backend"], [5, 3, 1, "", "get_backend"], [6, 3, 1, "", "set_backend"], [7, 3, 1, "", "try_import_ivy_jax"], [8, 3, 1, "", "try_import_ivy_mxnet"], [9, 3, 1, "", "try_import_ivy_numpy"], [10, 3, 1, "", "try_import_ivy_tf"], [11, 3, 1, "", "try_import_ivy_torch"], [12, 3, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.debugger": [[22, 3, 1, "", "debug_mode"], [23, 3, 1, "", "set_breakpoint_debug_mode"], [24, 3, 1, "", "set_debug_mode"], [25, 3, 1, "", "set_exception_debug_mode"], [26, 3, 1, "", "unset_debug_mode"]], "ivy.functional.ivy": [[63, 0, 0, "-", "activations"], [71, 0, 0, "-", "compilation"], [73, 0, 0, "-", "constants"], [74, 0, 0, "-", "creation"], [93, 0, 0, "-", "data_type"], [123, 0, 0, "-", "device"], [173, 0, 0, "-", "elementwise"], [233, 0, 0, "-", "general"], [296, 0, 0, "-", "gradients"], [312, 0, 0, "-", "image"], [320, 0, 0, "-", "layers"], [333, 0, 0, "-", "linear_algebra"], [358, 0, 0, "-", "losses"], [362, 0, 0, "-", "manipulation"], [378, 0, 0, "-", "meta"], [382, 0, 0, "-", "nest"], [400, 0, 0, "-", "norms"], [402, 0, 0, "-", "random"], [409, 0, 0, "-", "searching"], [414, 0, 0, "-", "set"], [419, 0, 0, "-", "sorting"], [422, 0, 0, "-", "statistical"], [431, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[64, 3, 1, "", "gelu"], [65, 3, 1, "", "leaky_relu"], [66, 3, 1, "", "relu"], [67, 3, 1, "", "sigmoid"], [68, 3, 1, "", "softmax"], [69, 3, 1, "", "softplus"], [70, 3, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[72, 3, 1, "", "compile"]], "ivy.functional.ivy.constants": [[73, 4, 1, "", "e"], [73, 4, 1, "", "inf"], [73, 4, 1, "", "nan"], [73, 4, 1, "", "newaxis"], [73, 4, 1, "", "pi"]], "ivy.functional.ivy.creation": [[75, 3, 1, "", "arange"], [74, 3, 1, "", "array"], [76, 3, 1, "", "asarray"], [77, 3, 1, "", "empty"], [78, 3, 1, "", "empty_like"], [79, 3, 1, "", "eye"], [80, 3, 1, "", "from_dlpack"], [81, 3, 1, "", "full"], [82, 3, 1, "", "full_like"], [83, 3, 1, "", "linspace"], [84, 3, 1, "", "logspace"], [85, 3, 1, "", "meshgrid"], [86, 3, 1, "", "native_array"], [87, 3, 1, "", "ones"], [88, 3, 1, "", "ones_like"], [89, 3, 1, "", "tril"], [90, 3, 1, "", "triu"], [91, 3, 1, "", "zeros"], [92, 3, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[93, 1, 1, "", "DefaultDtype"], [93, 1, 1, "", "DefaultFloatDtype"], [93, 1, 1, "", "DefaultIntDtype"], [97, 3, 1, "", "as_ivy_dtype"], [98, 3, 1, "", "as_native_dtype"], [99, 3, 1, "", "astype"], [100, 3, 1, "", "broadcast_arrays"], [101, 3, 1, "", "broadcast_to"], [102, 3, 1, "", "can_cast"], [103, 3, 1, "", "closest_valid_dtype"], [104, 3, 1, "", "convert_dtype"], [105, 3, 1, "", "default_dtype"], [106, 3, 1, "", "default_float_dtype"], [107, 3, 1, "", "default_int_dtype"], [108, 3, 1, "", "dtype"], [109, 3, 1, "", "dtype_bits"], [110, 3, 1, "", "finfo"], [111, 3, 1, "", "iinfo"], [112, 3, 1, "", "invalid_dtype"], [113, 3, 1, "", "is_float_dtype"], [114, 3, 1, "", "is_int_dtype"], [115, 3, 1, "", "result_type"], [116, 3, 1, "", "set_default_dtype"], [117, 3, 1, "", "set_default_float_dtype"], [118, 3, 1, "", "set_default_int_dtype"], [119, 3, 1, "", "unset_default_dtype"], [120, 3, 1, "", "unset_default_float_dtype"], [121, 3, 1, "", "unset_default_int_dtype"], [122, 3, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[93, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[93, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[93, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[123, 1, 1, "", "DefaultDevice"], [125, 1, 1, "", "DevClonedItem"], [126, 1, 1, "", "DevClonedIter"], [127, 1, 1, "", "DevClonedNest"], [128, 1, 1, "", "DevDistItem"], [129, 1, 1, "", "DevDistIter"], [130, 1, 1, "", "DevDistNest"], [123, 1, 1, "", "DevManager"], [132, 1, 1, "", "DevMapper"], [133, 1, 1, "", "DevMapperMultiProc"], [123, 1, 1, "", "MultiDev"], [135, 1, 1, "", "MultiDevItem"], [136, 1, 1, "", "MultiDevIter"], [137, 1, 1, "", "MultiDevNest"], [138, 1, 1, "", "Profiler"], [139, 3, 1, "", "as_ivy_dev"], [140, 3, 1, "", "as_native_dev"], [141, 3, 1, "", "clear_mem_on_dev"], [142, 3, 1, "", "default_device"], [143, 3, 1, "", "dev"], [144, 3, 1, "", "dev_clone"], [145, 3, 1, "", "dev_clone_array"], [146, 3, 1, "", "dev_clone_iter"], [147, 3, 1, "", "dev_clone_nest"], [148, 3, 1, "", "dev_dist"], [149, 3, 1, "", "dev_dist_array"], [150, 3, 1, "", "dev_dist_iter"], [151, 3, 1, "", "dev_dist_nest"], [152, 3, 1, "", "dev_unify"], [153, 3, 1, "", "dev_unify_array"], [154, 3, 1, "", "dev_unify_iter"], [155, 3, 1, "", "dev_unify_nest"], [156, 3, 1, "", "dev_util"], [157, 3, 1, "", "get_all_arrays_on_dev"], [158, 3, 1, "", "gpu_is_available"], [159, 3, 1, "", "num_arrays_on_dev"], [160, 3, 1, "", "num_cpu_cores"], [161, 3, 1, "", "num_gpus"], [162, 3, 1, "", "percent_used_mem_on_dev"], [163, 3, 1, "", "print_all_arrays_on_dev"], [164, 3, 1, "", "set_default_device"], [165, 3, 1, "", "set_split_factor"], [166, 3, 1, "", "split_factor"], [167, 3, 1, "", "split_func_call"], [168, 3, 1, "", "to_dev"], [169, 3, 1, "", "total_mem_on_dev"], [170, 3, 1, "", "tpu_is_available"], [171, 3, 1, "", "unset_default_device"], [172, 3, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[123, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[123, 2, 1, "", "__init__"], [123, 2, 1, "", "da_tune_step"], [123, 5, 1, "", "dim_size"], [123, 2, 1, "", "ds_tune_step"], [123, 2, 1, "", "map"], [123, 2, 1, "", "repeated_config_check"], [123, 5, 1, "", "tune_step"], [123, 5, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[132, 2, 1, "", "__init__"], [132, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[133, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[123, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "items"], [135, 2, 1, "", "keys"], [135, 5, 1, "", "shape"], [135, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "at_dev"], [136, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "start"], [138, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[174, 3, 1, "", "abs"], [175, 3, 1, "", "acos"], [176, 3, 1, "", "acosh"], [177, 3, 1, "", "add"], [178, 3, 1, "", "asin"], [179, 3, 1, "", "asinh"], [180, 3, 1, "", "atan"], [181, 3, 1, "", "atan2"], [182, 3, 1, "", "atanh"], [183, 3, 1, "", "bitwise_and"], [184, 3, 1, "", "bitwise_invert"], [185, 3, 1, "", "bitwise_left_shift"], [186, 3, 1, "", "bitwise_or"], [187, 3, 1, "", "bitwise_right_shift"], [188, 3, 1, "", "bitwise_xor"], [189, 3, 1, "", "ceil"], [190, 3, 1, "", "cos"], [191, 3, 1, "", "cosh"], [192, 3, 1, "", "divide"], [193, 3, 1, "", "equal"], [194, 3, 1, "", "erf"], [195, 3, 1, "", "exp"], [196, 3, 1, "", "expm1"], [197, 3, 1, "", "floor"], [198, 3, 1, "", "floor_divide"], [199, 3, 1, "", "greater"], [200, 3, 1, "", "greater_equal"], [201, 3, 1, "", "isfinite"], [202, 3, 1, "", "isinf"], [203, 3, 1, "", "isnan"], [204, 3, 1, "", "less"], [205, 3, 1, "", "less_equal"], [206, 3, 1, "", "log"], [207, 3, 1, "", "log10"], [208, 3, 1, "", "log1p"], [209, 3, 1, "", "log2"], [210, 3, 1, "", "logaddexp"], [211, 3, 1, "", "logical_and"], [212, 3, 1, "", "logical_not"], [213, 3, 1, "", "logical_or"], [214, 3, 1, "", "logical_xor"], [215, 3, 1, "", "maximum"], [216, 3, 1, "", "minimum"], [217, 3, 1, "", "multiply"], [218, 3, 1, "", "negative"], [219, 3, 1, "", "not_equal"], [220, 3, 1, "", "positive"], [221, 3, 1, "", "pow"], [222, 3, 1, "", "remainder"], [223, 3, 1, "", "round"], [224, 3, 1, "", "sign"], [225, 3, 1, "", "sin"], [226, 3, 1, "", "sinh"], [227, 3, 1, "", "sqrt"], [228, 3, 1, "", "square"], [229, 3, 1, "", "subtract"], [230, 3, 1, "", "tan"], [231, 3, 1, "", "tanh"], [232, 3, 1, "", "trunc"]], "ivy.functional.ivy.general": [[234, 3, 1, "", "all_equal"], [235, 3, 1, "", "arg_names"], [236, 3, 1, "", "array_equal"], [237, 3, 1, "", "arrays_equal"], [238, 3, 1, "", "assert_supports_inplace"], [239, 3, 1, "", "cache_fn"], [240, 3, 1, "", "clip_matrix_norm"], [241, 3, 1, "", "clip_vector_norm"], [242, 3, 1, "", "container_types"], [243, 3, 1, "", "copy_array"], [244, 3, 1, "", "cumprod"], [245, 3, 1, "", "cumsum"], [246, 3, 1, "", "current_backend_str"], [247, 3, 1, "", "default"], [248, 3, 1, "", "einops_rearrange"], [249, 3, 1, "", "einops_reduce"], [250, 3, 1, "", "einops_repeat"], [251, 3, 1, "", "exists"], [252, 3, 1, "", "floormod"], [253, 3, 1, "", "fourier_encode"], [254, 3, 1, "", "gather"], [255, 3, 1, "", "gather_nd"], [256, 3, 1, "", "get_all_arrays_in_memory"], [257, 3, 1, "", "get_min_base"], [258, 3, 1, "", "get_min_denominator"], [259, 3, 1, "", "get_num_dims"], [260, 3, 1, "", "get_referrers_recursive"], [261, 3, 1, "", "has_nans"], [262, 3, 1, "", "indices_where"], [263, 3, 1, "", "inplace_arrays_supported"], [264, 3, 1, "", "inplace_decrement"], [265, 3, 1, "", "inplace_increment"], [266, 3, 1, "", "inplace_update"], [267, 3, 1, "", "inplace_variables_supported"], [268, 3, 1, "", "is_array"], [269, 3, 1, "", "is_ivy_array"], [270, 3, 1, "", "is_ivy_container"], [271, 3, 1, "", "is_native_array"], [272, 3, 1, "", "match_kwargs"], [273, 3, 1, "", "multiprocessing"], [274, 3, 1, "", "num_arrays_in_memory"], [275, 3, 1, "", "one_hot"], [276, 3, 1, "", "print_all_arrays_in_memory"], [277, 3, 1, "", "queue_timeout"], [278, 3, 1, "", "scatter_flat"], [279, 3, 1, "", "scatter_nd"], [280, 3, 1, "", "set_min_base"], [281, 3, 1, "", "set_min_denominator"], [282, 3, 1, "", "set_queue_timeout"], [283, 3, 1, "", "set_tmp_dir"], [284, 3, 1, "", "shape"], [285, 3, 1, "", "shape_to_tuple"], [286, 3, 1, "", "stable_divide"], [287, 3, 1, "", "stable_pow"], [288, 3, 1, "", "supports_inplace"], [289, 3, 1, "", "tmp_dir"], [290, 3, 1, "", "to_list"], [291, 3, 1, "", "to_numpy"], [292, 3, 1, "", "to_scalar"], [293, 3, 1, "", "try_else_none"], [294, 3, 1, "", "unstack"], [295, 3, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[296, 1, 1, "", "GradientTracking"], [298, 3, 1, "", "adam_step"], [299, 3, 1, "", "adam_update"], [300, 3, 1, "", "execute_with_gradients"], [301, 3, 1, "", "gradient_descent_update"], [302, 3, 1, "", "is_variable"], [303, 3, 1, "", "lamb_update"], [304, 3, 1, "", "lars_update"], [305, 3, 1, "", "optimizer_update"], [306, 3, 1, "", "set_with_grads"], [307, 3, 1, "", "stop_gradient"], [308, 3, 1, "", "unset_with_grads"], [309, 3, 1, "", "variable"], [310, 3, 1, "", "variable_data"], [311, 3, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[296, 2, 1, "", "__init__"]], "ivy.functional.ivy.image": [[313, 3, 1, "", "bilinear_resample"], [314, 3, 1, "", "float_img_to_uint8_img"], [315, 3, 1, "", "gradient_image"], [316, 3, 1, "", "linear_resample"], [317, 3, 1, "", "random_crop"], [318, 3, 1, "", "stack_images"], [319, 3, 1, "", "uint8_img_to_float_img"]], "ivy.functional.ivy.layers": [[321, 3, 1, "", "conv1d"], [322, 3, 1, "", "conv1d_transpose"], [323, 3, 1, "", "conv2d"], [324, 3, 1, "", "conv2d_transpose"], [325, 3, 1, "", "conv3d"], [326, 3, 1, "", "conv3d_transpose"], [327, 3, 1, "", "depthwise_conv2d"], [328, 3, 1, "", "dropout"], [329, 3, 1, "", "linear"], [330, 3, 1, "", "lstm_update"], [331, 3, 1, "", "multi_head_attention"], [332, 3, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[334, 3, 1, "", "cholesky"], [335, 3, 1, "", "cross"], [336, 3, 1, "", "det"], [337, 3, 1, "", "diagonal"], [338, 3, 1, "", "eigh"], [339, 3, 1, "", "eigvalsh"], [340, 3, 1, "", "inv"], [341, 3, 1, "", "matmul"], [342, 3, 1, "", "matrix_norm"], [343, 3, 1, "", "matrix_power"], [344, 3, 1, "", "matrix_rank"], [345, 3, 1, "", "matrix_transpose"], [346, 3, 1, "", "outer"], [347, 3, 1, "", "pinv"], [348, 3, 1, "", "qr"], [349, 3, 1, "", "slodget"], [350, 3, 1, "", "solve"], [351, 3, 1, "", "svd"], [352, 3, 1, "", "svdvals"], [353, 3, 1, "", "tensordot"], [354, 3, 1, "", "trace"], [355, 3, 1, "", "vecdot"], [356, 3, 1, "", "vector_norm"], [357, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[359, 3, 1, "", "binary_cross_entropy"], [360, 3, 1, "", "cross_entropy"], [361, 3, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[363, 3, 1, "", "clip"], [364, 3, 1, "", "concat"], [365, 3, 1, "", "constant_pad"], [366, 3, 1, "", "expand_dims"], [367, 3, 1, "", "flip"], [368, 3, 1, "", "permute_dims"], [369, 3, 1, "", "repeat"], [370, 3, 1, "", "reshape"], [371, 3, 1, "", "roll"], [372, 3, 1, "", "split"], [373, 3, 1, "", "squeeze"], [374, 3, 1, "", "stack"], [375, 3, 1, "", "swapaxes"], [376, 3, 1, "", "tile"], [377, 3, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[379, 3, 1, "", "fomaml_step"], [380, 3, 1, "", "maml_step"], [381, 3, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[383, 3, 1, "", "all_nested_indices"], [384, 3, 1, "", "copy_nest"], [385, 3, 1, "", "index_nest"], [386, 3, 1, "", "insert_into_nest_at_index"], [387, 3, 1, "", "insert_into_nest_at_indices"], [388, 3, 1, "", "map"], [389, 3, 1, "", "map_nest_at_index"], [390, 3, 1, "", "map_nest_at_indices"], [391, 3, 1, "", "multi_index_nest"], [392, 3, 1, "", "nested_any"], [393, 3, 1, "", "nested_indices_where"], [394, 3, 1, "", "nested_map"], [395, 3, 1, "", "nested_multi_map"], [396, 3, 1, "", "prune_nest_at_index"], [397, 3, 1, "", "prune_nest_at_indices"], [398, 3, 1, "", "set_nest_at_index"], [399, 3, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[401, 3, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[403, 3, 1, "", "multinomial"], [404, 3, 1, "", "randint"], [405, 3, 1, "", "random_normal"], [406, 3, 1, "", "random_uniform"], [407, 3, 1, "", "seed"], [408, 3, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[410, 3, 1, "", "argmax"], [411, 3, 1, "", "argmin"], [412, 3, 1, "", "nonzero"], [413, 3, 1, "", "where"]], "ivy.functional.ivy.set": [[415, 3, 1, "", "unique_all"], [416, 3, 1, "", "unique_counts"], [417, 3, 1, "", "unique_inverse"], [418, 3, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[420, 3, 1, "", "argsort"], [421, 3, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[423, 3, 1, "", "einsum"], [424, 3, 1, "", "max"], [425, 3, 1, "", "mean"], [426, 3, 1, "", "min"], [427, 3, 1, "", "prod"], [428, 3, 1, "", "std"], [429, 3, 1, "", "sum"], [430, 3, 1, "", "var"]], "ivy.functional.ivy.utility": [[432, 3, 1, "", "all"], [433, 3, 1, "", "any"]], "ivy.inspection": [[438, 3, 1, "", "add_array_specs"], [439, 3, 1, "", "fn_array_spec"]], "ivy.stateful": [[441, 0, 0, "-", "activations"], [444, 0, 0, "-", "converters"], [446, 0, 0, "-", "initializers"], [455, 0, 0, "-", "layers"], [467, 0, 0, "-", "module"], [469, 0, 0, "-", "norms"], [471, 0, 0, "-", "optimizers"], [477, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[442, 1, 1, "", "GEGLU"], [443, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[442, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[443, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[445, 3, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[446, 1, 1, "", "Constant"], [448, 1, 1, "", "FirstLayerSiren"], [449, 1, 1, "", "GlorotUniform"], [446, 1, 1, "", "KaimingNormal"], [451, 1, 1, "", "Ones"], [452, 1, 1, "", "Siren"], [446, 1, 1, "", "Uniform"], [454, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[446, 2, 1, "", "__init__"], [446, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[448, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[449, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[446, 2, 1, "", "__init__"], [446, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[451, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[452, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[446, 2, 1, "", "__init__"], [446, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[454, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[456, 1, 1, "", "Conv1D"], [457, 1, 1, "", "Conv1DTranspose"], [458, 1, 1, "", "Conv2D"], [459, 1, 1, "", "Conv2DTranspose"], [460, 1, 1, "", "Conv3D"], [461, 1, 1, "", "Conv3DTranspose"], [462, 1, 1, "", "DepthwiseConv2D"], [463, 1, 1, "", "Dropout"], [464, 1, 1, "", "LSTM"], [465, 1, 1, "", "Linear"], [466, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[456, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[457, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[458, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[459, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[460, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[461, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[462, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[463, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[464, 2, 1, "", "__init__"], [464, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[465, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[466, 2, 1, "", "__init__"]], "ivy.stateful.module": [[468, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[468, 2, 1, "", "__init__"], [468, 2, 1, "", "build"], [468, 5, 1, "", "build_mode"], [468, 5, 1, "", "built"], [468, 2, 1, "", "check_submod_rets"], [468, 2, 1, "", "get_mod_key"], [468, 2, 1, "", "mod_depth"], [468, 2, 1, "", "mod_height"], [468, 2, 1, "", "mod_with_top_mod_key_chain"], [468, 2, 1, "", "save_weights"], [468, 2, 1, "", "show_mod_in_top_mod"], [468, 2, 1, "", "show_structure"], [468, 2, 1, "", "show_v_in_top_v"], [468, 2, 1, "", "sub_mods"], [468, 2, 1, "", "track_submod_call_order"], [468, 2, 1, "", "track_submod_rets"], [468, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[470, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[470, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[472, 1, 1, "", "Adam"], [473, 1, 1, "", "LAMB"], [474, 1, 1, "", "LARS"], [475, 1, 1, "", "Optimizer"], [476, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[472, 2, 1, "", "__init__"], [472, 2, 1, "", "set_state"], [472, 5, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[473, 2, 1, "", "__init__"], [473, 2, 1, "", "set_state"], [473, 5, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[474, 2, 1, "", "__init__"], [474, 2, 1, "", "set_state"], [474, 5, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[475, 2, 1, "", "__init__"], [475, 2, 1, "", "set_state"], [475, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[476, 2, 1, "", "__init__"], [476, 2, 1, "", "set_state"], [476, 5, 1, "", "state"]], "ivy.stateful.sequential": [[478, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[478, 2, 1, "", "__init__"]], "ivy.verbosity": [[481, 3, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"]}, "titleterms": {"backend": [0, 28, 34, 43], "handler": [0, 43], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 434], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 60], "competit": 15, "do": 15, "work": 15, "The": [15, 19, 45, 60], "arrai": [15, 31, 36, 41, 45], "api": [15, 28, 31, 37, 43, 45, 47, 48], "why": 16, "unifi": [16, 45], "No": 16, "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 434], "set": [18, 34, 414], "up": 18, "clone": 18, "ivi": [18, 28, 30, 32, 36, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59], "pycharm": 18, "docker": 18, "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "pre": 18, "commit": [18, 19], "basic": 19, "manag": 19, "your": 19, "fork": 19, "todo": 19, "list": 19, "issu": 19, "creat": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "build": [20, 43], "doc": 20, "make_doc": 20, "sh": 20, "entrypoint": 20, "_make_doc": 20, "generate_src_rst_fil": 20, "py": 20, "sphinx": 20, "correct_built_html_fil": 20, "remove_fil": 20, "debugg": 21, "debug_mod": 22, "set_breakpoint_debug_mod": 23, "set_debug_mod": 24, "set_exception_debug_mod": 25, "unset_debug_mod": 26, "deep": 27, "dive": 27, "navig": 28, "code": 28, "categor": 28, "submodul": 28, "design": [28, 42, 434], "docstr": [29, 30], "exampl": [30, 41], "tan": [30, 230], "roll": [30, 371], "add": [30, 177], "test": [31, 32], "hypothesi": 32, "data": [32, 38, 46, 60, 93, 414, 415, 418], "gener": [32, 233], "self": 32, "consist": 32, "explicit": 32, "test_array_funct": 32, "function": [33, 35, 38, 39, 41, 43, 48, 60], "type": [33, 38, 60, 93], "primari": 33, "composit": 33, "mix": 33, "standalon": 33, "nestabl": [33, 41], "conveni": 33, "wrap": 35, "nativ": 36, "handl": 36, "contain": [37, 46], "instanc": [37, 45], "method": [37, 45, 46], "static": 37, "special": 37, "modul": [38, 39, 47, 467, 468], "argument": [38, 39, 40, 41], "other": [38, 39], "devic": [39, 41, 123], "inplac": 40, "updat": 40, "out": [40, 41], "copi": 40, "dtype": [41, 108], "integ": 41, "sequenc": 41, "block": 43, "framework": [43, 44], "graph": [43, 48], "compil": [43, 48, 71, 72], "class": 45, "oper": [45, 60], "monkei": 45, "patch": 45, "construct": 46, "represent": 46, "recurs": 46, "built": 46, "ins": 46, "access": 46, "save": 46, "load": 46, "comparison": 46, "custom": [46, 60], "us": 46, "case": 46, "compartment": 46, "configur": 46, "network": [46, 48], "weight": 46, "state": [47, 60], "initi": [47, 446], "optim": [47, 471, 475], "transpil": 48, "frontend": 48, "role": 48, "convert": [48, 444], "model": [48, 55, 60], "builder": 50, "ecosystem": 51, "gym": [52, 59], "mech": 53, "memori": [54, 59], "robot": [56, 59], "vision": [57, 59], "extens": [58, 434], "appli": 59, "librari": 59, "mechan": 59, "faq": 60, "dynam": 60, "size": 60, "shape": [60, 284, 414, 415, 418], "check": 60, "control": 60, "flow": 60, "auto": 60, "differenti": 60, "replica": 60, "parallel": 60, "support": 60, "altern": 60, "structur": 60, "pipelin": 60, "func": 61, "wrapper": 61, "activ": [63, 441], "gelu": [64, 443], "leaky_relu": 65, "relu": 66, "sigmoid": 67, "softmax": 68, "softplu": 69, "tanh": [70, 231], "constant": 73, "creation": 74, "note": [74, 80], "arang": 75, "asarrai": 76, "empti": 77, "empty_lik": 78, "ey": 79, "from_dlpack": 80, "full": 81, "full_lik": 82, "linspac": 83, "logspac": 84, "meshgrid": 85, "native_arrai": 86, "ones": 87, "ones_lik": 88, "tril": 89, "triu": 90, "zero": [91, 454], "zeros_lik": 92, "as_ivy_dtyp": 97, "as_native_dtyp": 98, "astyp": 99, "broadcast_arrai": 100, "broadcast_to": 101, "can_cast": 102, "closest_valid_dtyp": 103, "convert_dtyp": 104, "default_dtyp": 105, "default_float_dtyp": 106, "default_int_dtyp": 107, "dtype_bit": 109, "finfo": 110, "iinfo": 111, "invalid_dtyp": 112, "is_float_dtyp": 113, "is_int_dtyp": 114, "result_typ": 115, "set_default_dtyp": 116, "set_default_float_dtyp": 117, "set_default_int_dtyp": 118, "unset_default_dtyp": 119, "unset_default_float_dtyp": 120, "unset_default_int_dtyp": 121, "valid_dtyp": 122, "devcloneditem": 125, "devclonedit": 126, "devclonednest": 127, "devdistitem": 128, "devdistit": 129, "devdistnest": 130, "devmapp": 132, "devmappermultiproc": 133, "multidevitem": 135, "multidevit": 136, "multidevnest": 137, "profil": 138, "as_ivy_dev": 139, "as_native_dev": 140, "clear_mem_on_dev": 141, "default_devic": 142, "dev": 143, "dev_clon": 144, "dev_clone_arrai": 145, "dev_clone_it": 146, "dev_clone_nest": 147, "dev_dist": 148, "dev_dist_arrai": 149, "dev_dist_it": 150, "dev_dist_nest": 151, "dev_unifi": 152, "dev_unify_arrai": 153, "dev_unify_it": 154, "dev_unify_nest": 155, "dev_util": 156, "get_all_arrays_on_dev": 157, "gpu_is_avail": 158, "num_arrays_on_dev": 159, "num_cpu_cor": 160, "num_gpu": 161, "percent_used_mem_on_dev": 162, "print_all_arrays_on_dev": 163, "set_default_devic": 164, "set_split_factor": 165, "split_factor": 166, "split_func_cal": 167, "to_dev": 168, "total_mem_on_dev": 169, "tpu_is_avail": 170, "unset_default_devic": 171, "used_mem_on_dev": 172, "elementwis": 173, "ab": 174, "aco": 175, "acosh": 176, "asin": 178, "asinh": 179, "atan": 180, "atan2": 181, "atanh": 182, "bitwise_and": 183, "bitwise_invert": 184, "bitwise_left_shift": 185, "bitwise_or": 186, "bitwise_right_shift": 187, "bitwise_xor": 188, "ceil": 189, "co": 190, "cosh": 191, "divid": 192, "equal": 193, "erf": 194, "exp": 195, "expm1": 196, "floor": 197, "floor_divid": 198, "greater": 199, "greater_equ": 200, "isfinit": 201, "isinf": 202, "isnan": 203, "less": 204, "less_equ": 205, "log": 206, "log10": 207, "log1p": 208, "log2": 209, "logaddexp": 210, "logical_and": 211, "logical_not": 212, "logical_or": 213, "logical_xor": 214, "maximum": 215, "minimum": 216, "multipli": 217, "neg": 218, "not_equ": 219, "posit": 220, "pow": 221, "remaind": 222, "round": 223, "sign": 224, "sin": 225, "sinh": 226, "sqrt": 227, "squar": 228, "subtract": 229, "trunc": 232, "all_equ": 234, "arg_nam": 235, "array_equ": 236, "arrays_equ": 237, "assert_supports_inplac": 238, "cache_fn": 239, "clip_matrix_norm": 240, "clip_vector_norm": 241, "container_typ": 242, "copy_arrai": 243, "cumprod": 244, "cumsum": 245, "current_backend_str": 246, "default": 247, "einops_rearrang": 248, "einops_reduc": 249, "einops_repeat": 250, "exist": 251, "floormod": 252, "fourier_encod": 253, "gather": 254, "gather_nd": 255, "get_all_arrays_in_memori": 256, "get_min_bas": 257, "get_min_denomin": 258, "get_num_dim": 259, "get_referrers_recurs": 260, "has_nan": 261, "indices_wher": 262, "inplace_arrays_support": 263, "inplace_decr": 264, "inplace_incr": 265, "inplace_upd": 266, "inplace_variables_support": 267, "is_arrai": 268, "is_ivy_arrai": 269, "is_ivy_contain": 270, "is_native_arrai": 271, "match_kwarg": 272, "multiprocess": 273, "num_arrays_in_memori": 274, "one_hot": 275, "print_all_arrays_in_memori": 276, "queue_timeout": 277, "scatter_flat": 278, "scatter_nd": 279, "set_min_bas": 280, "set_min_denomin": 281, "set_queue_timeout": 282, "set_tmp_dir": 283, "shape_to_tupl": 285, "stable_divid": 286, "stable_pow": 287, "supports_inplac": 288, "tmp_dir": 289, "to_list": 290, "to_numpi": 291, "to_scalar": 292, "try_else_non": 293, "unstack": 294, "value_is_nan": 295, "gradient": 296, "adam_step": 298, "adam_upd": 299, "execute_with_gradi": 300, "gradient_descent_upd": 301, "is_vari": 302, "lamb_upd": 303, "lars_upd": 304, "optimizer_upd": 305, "set_with_grad": 306, "stop_gradi": 307, "unset_with_grad": 308, "variabl": 309, "variable_data": 310, "with_grad": 311, "imag": 312, "bilinear_resampl": 313, "float_img_to_uint8_img": 314, "gradient_imag": 315, "linear_resampl": 316, "random_crop": 317, "stack_imag": 318, "uint8_img_to_float_img": 319, "layer": [320, 455], "conv1d": [321, 456], "conv1d_transpos": 322, "conv2d": [323, 458], "conv2d_transpos": 324, "conv3d": [325, 460], "conv3d_transpos": 326, "depthwise_conv2d": 327, "dropout": [328, 463], "linear": [329, 333, 465], "lstm_updat": 330, "multi_head_attent": 331, "scaled_dot_product_attent": 332, "algebra": 333, "choleski": 334, "cross": 335, "det": 336, "diagon": 337, "eigh": 338, "eigvalsh": 339, "inv": 340, "matmul": 341, "matrix_norm": 342, "matrix_pow": 343, "matrix_rank": 344, "matrix_transpos": 345, "outer": 346, "pinv": 347, "qr": 348, "slodget": 349, "solv": 350, "svd": 351, "svdval": 352, "tensordot": 353, "trace": 354, "vecdot": 355, "vector_norm": 356, "vector_to_skew_symmetric_matrix": 357, "loss": 358, "binary_cross_entropi": 359, "cross_entropi": 360, "sparse_cross_entropi": 361, "manipul": 362, "clip": 363, "concat": 364, "constant_pad": 365, "expand_dim": 366, "flip": 367, "permute_dim": 368, "repeat": 369, "reshap": 370, "split": 372, "squeez": 373, "stack": 374, "swapax": 375, "tile": 376, "zero_pad": 377, "meta": 378, "fomaml_step": 379, "maml_step": 380, "reptile_step": 381, "nest": 382, "all_nested_indic": 383, "copy_nest": 384, "index_nest": 385, "insert_into_nest_at_index": 386, "insert_into_nest_at_indic": 387, "map": 388, "map_nest_at_index": 389, "map_nest_at_indic": 390, "multi_index_nest": 391, "nested_ani": 392, "nested_indices_wher": 393, "nested_map": 394, "nested_multi_map": 395, "prune_nest_at_index": 396, "prune_nest_at_indic": 397, "set_nest_at_index": 398, "set_nest_at_indic": 399, "norm": [400, 469], "layer_norm": 401, "random": 402, "multinomi": 403, "randint": 404, "random_norm": 405, "random_uniform": 406, "seed": 407, "shuffl": 408, "search": 409, "argmax": 410, "argmin": 411, "nonzero": 412, "where": 413, "depend": [414, 415, 418], "output": [414, 415, 418], "unique_al": 415, "unique_count": 416, "unique_invers": 417, "unique_valu": 418, "sort": [419, 421], "argsort": 420, "statist": 422, "einsum": 423, "max": 424, "mean": 425, "min": 426, "prod": 427, "std": 428, "sum": 429, "var": 430, "util": 431, "all": 432, "ani": 433, "content": 434, "overview": 434, "quick": 434, "start": 434, "roadmap": [434, 440], "citat": 434, "inspect": 437, "add_array_spec": 438, "fn_array_spec": 439, "geglu": 442, "to_ivy_modul": 445, "firstlayersiren": 448, "glorotuniform": 449, "Ones": 451, "siren": 452, "conv1dtranspos": 457, "conv2dtranspos": 459, "conv3dtranspos": 461, "depthwiseconv2d": 462, "lstm": 464, "multiheadattent": 466, "layernorm": 470, "adam": 472, "lamb": 473, "lar": 474, "sgd": 476, "sequenti": [477, 478], "verbos": 480, "cprint": 481}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})